#pragma once
#pragma pack(push, 8)

#include <comdef.h>

namespace MSTSCLib {

//
// Forward references and typedefs
//

struct __declspec(uuid("8c11efa1-92c3-11d1-bc1e-00c04fa31489"))
/* LIBID */ __MSTSCLib;
struct __declspec(uuid("336d5562-efa8-482e-8cb3-c5c0fc7a7db6"))
/* dispinterface */ IMsTscAxEvents;
enum __MIDL___MIDL_itf_mstsax_0000_0043_0001;
enum __MIDL___MIDL_itf_mstsax_0000_0057_0001;
enum __MIDL___MIDL_itf_mstsax_0000_0057_0002;
struct /* coclass */ MsTscAxNotSafeForScripting;
struct __declspec(uuid("92b4a539-7115-4b7c-a5a9-e5d9efc2780a"))
/* dual interface */ IMsRdpClient;
struct __declspec(uuid("8c11efae-92c3-11d1-bc1e-00c04fa31489"))
/* dual interface */ IMsTscAx;
struct __declspec(uuid("327bb5cd-834e-4400-aef2-b30e15e5d682"))
/* dual interface */ IMsTscAx_Redist;
struct __declspec(uuid("c9d65442-a0f9-45b2-8f73-d61d2db8cbb6"))
/* dual interface */ IMsTscSecuredSettings;
struct __declspec(uuid("809945cc-4b3b-4a92-a6b0-dbf9b5f2ef2d"))
/* dual interface */ IMsTscAdvancedSettings;
struct __declspec(uuid("209d0eb9-6254-47b1-9033-a98dae55bb27"))
/* dual interface */ IMsTscDebug;
struct __declspec(uuid("3c65b4ab-12b3-465b-acd4-b8dad3bff9e2"))
/* dual interface */ IMsRdpClientAdvancedSettings;
struct __declspec(uuid("605befcf-39c1-45cc-a811-068fb7be346d"))
/* dual interface */ IMsRdpClientSecuredSettings;
enum __MIDL___MIDL_itf_mstsax_0000_0000_0001;
enum __MIDL_IMsRdpClient_0001;
struct __declspec(uuid("c1e6743a-41c1-4a74-832a-0dd06c1c7a0e"))
/* interface */ IMsTscNonScriptable;
struct __declspec(uuid("2f079c4c-87b2-4afd-97ab-20cdb43038ae"))
/* interface */ IMsRdpClientNonScriptable;
struct /* coclass */ MsTscAx;
struct /* coclass */ MsRdpClientNotSafeForScripting;
struct /* coclass */ MsRdpClient;
struct /* coclass */ MsRdpClient2NotSafeForScripting;
struct __declspec(uuid("e7e17dc4-3b71-4ba7-a8e6-281ffadca28f"))
/* dual interface */ IMsRdpClient2;
struct __declspec(uuid("9ac42117-2b76-4320-aa44-0e616ab8437b"))
/* dual interface */ IMsRdpClientAdvancedSettings2;
struct /* coclass */ MsRdpClient2;
struct /* coclass */ MsRdpClient2a;
struct /* coclass */ MsRdpClient3NotSafeForScripting;
struct __declspec(uuid("91b7cbc5-a72e-4fa0-9300-d647d7e897ff"))
/* dual interface */ IMsRdpClient3;
struct __declspec(uuid("19cd856b-c542-4c53-acee-f127e3be1a59"))
/* dual interface */ IMsRdpClientAdvancedSettings3;
struct /* coclass */ MsRdpClient3;
struct /* coclass */ MsRdpClient3a;
struct /* coclass */ MsRdpClient4NotSafeForScripting;
struct __declspec(uuid("095e0738-d97d-488b-b9f6-dd0e8d66c0de"))
/* dual interface */ IMsRdpClient4;
struct __declspec(uuid("fba7f64e-7345-4405-ae50-fa4a763dc0de"))
/* dual interface */ IMsRdpClientAdvancedSettings4;
struct __declspec(uuid("17a5e535-4072-4fa4-af32-c8d0d47345e9"))
/* interface */ IMsRdpClientNonScriptable2;
struct /* coclass */ MsRdpClient4;
struct /* coclass */ MsRdpClient4a;
struct /* coclass */ MsRdpClient5NotSafeForScripting;
struct __declspec(uuid("4eb5335b-6429-477d-b922-e06a28ecd8bf"))
/* dual interface */ IMsRdpClient5;
struct __declspec(uuid("720298c0-a099-46f5-9f82-96921bae4701"))
/* dual interface */ IMsRdpClientTransportSettings;
struct __declspec(uuid("fba7f64e-6783-4405-da45-fa4a763dabd0"))
/* dual interface */ IMsRdpClientAdvancedSettings5;
struct __declspec(uuid("fdd029f9-467a-4c49-8529-64b521dbd1b4"))
/* dual interface */ ITSRemoteProgram;
struct __declspec(uuid("d012ae6d-c19a-4bfe-b367-201f8911f134"))
/* dual interface */ IMsRdpClientShell;
struct __declspec(uuid("b3378d90-0728-45c7-8ed7-b6159fb92219"))
/* interface */ IMsRdpClientNonScriptable3;
struct __declspec(uuid("56540617-d281-488c-8738-6a8fdf64a118"))
/* interface */ IMsRdpDeviceCollection;
struct __declspec(uuid("60c3b9c8-9e92-4f5e-a3e7-604a912093ea"))
/* interface */ IMsRdpDevice;
struct __declspec(uuid("7ff17599-da2c-4677-ad35-f60c04fe1585"))
/* interface */ IMsRdpDriveCollection;
struct __declspec(uuid("d28b5458-f694-47a8-8e61-40356a767e46"))
/* interface */ IMsRdpDrive;
struct /* coclass */ MsRdpClient5;
struct /* coclass */ MsRdpClient6NotSafeForScripting;
struct __declspec(uuid("d43b7d80-8517-4b6d-9eac-96ad6800d7f2"))
/* dual interface */ IMsRdpClient6;
struct __declspec(uuid("222c4b5d-45d9-4df0-a7c6-60cf9089d285"))
/* dual interface */ IMsRdpClientAdvancedSettings6;
struct __declspec(uuid("67341688-d606-4c73-a5d2-2e0489009319"))
/* dual interface */ IMsRdpClientTransportSettings2;
struct __declspec(uuid("f50fa8aa-1c7d-4f59-b15c-a90cacae1fcb"))
/* interface */ IMsRdpClientNonScriptable4;
enum __MIDL_IMsRdpClientNonScriptable4_0001;
struct /* coclass */ MsRdpClient6;
struct /* coclass */ MsRdpClient7NotSafeForScripting;
struct __declspec(uuid("b2a5b5ce-3461-444a-91d4-add26d070638"))
/* dual interface */ IMsRdpClient7;
struct __declspec(uuid("26036036-4010-4578-8091-0db9a1edf9c3"))
/* dual interface */ IMsRdpClientAdvancedSettings7;
struct __declspec(uuid("3d5b21ac-748d-41de-8f30-e15169586bd4"))
/* dual interface */ IMsRdpClientTransportSettings3;
struct __declspec(uuid("25f2ce20-8b1d-4971-a7cd-549dae201fc0"))
/* dual interface */ IMsRdpClientSecuredSettings2;
struct __declspec(uuid("92c38a7d-241a-418c-9936-099872c9af20"))
/* dual interface */ ITSRemoteProgram2;
struct __declspec(uuid("4f6996d5-d7b1-412c-b0ff-063718566907"))
/* interface */ IMsRdpClientNonScriptable5;
struct __declspec(uuid("fdd029f9-9574-4def-8529-64b521cccaa4"))
/* interface */ IMsRdpPreferredRedirectionInfo;
struct __declspec(uuid("302d8188-0052-4807-806a-362b628f9ac5"))
/* interface */ IMsRdpExtendedSettings;
struct /* coclass */ MsRdpClient7;
struct /* coclass */ MsRdpClient8NotSafeForScripting;
struct __declspec(uuid("4247e044-9271-43a9-bc49-e2ad9e855d62"))
/* dual interface */ IMsRdpClient8;
enum __MIDL___MIDL_itf_mstsax_0000_0000_0004;
struct __declspec(uuid("89acb528-2557-4d16-8625-226a30e97e9a"))
/* dual interface */ IMsRdpClientAdvancedSettings8;
enum __MIDL___MIDL_itf_mstsax_0000_0000_0003;
enum __MIDL_IMsRdpClient8_0001;
struct /* coclass */ MsRdpClient8;
struct /* coclass */ MsRdpClient9NotSafeForScripting;
struct __declspec(uuid("28904001-04b6-436c-a55b-0af1a0883dc9"))
/* dual interface */ IMsRdpClient9;
struct __declspec(uuid("011c3236-4d81-4515-9143-067ab630d299"))
/* dual interface */ IMsRdpClientTransportSettings4;
struct /* coclass */ MsRdpClient9;
struct /* coclass */ MsRdpClient10NotSafeForScripting;
struct __declspec(uuid("7ed92c39-eb38-4927-a70a-708ac5a59321"))
/* dual interface */ IMsRdpClient10;
struct __declspec(uuid("4b84ea77-acea-418c-881a-4a8c28ab1510"))
/* dual interface */ ITSRemoteProgram3;
struct /* coclass */ MsRdpClient10;
struct /* coclass */ MsRdpClient11NotSafeForScripting;
struct __declspec(uuid("05293249-b28b-4bd8-be64-1b2f496b910e"))
/* interface */ IMsRdpClientNonScriptable6;
struct __declspec(uuid("71b4a60a-fe21-46d8-a39b-8e32ba0c5ecc"))
/* interface */ IMsRdpClientNonScriptable7;
struct __declspec(uuid("ae45252b-aaab-4504-b681-649d6073a37a"))
/* interface */ IMsRdpCameraRedirConfigCollection;
struct __declspec(uuid("09750604-d625-47c1-9fcd-f09f735705d7"))
/* interface */ IMsRdpCameraRedirConfig;
enum __MIDL___MIDL_itf_mstsax_0000_0008_0001;
struct __declspec(uuid("2e769ee8-00c7-43dc-afd9-235d75b72a40"))
/* interface */ IMsRdpClipboard;
struct /* coclass */ MsRdpClient11;
struct __declspec(uuid("079863b7-6d47-4105-8bfe-0cdcb360e67d"))
/* dispinterface */ IRemoteDesktopClientEvents;
struct /* coclass */ RemoteDesktopClient;
struct __declspec(uuid("57d25668-625a-4905-be4e-304caa13f89c"))
/* dual interface */ IRemoteDesktopClient;
struct __declspec(uuid("48a0f2a7-2713-431f-bbac-6f4558e7d64d"))
/* dual interface */ IRemoteDesktopClientSettings;
struct __declspec(uuid("7d54bc4e-1028-45d4-8b0a-b9b6bffba176"))
/* dual interface */ IRemoteDesktopClientActions;
enum __MIDL_IRemoteDesktopClientActions_0001;
enum __MIDL_IRemoteDesktopClientActions_0002;
enum __MIDL_IRemoteDesktopClientActions_0003;
struct __declspec(uuid("260ec22d-8cbc-44b5-9e88-2a37f6c93ae9"))
/* dual interface */ IRemoteDesktopClientTouchPointer;
typedef enum __MIDL___MIDL_itf_mstsax_0000_0043_0001 AutoReconnectContinueState;
typedef enum __MIDL___MIDL_itf_mstsax_0000_0057_0001 RemoteProgramResult;
typedef enum __MIDL___MIDL_itf_mstsax_0000_0057_0002 RemoteWindowDisplayedAttribute;
typedef enum __MIDL___MIDL_itf_mstsax_0000_0000_0001 ExtendedDisconnectReasonCode;
typedef enum __MIDL_IMsRdpClient_0001 ControlCloseStatus;
#if !defined(_WIN64)
typedef __w64 unsigned long UINT_PTR;
#else
typedef unsigned __int64 UINT_PTR;
#endif
#if !defined(_WIN64)
typedef __w64 long LONG_PTR;
#else
typedef __int64 LONG_PTR;
#endif
typedef enum __MIDL_IMsRdpClientNonScriptable4_0001 RedirectionWarningType;
typedef enum __MIDL___MIDL_itf_mstsax_0000_0000_0004 RemoteSessionActionType;
typedef enum __MIDL___MIDL_itf_mstsax_0000_0000_0003 ClientSpec;
typedef enum __MIDL_IMsRdpClient8_0001 ControlReconnectStatus;
typedef enum __MIDL___MIDL_itf_mstsax_0000_0008_0001 CameraRedirEncodingQuality;
typedef enum __MIDL_IRemoteDesktopClientActions_0001 RemoteActionType;
typedef enum __MIDL_IRemoteDesktopClientActions_0002 SnapshotEncodingType;
typedef enum __MIDL_IRemoteDesktopClientActions_0003 SnapshotFormatType;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(IMsTscAxEvents, __uuidof(IMsTscAxEvents));
_COM_SMARTPTR_TYPEDEF(IMsTscAx_Redist, __uuidof(IMsTscAx_Redist));
_COM_SMARTPTR_TYPEDEF(IMsTscSecuredSettings, __uuidof(IMsTscSecuredSettings));
_COM_SMARTPTR_TYPEDEF(IMsTscAdvancedSettings, __uuidof(IMsTscAdvancedSettings));
_COM_SMARTPTR_TYPEDEF(IMsTscDebug, __uuidof(IMsTscDebug));
_COM_SMARTPTR_TYPEDEF(IMsTscAx, __uuidof(IMsTscAx));
_COM_SMARTPTR_TYPEDEF(IMsRdpClientAdvancedSettings, __uuidof(IMsRdpClientAdvancedSettings));
_COM_SMARTPTR_TYPEDEF(IMsRdpClientSecuredSettings, __uuidof(IMsRdpClientSecuredSettings));
_COM_SMARTPTR_TYPEDEF(IMsRdpClient, __uuidof(IMsRdpClient));
_COM_SMARTPTR_TYPEDEF(IMsTscNonScriptable, __uuidof(IMsTscNonScriptable));
_COM_SMARTPTR_TYPEDEF(IMsRdpClientNonScriptable, __uuidof(IMsRdpClientNonScriptable));
_COM_SMARTPTR_TYPEDEF(IMsRdpClientAdvancedSettings2, __uuidof(IMsRdpClientAdvancedSettings2));
_COM_SMARTPTR_TYPEDEF(IMsRdpClient2, __uuidof(IMsRdpClient2));
_COM_SMARTPTR_TYPEDEF(IMsRdpClientAdvancedSettings3, __uuidof(IMsRdpClientAdvancedSettings3));
_COM_SMARTPTR_TYPEDEF(IMsRdpClient3, __uuidof(IMsRdpClient3));
_COM_SMARTPTR_TYPEDEF(IMsRdpClientAdvancedSettings4, __uuidof(IMsRdpClientAdvancedSettings4));
_COM_SMARTPTR_TYPEDEF(IMsRdpClient4, __uuidof(IMsRdpClient4));
_COM_SMARTPTR_TYPEDEF(IMsRdpClientNonScriptable2, __uuidof(IMsRdpClientNonScriptable2));
_COM_SMARTPTR_TYPEDEF(IMsRdpClientTransportSettings, __uuidof(IMsRdpClientTransportSettings));
_COM_SMARTPTR_TYPEDEF(IMsRdpClientAdvancedSettings5, __uuidof(IMsRdpClientAdvancedSettings5));
_COM_SMARTPTR_TYPEDEF(ITSRemoteProgram, __uuidof(ITSRemoteProgram));
_COM_SMARTPTR_TYPEDEF(IMsRdpClientShell, __uuidof(IMsRdpClientShell));
_COM_SMARTPTR_TYPEDEF(IMsRdpClient5, __uuidof(IMsRdpClient5));
_COM_SMARTPTR_TYPEDEF(IMsRdpDevice, __uuidof(IMsRdpDevice));
_COM_SMARTPTR_TYPEDEF(IMsRdpDeviceCollection, __uuidof(IMsRdpDeviceCollection));
_COM_SMARTPTR_TYPEDEF(IMsRdpDrive, __uuidof(IMsRdpDrive));
_COM_SMARTPTR_TYPEDEF(IMsRdpDriveCollection, __uuidof(IMsRdpDriveCollection));
_COM_SMARTPTR_TYPEDEF(IMsRdpClientNonScriptable3, __uuidof(IMsRdpClientNonScriptable3));
_COM_SMARTPTR_TYPEDEF(IMsRdpClientAdvancedSettings6, __uuidof(IMsRdpClientAdvancedSettings6));
_COM_SMARTPTR_TYPEDEF(IMsRdpClientTransportSettings2, __uuidof(IMsRdpClientTransportSettings2));
_COM_SMARTPTR_TYPEDEF(IMsRdpClient6, __uuidof(IMsRdpClient6));
_COM_SMARTPTR_TYPEDEF(IMsRdpClientNonScriptable4, __uuidof(IMsRdpClientNonScriptable4));
_COM_SMARTPTR_TYPEDEF(IMsRdpClientAdvancedSettings7, __uuidof(IMsRdpClientAdvancedSettings7));
_COM_SMARTPTR_TYPEDEF(IMsRdpClientTransportSettings3, __uuidof(IMsRdpClientTransportSettings3));
_COM_SMARTPTR_TYPEDEF(IMsRdpClientSecuredSettings2, __uuidof(IMsRdpClientSecuredSettings2));
_COM_SMARTPTR_TYPEDEF(ITSRemoteProgram2, __uuidof(ITSRemoteProgram2));
_COM_SMARTPTR_TYPEDEF(IMsRdpClient7, __uuidof(IMsRdpClient7));
_COM_SMARTPTR_TYPEDEF(IMsRdpClientNonScriptable5, __uuidof(IMsRdpClientNonScriptable5));
_COM_SMARTPTR_TYPEDEF(IMsRdpPreferredRedirectionInfo, __uuidof(IMsRdpPreferredRedirectionInfo));
_COM_SMARTPTR_TYPEDEF(IMsRdpExtendedSettings, __uuidof(IMsRdpExtendedSettings));
_COM_SMARTPTR_TYPEDEF(IMsRdpClientAdvancedSettings8, __uuidof(IMsRdpClientAdvancedSettings8));
_COM_SMARTPTR_TYPEDEF(IMsRdpClient8, __uuidof(IMsRdpClient8));
_COM_SMARTPTR_TYPEDEF(IMsRdpClientTransportSettings4, __uuidof(IMsRdpClientTransportSettings4));
_COM_SMARTPTR_TYPEDEF(IMsRdpClient9, __uuidof(IMsRdpClient9));
_COM_SMARTPTR_TYPEDEF(ITSRemoteProgram3, __uuidof(ITSRemoteProgram3));
_COM_SMARTPTR_TYPEDEF(IMsRdpClient10, __uuidof(IMsRdpClient10));
_COM_SMARTPTR_TYPEDEF(IMsRdpClientNonScriptable6, __uuidof(IMsRdpClientNonScriptable6));
_COM_SMARTPTR_TYPEDEF(IMsRdpCameraRedirConfig, __uuidof(IMsRdpCameraRedirConfig));
_COM_SMARTPTR_TYPEDEF(IMsRdpCameraRedirConfigCollection, __uuidof(IMsRdpCameraRedirConfigCollection));
_COM_SMARTPTR_TYPEDEF(IMsRdpClipboard, __uuidof(IMsRdpClipboard));
_COM_SMARTPTR_TYPEDEF(IMsRdpClientNonScriptable7, __uuidof(IMsRdpClientNonScriptable7));
_COM_SMARTPTR_TYPEDEF(IRemoteDesktopClientEvents, __uuidof(IRemoteDesktopClientEvents));
_COM_SMARTPTR_TYPEDEF(IRemoteDesktopClientSettings, __uuidof(IRemoteDesktopClientSettings));
_COM_SMARTPTR_TYPEDEF(IRemoteDesktopClientActions, __uuidof(IRemoteDesktopClientActions));
_COM_SMARTPTR_TYPEDEF(IRemoteDesktopClientTouchPointer, __uuidof(IRemoteDesktopClientTouchPointer));
_COM_SMARTPTR_TYPEDEF(IRemoteDesktopClient, __uuidof(IRemoteDesktopClient));

//
// Type library items
//

struct __declspec(uuid("336d5562-efa8-482e-8cb3-c5c0fc7a7db6"))
IMsTscAxEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT OnConnecting ( );
    HRESULT OnConnected ( );
    HRESULT OnLoginComplete ( );
    HRESULT OnDisconnected (
        long discReason );
    HRESULT OnEnterFullScreenMode ( );
    HRESULT OnLeaveFullScreenMode ( );
    HRESULT OnChannelReceivedData (
        _bstr_t chanName,
        _bstr_t data );
    HRESULT OnRequestGoFullScreen ( );
    HRESULT OnRequestLeaveFullScreen ( );
    HRESULT OnFatalError (
        long errorCode );
    HRESULT OnWarning (
        long warningCode );
    HRESULT OnRemoteDesktopSizeChange (
        long width,
        long height );
    HRESULT OnIdleTimeoutNotification ( );
    HRESULT OnRequestContainerMinimize ( );
    HRESULT OnConfirmClose (
        VARIANT_BOOL * pfAllowClose );
    HRESULT OnReceivedTSPublicKey (
        _bstr_t publicKey,
        VARIANT_BOOL * pfContinueLogon );
    HRESULT OnAutoReconnecting (
        long disconnectReason,
        long attemptCount,
        AutoReconnectContinueState * pArcContinueStatus );
    HRESULT OnAuthenticationWarningDisplayed ( );
    HRESULT OnAuthenticationWarningDismissed ( );
    HRESULT OnRemoteProgramResult (
        _bstr_t bstrRemoteProgram,
        RemoteProgramResult lError,
        VARIANT_BOOL vbIsExecutable );
    HRESULT OnRemoteProgramDisplayed (
        VARIANT_BOOL vbDisplayed,
        unsigned long uDisplayInformation );
    HRESULT OnRemoteWindowDisplayed (
        VARIANT_BOOL vbDisplayed,
        wireHWND hwnd,
        RemoteWindowDisplayedAttribute windowAttribute );
    HRESULT OnLogonError (
        long lError );
    HRESULT OnFocusReleased (
        int iDirection );
    HRESULT OnUserNameAcquired (
        _bstr_t bstrUserName );
    HRESULT OnMouseInputModeChanged (
        VARIANT_BOOL fMouseModeRelative );
    HRESULT OnServiceMessageReceived (
        _bstr_t serviceMessage );
    HRESULT OnConnectionBarPullDown ( );
    HRESULT OnNetworkStatusChanged (
        unsigned long qualityLevel,
        long bandwidth,
        long rtt );
    HRESULT OnDevicesButtonPressed ( );
    HRESULT OnAutoReconnected ( );
    HRESULT OnAutoReconnecting2 (
        long disconnectReason,
        VARIANT_BOOL networkAvailable,
        long attemptCount,
        long maxAttemptCount );
};

enum __MIDL___MIDL_itf_mstsax_0000_0043_0001
{
    autoReconnectContinueAutomatic = 0,
    autoReconnectContinueStop = 1,
    autoReconnectContinueManual = 2
};

enum __MIDL___MIDL_itf_mstsax_0000_0057_0001
{
    remoteAppResultOk = 0,
    remoteAppResultLocked = 1,
    remoteAppResultProtocolError = 2,
    remoteAppResultNotInWhitelist = 3,
    remoteAppResultNetworkPathDenied = 4,
    remoteAppResultFileNotFound = 5,
    remoteAppResultFailure = 6,
    remoteAppResultHookNotLoaded = 7
};

enum __MIDL___MIDL_itf_mstsax_0000_0057_0002
{
    remoteAppWindowNone = 0,
    remoteAppWindowDisplayed = 1,
    remoteAppShellIconDisplayed = 2
};

struct __declspec(uuid("a41a4187-5a86-4e26-b40a-856f9035d9cb"))
MsTscAxNotSafeForScripting;
    // interface IMsRdpClient
    // [ default ] interface IMsTscAx
    // interface IMsTscAx_Redist
    // [ default, source ] dispinterface IMsTscAxEvents
    // interface IMsTscNonScriptable
    // interface IMsRdpClientNonScriptable

struct __declspec(uuid("327bb5cd-834e-4400-aef2-b30e15e5d682"))
IMsTscAx_Redist : IDispatch
{};

struct __declspec(uuid("c9d65442-a0f9-45b2-8f73-d61d2db8cbb6"))
IMsTscSecuredSettings : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetStartProgram,put=PutStartProgram))
    _bstr_t StartProgram;
    __declspec(property(get=GetWorkDir,put=PutWorkDir))
    _bstr_t WorkDir;
    __declspec(property(get=GetFullScreen,put=PutFullScreen))
    long FullScreen;

    //
    // Wrapper methods for error-handling
    //

    void PutStartProgram (
        _bstr_t pStartProgram );
    _bstr_t GetStartProgram ( );
    void PutWorkDir (
        _bstr_t pWorkDir );
    _bstr_t GetWorkDir ( );
    void PutFullScreen (
        long pfFullScreen );
    long GetFullScreen ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_StartProgram (
        /*[in]*/ BSTR pStartProgram ) = 0;
      virtual HRESULT __stdcall get_StartProgram (
        /*[out,retval]*/ BSTR * pStartProgram ) = 0;
      virtual HRESULT __stdcall put_WorkDir (
        /*[in]*/ BSTR pWorkDir ) = 0;
      virtual HRESULT __stdcall get_WorkDir (
        /*[out,retval]*/ BSTR * pWorkDir ) = 0;
      virtual HRESULT __stdcall put_FullScreen (
        /*[in]*/ long pfFullScreen ) = 0;
      virtual HRESULT __stdcall get_FullScreen (
        /*[out,retval]*/ long * pfFullScreen ) = 0;
};

struct __declspec(uuid("809945cc-4b3b-4a92-a6b0-dbf9b5f2ef2d"))
IMsTscAdvancedSettings : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetallowBackgroundInput,put=PutallowBackgroundInput))
    long allowBackgroundInput;
    __declspec(property(put=PutKeyBoardLayoutStr))
    _bstr_t KeyBoardLayoutStr;
    __declspec(property(put=PutPluginDlls))
    _bstr_t PluginDlls;
    __declspec(property(put=PutIconFile))
    _bstr_t IconFile;
    __declspec(property(put=PutIconIndex))
    long IconIndex;
    __declspec(property(get=GetContainerHandledFullScreen,put=PutContainerHandledFullScreen))
    long ContainerHandledFullScreen;
    __declspec(property(get=GetDisableRdpdr,put=PutDisableRdpdr))
    long DisableRdpdr;
    __declspec(property(get=GetCompress,put=PutCompress))
    long Compress;
    __declspec(property(get=GetBitmapPeristence,put=PutBitmapPeristence))
    long BitmapPeristence;

    //
    // Wrapper methods for error-handling
    //

    void PutCompress (
        long pcompress );
    long GetCompress ( );
    void PutBitmapPeristence (
        long pbitmapPeristence );
    long GetBitmapPeristence ( );
    void PutallowBackgroundInput (
        long pallowBackgroundInput );
    long GetallowBackgroundInput ( );
    void PutKeyBoardLayoutStr (
        _bstr_t _arg1 );
    void PutPluginDlls (
        _bstr_t _arg1 );
    void PutIconFile (
        _bstr_t _arg1 );
    void PutIconIndex (
        long _arg1 );
    void PutContainerHandledFullScreen (
        long pContainerHandledFullScreen );
    long GetContainerHandledFullScreen ( );
    void PutDisableRdpdr (
        long pDisableRdpdr );
    long GetDisableRdpdr ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_Compress (
        /*[in]*/ long pcompress ) = 0;
      virtual HRESULT __stdcall get_Compress (
        /*[out,retval]*/ long * pcompress ) = 0;
      virtual HRESULT __stdcall put_BitmapPeristence (
        /*[in]*/ long pbitmapPeristence ) = 0;
      virtual HRESULT __stdcall get_BitmapPeristence (
        /*[out,retval]*/ long * pbitmapPeristence ) = 0;
      virtual HRESULT __stdcall put_allowBackgroundInput (
        /*[in]*/ long pallowBackgroundInput ) = 0;
      virtual HRESULT __stdcall get_allowBackgroundInput (
        /*[out,retval]*/ long * pallowBackgroundInput ) = 0;
      virtual HRESULT __stdcall put_KeyBoardLayoutStr (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall put_PluginDlls (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall put_IconFile (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall put_IconIndex (
        /*[in]*/ long _arg1 ) = 0;
      virtual HRESULT __stdcall put_ContainerHandledFullScreen (
        /*[in]*/ long pContainerHandledFullScreen ) = 0;
      virtual HRESULT __stdcall get_ContainerHandledFullScreen (
        /*[out,retval]*/ long * pContainerHandledFullScreen ) = 0;
      virtual HRESULT __stdcall put_DisableRdpdr (
        /*[in]*/ long pDisableRdpdr ) = 0;
      virtual HRESULT __stdcall get_DisableRdpdr (
        /*[out,retval]*/ long * pDisableRdpdr ) = 0;
};

struct __declspec(uuid("209d0eb9-6254-47b1-9033-a98dae55bb27"))
IMsTscDebug : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetHatchBitmapPDU,put=PutHatchBitmapPDU))
    long HatchBitmapPDU;
    __declspec(property(get=GetHatchSSBOrder,put=PutHatchSSBOrder))
    long HatchSSBOrder;
    __declspec(property(get=GetHatchMembltOrder,put=PutHatchMembltOrder))
    long HatchMembltOrder;
    __declspec(property(get=GetHatchIndexPDU,put=PutHatchIndexPDU))
    long HatchIndexPDU;
    __declspec(property(get=GetLabelMemblt,put=PutLabelMemblt))
    long LabelMemblt;
    __declspec(property(get=GetBitmapCacheMonitor,put=PutBitmapCacheMonitor))
    long BitmapCacheMonitor;
    __declspec(property(get=GetMallocFailuresPercent,put=PutMallocFailuresPercent))
    long MallocFailuresPercent;
    __declspec(property(get=GetMallocHugeFailuresPercent,put=PutMallocHugeFailuresPercent))
    long MallocHugeFailuresPercent;
    __declspec(property(get=GetNetThroughput,put=PutNetThroughput))
    long NetThroughput;
    __declspec(property(get=GetCLXCmdLine,put=PutCLXCmdLine))
    _bstr_t CLXCmdLine;
    __declspec(property(get=GetCLXDll,put=PutCLXDll))
    _bstr_t CLXDll;
    __declspec(property(get=GetRemoteProgramsHatchVisibleRegion,put=PutRemoteProgramsHatchVisibleRegion))
    long RemoteProgramsHatchVisibleRegion;
    __declspec(property(get=GetRemoteProgramsHatchVisibleNoDataRegion,put=PutRemoteProgramsHatchVisibleNoDataRegion))
    long RemoteProgramsHatchVisibleNoDataRegion;
    __declspec(property(get=GetRemoteProgramsHatchNonVisibleRegion,put=PutRemoteProgramsHatchNonVisibleRegion))
    long RemoteProgramsHatchNonVisibleRegion;
    __declspec(property(get=GetRemoteProgramsHatchWindow,put=PutRemoteProgramsHatchWindow))
    long RemoteProgramsHatchWindow;
    __declspec(property(get=GetRemoteProgramsStayConnectOnBadCaps,put=PutRemoteProgramsStayConnectOnBadCaps))
    long RemoteProgramsStayConnectOnBadCaps;
    __declspec(property(get=GetControlType))
    unsigned int ControlType;
    __declspec(property(put=PutDecodeGfx))
    VARIANT_BOOL DecodeGfx;

    //
    // Wrapper methods for error-handling
    //

    void PutHatchBitmapPDU (
        long phatchBitmapPDU );
    long GetHatchBitmapPDU ( );
    void PutHatchSSBOrder (
        long phatchSSBOrder );
    long GetHatchSSBOrder ( );
    void PutHatchMembltOrder (
        long phatchMembltOrder );
    long GetHatchMembltOrder ( );
    void PutHatchIndexPDU (
        long phatchIndexPDU );
    long GetHatchIndexPDU ( );
    void PutLabelMemblt (
        long plabelMemblt );
    long GetLabelMemblt ( );
    void PutBitmapCacheMonitor (
        long pbitmapCacheMonitor );
    long GetBitmapCacheMonitor ( );
    void PutMallocFailuresPercent (
        long pmallocFailuresPercent );
    long GetMallocFailuresPercent ( );
    void PutMallocHugeFailuresPercent (
        long pmallocHugeFailuresPercent );
    long GetMallocHugeFailuresPercent ( );
    void PutNetThroughput (
        long NetThroughput );
    long GetNetThroughput ( );
    void PutCLXCmdLine (
        _bstr_t pCLXCmdLine );
    _bstr_t GetCLXCmdLine ( );
    void PutCLXDll (
        _bstr_t pCLXDll );
    _bstr_t GetCLXDll ( );
    void PutRemoteProgramsHatchVisibleRegion (
        long pcbHatch );
    long GetRemoteProgramsHatchVisibleRegion ( );
    void PutRemoteProgramsHatchVisibleNoDataRegion (
        long pcbHatch );
    long GetRemoteProgramsHatchVisibleNoDataRegion ( );
    void PutRemoteProgramsHatchNonVisibleRegion (
        long pcbHatch );
    long GetRemoteProgramsHatchNonVisibleRegion ( );
    void PutRemoteProgramsHatchWindow (
        long pcbHatch );
    long GetRemoteProgramsHatchWindow ( );
    void PutRemoteProgramsStayConnectOnBadCaps (
        long pcbStayConnected );
    long GetRemoteProgramsStayConnectOnBadCaps ( );
    unsigned int GetControlType ( );
    void PutDecodeGfx (
        VARIANT_BOOL _arg1 );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_HatchBitmapPDU (
        /*[in]*/ long phatchBitmapPDU ) = 0;
      virtual HRESULT __stdcall get_HatchBitmapPDU (
        /*[out,retval]*/ long * phatchBitmapPDU ) = 0;
      virtual HRESULT __stdcall put_HatchSSBOrder (
        /*[in]*/ long phatchSSBOrder ) = 0;
      virtual HRESULT __stdcall get_HatchSSBOrder (
        /*[out,retval]*/ long * phatchSSBOrder ) = 0;
      virtual HRESULT __stdcall put_HatchMembltOrder (
        /*[in]*/ long phatchMembltOrder ) = 0;
      virtual HRESULT __stdcall get_HatchMembltOrder (
        /*[out,retval]*/ long * phatchMembltOrder ) = 0;
      virtual HRESULT __stdcall put_HatchIndexPDU (
        /*[in]*/ long phatchIndexPDU ) = 0;
      virtual HRESULT __stdcall get_HatchIndexPDU (
        /*[out,retval]*/ long * phatchIndexPDU ) = 0;
      virtual HRESULT __stdcall put_LabelMemblt (
        /*[in]*/ long plabelMemblt ) = 0;
      virtual HRESULT __stdcall get_LabelMemblt (
        /*[out,retval]*/ long * plabelMemblt ) = 0;
      virtual HRESULT __stdcall put_BitmapCacheMonitor (
        /*[in]*/ long pbitmapCacheMonitor ) = 0;
      virtual HRESULT __stdcall get_BitmapCacheMonitor (
        /*[out,retval]*/ long * pbitmapCacheMonitor ) = 0;
      virtual HRESULT __stdcall put_MallocFailuresPercent (
        /*[in]*/ long pmallocFailuresPercent ) = 0;
      virtual HRESULT __stdcall get_MallocFailuresPercent (
        /*[out,retval]*/ long * pmallocFailuresPercent ) = 0;
      virtual HRESULT __stdcall put_MallocHugeFailuresPercent (
        /*[in]*/ long pmallocHugeFailuresPercent ) = 0;
      virtual HRESULT __stdcall get_MallocHugeFailuresPercent (
        /*[out,retval]*/ long * pmallocHugeFailuresPercent ) = 0;
      virtual HRESULT __stdcall put_NetThroughput (
        /*[in]*/ long NetThroughput ) = 0;
      virtual HRESULT __stdcall get_NetThroughput (
        /*[out,retval]*/ long * NetThroughput ) = 0;
      virtual HRESULT __stdcall put_CLXCmdLine (
        /*[in]*/ BSTR pCLXCmdLine ) = 0;
      virtual HRESULT __stdcall get_CLXCmdLine (
        /*[out,retval]*/ BSTR * pCLXCmdLine ) = 0;
      virtual HRESULT __stdcall put_CLXDll (
        /*[in]*/ BSTR pCLXDll ) = 0;
      virtual HRESULT __stdcall get_CLXDll (
        /*[out,retval]*/ BSTR * pCLXDll ) = 0;
      virtual HRESULT __stdcall put_RemoteProgramsHatchVisibleRegion (
        /*[in]*/ long pcbHatch ) = 0;
      virtual HRESULT __stdcall get_RemoteProgramsHatchVisibleRegion (
        /*[out,retval]*/ long * pcbHatch ) = 0;
      virtual HRESULT __stdcall put_RemoteProgramsHatchVisibleNoDataRegion (
        /*[in]*/ long pcbHatch ) = 0;
      virtual HRESULT __stdcall get_RemoteProgramsHatchVisibleNoDataRegion (
        /*[out,retval]*/ long * pcbHatch ) = 0;
      virtual HRESULT __stdcall put_RemoteProgramsHatchNonVisibleRegion (
        /*[in]*/ long pcbHatch ) = 0;
      virtual HRESULT __stdcall get_RemoteProgramsHatchNonVisibleRegion (
        /*[out,retval]*/ long * pcbHatch ) = 0;
      virtual HRESULT __stdcall put_RemoteProgramsHatchWindow (
        /*[in]*/ long pcbHatch ) = 0;
      virtual HRESULT __stdcall get_RemoteProgramsHatchWindow (
        /*[out,retval]*/ long * pcbHatch ) = 0;
      virtual HRESULT __stdcall put_RemoteProgramsStayConnectOnBadCaps (
        /*[in]*/ long pcbStayConnected ) = 0;
      virtual HRESULT __stdcall get_RemoteProgramsStayConnectOnBadCaps (
        /*[out,retval]*/ long * pcbStayConnected ) = 0;
      virtual HRESULT __stdcall get_ControlType (
        /*[out,retval]*/ unsigned int * pControlType ) = 0;
      virtual HRESULT __stdcall put_DecodeGfx (
        /*[in]*/ VARIANT_BOOL _arg1 ) = 0;
};

struct __declspec(uuid("8c11efae-92c3-11d1-bc1e-00c04fa31489"))
IMsTscAx : IMsTscAx_Redist
{
    //
    // Property data
    //

    __declspec(property(get=GetServer,put=PutServer))
    _bstr_t Server;
    __declspec(property(get=GetDomain,put=PutDomain))
    _bstr_t Domain;
    __declspec(property(get=GetUserName,put=PutUserName))
    _bstr_t UserName;
    __declspec(property(get=GetDisconnectedText,put=PutDisconnectedText))
    _bstr_t DisconnectedText;
    __declspec(property(get=GetConnectingText,put=PutConnectingText))
    _bstr_t ConnectingText;
    __declspec(property(get=GetConnected))
    short Connected;
    __declspec(property(get=GetSecuredSettings))
    IMsTscSecuredSettingsPtr SecuredSettings;
    __declspec(property(get=GetAdvancedSettings))
    IMsTscAdvancedSettingsPtr AdvancedSettings;
    __declspec(property(get=GetDebugger))
    IMsTscDebugPtr Debugger;
    __declspec(property(get=GetDesktopWidth,put=PutDesktopWidth))
    long DesktopWidth;
    __declspec(property(get=GetDesktopHeight,put=PutDesktopHeight))
    long DesktopHeight;
    __declspec(property(get=GetStartConnected,put=PutStartConnected))
    long StartConnected;
    __declspec(property(get=GetHorizontalScrollBarVisible))
    long HorizontalScrollBarVisible;
    __declspec(property(get=GetVerticalScrollBarVisible))
    long VerticalScrollBarVisible;
    __declspec(property(put=PutFullScreenTitle))
    _bstr_t FullScreenTitle;
    __declspec(property(get=GetCipherStrength))
    long CipherStrength;
    __declspec(property(get=GetVersion))
    _bstr_t Version;
    __declspec(property(get=GetSecuredSettingsEnabled))
    long SecuredSettingsEnabled;

    //
    // Wrapper methods for error-handling
    //

    void PutServer (
        _bstr_t pServer );
    _bstr_t GetServer ( );
    void PutDomain (
        _bstr_t pDomain );
    _bstr_t GetDomain ( );
    void PutUserName (
        _bstr_t pUserName );
    _bstr_t GetUserName ( );
    void PutDisconnectedText (
        _bstr_t pDisconnectedText );
    _bstr_t GetDisconnectedText ( );
    void PutConnectingText (
        _bstr_t pConnectingText );
    _bstr_t GetConnectingText ( );
    short GetConnected ( );
    void PutDesktopWidth (
        long pVal );
    long GetDesktopWidth ( );
    void PutDesktopHeight (
        long pVal );
    long GetDesktopHeight ( );
    void PutStartConnected (
        long pfStartConnected );
    long GetStartConnected ( );
    long GetHorizontalScrollBarVisible ( );
    long GetVerticalScrollBarVisible ( );
    void PutFullScreenTitle (
        _bstr_t _arg1 );
    long GetCipherStrength ( );
    _bstr_t GetVersion ( );
    long GetSecuredSettingsEnabled ( );
    IMsTscSecuredSettingsPtr GetSecuredSettings ( );
    IMsTscAdvancedSettingsPtr GetAdvancedSettings ( );
    IMsTscDebugPtr GetDebugger ( );
    HRESULT Connect ( );
    HRESULT Disconnect ( );
    HRESULT CreateVirtualChannels (
        _bstr_t newVal );
    HRESULT SendOnVirtualChannel (
        _bstr_t chanName,
        _bstr_t ChanData );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_Server (
        /*[in]*/ BSTR pServer ) = 0;
      virtual HRESULT __stdcall get_Server (
        /*[out,retval]*/ BSTR * pServer ) = 0;
      virtual HRESULT __stdcall put_Domain (
        /*[in]*/ BSTR pDomain ) = 0;
      virtual HRESULT __stdcall get_Domain (
        /*[out,retval]*/ BSTR * pDomain ) = 0;
      virtual HRESULT __stdcall put_UserName (
        /*[in]*/ BSTR pUserName ) = 0;
      virtual HRESULT __stdcall get_UserName (
        /*[out,retval]*/ BSTR * pUserName ) = 0;
      virtual HRESULT __stdcall put_DisconnectedText (
        /*[in]*/ BSTR pDisconnectedText ) = 0;
      virtual HRESULT __stdcall get_DisconnectedText (
        /*[out,retval]*/ BSTR * pDisconnectedText ) = 0;
      virtual HRESULT __stdcall put_ConnectingText (
        /*[in]*/ BSTR pConnectingText ) = 0;
      virtual HRESULT __stdcall get_ConnectingText (
        /*[out,retval]*/ BSTR * pConnectingText ) = 0;
      virtual HRESULT __stdcall get_Connected (
        /*[out,retval]*/ short * pIsConnected ) = 0;
      virtual HRESULT __stdcall put_DesktopWidth (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_DesktopWidth (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_DesktopHeight (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_DesktopHeight (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_StartConnected (
        /*[in]*/ long pfStartConnected ) = 0;
      virtual HRESULT __stdcall get_StartConnected (
        /*[out,retval]*/ long * pfStartConnected ) = 0;
      virtual HRESULT __stdcall get_HorizontalScrollBarVisible (
        /*[out,retval]*/ long * pfHScrollVisible ) = 0;
      virtual HRESULT __stdcall get_VerticalScrollBarVisible (
        /*[out,retval]*/ long * pfVScrollVisible ) = 0;
      virtual HRESULT __stdcall put_FullScreenTitle (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall get_CipherStrength (
        /*[out,retval]*/ long * pCipherStrength ) = 0;
      virtual HRESULT __stdcall get_Version (
        /*[out,retval]*/ BSTR * pVersion ) = 0;
      virtual HRESULT __stdcall get_SecuredSettingsEnabled (
        /*[out,retval]*/ long * pSecuredSettingsEnabled ) = 0;
      virtual HRESULT __stdcall get_SecuredSettings (
        /*[out,retval]*/ struct IMsTscSecuredSettings * * ppSecuredSettings ) = 0;
      virtual HRESULT __stdcall get_AdvancedSettings (
        /*[out,retval]*/ struct IMsTscAdvancedSettings * * ppAdvSettings ) = 0;
      virtual HRESULT __stdcall get_Debugger (
        /*[out,retval]*/ struct IMsTscDebug * * ppDebugger ) = 0;
      virtual HRESULT __stdcall raw_Connect ( ) = 0;
      virtual HRESULT __stdcall raw_Disconnect ( ) = 0;
      virtual HRESULT __stdcall raw_CreateVirtualChannels (
        /*[in]*/ BSTR newVal ) = 0;
      virtual HRESULT __stdcall raw_SendOnVirtualChannel (
        /*[in]*/ BSTR chanName,
        /*[in]*/ BSTR ChanData ) = 0;
};

struct __declspec(uuid("3c65b4ab-12b3-465b-acd4-b8dad3bff9e2"))
IMsRdpClientAdvancedSettings : IMsTscAdvancedSettings
{
    //
    // Property data
    //

    __declspec(property(get=GetDisableCtrlAltDel,put=PutDisableCtrlAltDel))
    long DisableCtrlAltDel;
    __declspec(property(get=GetEnableWindowsKey,put=PutEnableWindowsKey))
    long EnableWindowsKey;
    __declspec(property(get=GetDoubleClickDetect,put=PutDoubleClickDetect))
    long DoubleClickDetect;
    __declspec(property(get=GetMaximizeShell,put=PutMaximizeShell))
    long MaximizeShell;
    __declspec(property(get=GetHotKeyFullScreen,put=PutHotKeyFullScreen))
    long HotKeyFullScreen;
    __declspec(property(get=GetHotKeyCtrlEsc,put=PutHotKeyCtrlEsc))
    long HotKeyCtrlEsc;
    __declspec(property(get=GetHotKeyAltEsc,put=PutHotKeyAltEsc))
    long HotKeyAltEsc;
    __declspec(property(get=GetHotKeyAltTab,put=PutHotKeyAltTab))
    long HotKeyAltTab;
    __declspec(property(get=GetHotKeyAltShiftTab,put=PutHotKeyAltShiftTab))
    long HotKeyAltShiftTab;
    __declspec(property(get=GetHotKeyAltSpace,put=PutHotKeyAltSpace))
    long HotKeyAltSpace;
    __declspec(property(get=GetHotKeyCtrlAltDel,put=PutHotKeyCtrlAltDel))
    long HotKeyCtrlAltDel;
    __declspec(property(get=GetorderDrawThreshold,put=PutorderDrawThreshold))
    long orderDrawThreshold;
    __declspec(property(get=GetBitmapCacheSize,put=PutBitmapCacheSize))
    long BitmapCacheSize;
    __declspec(property(get=GetBitmapVirtualCacheSize,put=PutBitmapVirtualCacheSize))
    long BitmapVirtualCacheSize;
    __declspec(property(get=GetNumBitmapCaches,put=PutNumBitmapCaches))
    long NumBitmapCaches;
    __declspec(property(get=GetCachePersistenceActive,put=PutCachePersistenceActive))
    long CachePersistenceActive;
    __declspec(property(put=PutPersistCacheDirectory))
    _bstr_t PersistCacheDirectory;
    __declspec(property(get=GetbrushSupportLevel,put=PutbrushSupportLevel))
    long brushSupportLevel;
    __declspec(property(get=GetminInputSendInterval,put=PutminInputSendInterval))
    long minInputSendInterval;
    __declspec(property(get=GetInputEventsAtOnce,put=PutInputEventsAtOnce))
    long InputEventsAtOnce;
    __declspec(property(get=GetmaxEventCount,put=PutmaxEventCount))
    long maxEventCount;
    __declspec(property(get=GetkeepAliveInterval,put=PutkeepAliveInterval))
    long keepAliveInterval;
    __declspec(property(get=GetshutdownTimeout,put=PutshutdownTimeout))
    long shutdownTimeout;
    __declspec(property(get=GetoverallConnectionTimeout,put=PutoverallConnectionTimeout))
    long overallConnectionTimeout;
    __declspec(property(get=GetsingleConnectionTimeout,put=PutsingleConnectionTimeout))
    long singleConnectionTimeout;
    __declspec(property(get=GetKeyboardType,put=PutKeyboardType))
    long KeyboardType;
    __declspec(property(get=GetKeyboardSubType,put=PutKeyboardSubType))
    long KeyboardSubType;
    __declspec(property(get=GetKeyboardFunctionKey,put=PutKeyboardFunctionKey))
    long KeyboardFunctionKey;
    __declspec(property(get=GetWinceFixedPalette,put=PutWinceFixedPalette))
    long WinceFixedPalette;
    __declspec(property(get=GetScaleBitmapCachesByBPP,put=PutScaleBitmapCachesByBPP))
    long ScaleBitmapCachesByBPP;
    __declspec(property(get=GetConnectToServerConsole,put=PutConnectToServerConsole))
    VARIANT_BOOL ConnectToServerConsole;
    __declspec(property(get=GetBitmapPersistence,put=PutBitmapPersistence))
    long BitmapPersistence;
    __declspec(property(get=GetMinutesToIdleTimeout,put=PutMinutesToIdleTimeout))
    long MinutesToIdleTimeout;
    __declspec(property(get=GetSmartSizing,put=PutSmartSizing))
    VARIANT_BOOL SmartSizing;
    __declspec(property(get=GetRdpdrLocalPrintingDocName,put=PutRdpdrLocalPrintingDocName))
    _bstr_t RdpdrLocalPrintingDocName;
    __declspec(property(put=PutClearTextPassword))
    _bstr_t ClearTextPassword;
    __declspec(property(get=GetDisplayConnectionBar,put=PutDisplayConnectionBar))
    VARIANT_BOOL DisplayConnectionBar;
    __declspec(property(get=GetPinConnectionBar,put=PutPinConnectionBar))
    VARIANT_BOOL PinConnectionBar;
    __declspec(property(get=GetGrabFocusOnConnect,put=PutGrabFocusOnConnect))
    VARIANT_BOOL GrabFocusOnConnect;
    __declspec(property(get=GetLoadBalanceInfo,put=PutLoadBalanceInfo))
    _bstr_t LoadBalanceInfo;
    __declspec(property(get=GetRedirectDrives,put=PutRedirectDrives))
    VARIANT_BOOL RedirectDrives;
    __declspec(property(get=GetRedirectPrinters,put=PutRedirectPrinters))
    VARIANT_BOOL RedirectPrinters;
    __declspec(property(get=GetRedirectPorts,put=PutRedirectPorts))
    VARIANT_BOOL RedirectPorts;
    __declspec(property(get=GetRedirectSmartCards,put=PutRedirectSmartCards))
    VARIANT_BOOL RedirectSmartCards;
    __declspec(property(get=GetBitmapVirtualCache16BppSize,put=PutBitmapVirtualCache16BppSize))
    long BitmapVirtualCache16BppSize;
    __declspec(property(get=GetBitmapVirtualCache24BppSize,put=PutBitmapVirtualCache24BppSize))
    long BitmapVirtualCache24BppSize;
    __declspec(property(get=GetPerformanceFlags,put=PutPerformanceFlags))
    long PerformanceFlags;
    __declspec(property(get=GetRdpdrClipCleanTempDirString,put=PutRdpdrClipCleanTempDirString))
    _bstr_t RdpdrClipCleanTempDirString;
    __declspec(property(get=GetRdpdrClipPasteInfoString,put=PutRdpdrClipPasteInfoString))
    _bstr_t RdpdrClipPasteInfoString;
    __declspec(property(put=PutConnectWithEndpoint))
    VARIANT * ConnectWithEndpoint;
    __declspec(property(get=GetNotifyTSPublicKey,put=PutNotifyTSPublicKey))
    VARIANT_BOOL NotifyTSPublicKey;
    __declspec(property(get=GetSmoothScroll,put=PutSmoothScroll))
    long SmoothScroll;
    __declspec(property(get=GetAcceleratorPassthrough,put=PutAcceleratorPassthrough))
    long AcceleratorPassthrough;
    __declspec(property(get=GetShadowBitmap,put=PutShadowBitmap))
    long ShadowBitmap;
    __declspec(property(get=GetTransportType,put=PutTransportType))
    long TransportType;
    __declspec(property(get=GetSasSequence,put=PutSasSequence))
    long SasSequence;
    __declspec(property(get=GetEncryptionEnabled,put=PutEncryptionEnabled))
    long EncryptionEnabled;
    __declspec(property(get=GetDedicatedTerminal,put=PutDedicatedTerminal))
    long DedicatedTerminal;
    __declspec(property(get=GetRDPPort,put=PutRDPPort))
    long RDPPort;
    __declspec(property(get=GetEnableMouse,put=PutEnableMouse))
    long EnableMouse;

    //
    // Wrapper methods for error-handling
    //

    void PutSmoothScroll (
        long psmoothScroll );
    long GetSmoothScroll ( );
    void PutAcceleratorPassthrough (
        long pacceleratorPassthrough );
    long GetAcceleratorPassthrough ( );
    void PutShadowBitmap (
        long pshadowBitmap );
    long GetShadowBitmap ( );
    void PutTransportType (
        long ptransportType );
    long GetTransportType ( );
    void PutSasSequence (
        long psasSequence );
    long GetSasSequence ( );
    void PutEncryptionEnabled (
        long pencryptionEnabled );
    long GetEncryptionEnabled ( );
    void PutDedicatedTerminal (
        long pdedicatedTerminal );
    long GetDedicatedTerminal ( );
    void PutRDPPort (
        long prdpPort );
    long GetRDPPort ( );
    void PutEnableMouse (
        long penableMouse );
    long GetEnableMouse ( );
    void PutDisableCtrlAltDel (
        long pdisableCtrlAltDel );
    long GetDisableCtrlAltDel ( );
    void PutEnableWindowsKey (
        long penableWindowsKey );
    long GetEnableWindowsKey ( );
    void PutDoubleClickDetect (
        long pdoubleClickDetect );
    long GetDoubleClickDetect ( );
    void PutMaximizeShell (
        long pmaximizeShell );
    long GetMaximizeShell ( );
    void PutHotKeyFullScreen (
        long photKeyFullScreen );
    long GetHotKeyFullScreen ( );
    void PutHotKeyCtrlEsc (
        long photKeyCtrlEsc );
    long GetHotKeyCtrlEsc ( );
    void PutHotKeyAltEsc (
        long photKeyAltEsc );
    long GetHotKeyAltEsc ( );
    void PutHotKeyAltTab (
        long photKeyAltTab );
    long GetHotKeyAltTab ( );
    void PutHotKeyAltShiftTab (
        long photKeyAltShiftTab );
    long GetHotKeyAltShiftTab ( );
    void PutHotKeyAltSpace (
        long photKeyAltSpace );
    long GetHotKeyAltSpace ( );
    void PutHotKeyCtrlAltDel (
        long photKeyCtrlAltDel );
    long GetHotKeyCtrlAltDel ( );
    void PutorderDrawThreshold (
        long porderDrawThreshold );
    long GetorderDrawThreshold ( );
    void PutBitmapCacheSize (
        long pbitmapCacheSize );
    long GetBitmapCacheSize ( );
    void PutBitmapVirtualCacheSize (
        long pbitmapVirtualCacheSize );
    long GetBitmapVirtualCacheSize ( );
    void PutScaleBitmapCachesByBPP (
        long pbScale );
    long GetScaleBitmapCachesByBPP ( );
    void PutNumBitmapCaches (
        long pnumBitmapCaches );
    long GetNumBitmapCaches ( );
    void PutCachePersistenceActive (
        long pcachePersistenceActive );
    long GetCachePersistenceActive ( );
    void PutPersistCacheDirectory (
        _bstr_t _arg1 );
    void PutbrushSupportLevel (
        long pbrushSupportLevel );
    long GetbrushSupportLevel ( );
    void PutminInputSendInterval (
        long pminInputSendInterval );
    long GetminInputSendInterval ( );
    void PutInputEventsAtOnce (
        long pinputEventsAtOnce );
    long GetInputEventsAtOnce ( );
    void PutmaxEventCount (
        long pmaxEventCount );
    long GetmaxEventCount ( );
    void PutkeepAliveInterval (
        long pkeepAliveInterval );
    long GetkeepAliveInterval ( );
    void PutshutdownTimeout (
        long pshutdownTimeout );
    long GetshutdownTimeout ( );
    void PutoverallConnectionTimeout (
        long poverallConnectionTimeout );
    long GetoverallConnectionTimeout ( );
    void PutsingleConnectionTimeout (
        long psingleConnectionTimeout );
    long GetsingleConnectionTimeout ( );
    void PutKeyboardType (
        long pkeyboardType );
    long GetKeyboardType ( );
    void PutKeyboardSubType (
        long pkeyboardSubType );
    long GetKeyboardSubType ( );
    void PutKeyboardFunctionKey (
        long pkeyboardFunctionKey );
    long GetKeyboardFunctionKey ( );
    void PutWinceFixedPalette (
        long pwinceFixedPalette );
    long GetWinceFixedPalette ( );
    void PutConnectToServerConsole (
        VARIANT_BOOL pConnectToConsole );
    VARIANT_BOOL GetConnectToServerConsole ( );
    void PutBitmapPersistence (
        long pbitmapPersistence );
    long GetBitmapPersistence ( );
    void PutMinutesToIdleTimeout (
        long pminutesToIdleTimeout );
    long GetMinutesToIdleTimeout ( );
    void PutSmartSizing (
        VARIANT_BOOL pfSmartSizing );
    VARIANT_BOOL GetSmartSizing ( );
    void PutRdpdrLocalPrintingDocName (
        _bstr_t pLocalPrintingDocName );
    _bstr_t GetRdpdrLocalPrintingDocName ( );
    void PutRdpdrClipCleanTempDirString (
        _bstr_t clipCleanTempDirString );
    _bstr_t GetRdpdrClipCleanTempDirString ( );
    void PutRdpdrClipPasteInfoString (
        _bstr_t clipPasteInfoString );
    _bstr_t GetRdpdrClipPasteInfoString ( );
    void PutClearTextPassword (
        _bstr_t _arg1 );
    void PutDisplayConnectionBar (
        VARIANT_BOOL pDisplayConnectionBar );
    VARIANT_BOOL GetDisplayConnectionBar ( );
    void PutPinConnectionBar (
        VARIANT_BOOL pPinConnectionBar );
    VARIANT_BOOL GetPinConnectionBar ( );
    void PutGrabFocusOnConnect (
        VARIANT_BOOL pfGrabFocusOnConnect );
    VARIANT_BOOL GetGrabFocusOnConnect ( );
    void PutLoadBalanceInfo (
        _bstr_t pLBInfo );
    _bstr_t GetLoadBalanceInfo ( );
    void PutRedirectDrives (
        VARIANT_BOOL pRedirectDrives );
    VARIANT_BOOL GetRedirectDrives ( );
    void PutRedirectPrinters (
        VARIANT_BOOL pRedirectPrinters );
    VARIANT_BOOL GetRedirectPrinters ( );
    void PutRedirectPorts (
        VARIANT_BOOL pRedirectPorts );
    VARIANT_BOOL GetRedirectPorts ( );
    void PutRedirectSmartCards (
        VARIANT_BOOL pRedirectSmartCards );
    VARIANT_BOOL GetRedirectSmartCards ( );
    void PutBitmapVirtualCache16BppSize (
        long pBitmapVirtualCache16BppSize );
    long GetBitmapVirtualCache16BppSize ( );
    void PutBitmapVirtualCache24BppSize (
        long pBitmapVirtualCache24BppSize );
    long GetBitmapVirtualCache24BppSize ( );
    void PutPerformanceFlags (
        long pDisableList );
    long GetPerformanceFlags ( );
    void PutConnectWithEndpoint (
        VARIANT * _arg1 );
    void PutNotifyTSPublicKey (
        VARIANT_BOOL pfNotify );
    VARIANT_BOOL GetNotifyTSPublicKey ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_SmoothScroll (
        /*[in]*/ long psmoothScroll ) = 0;
      virtual HRESULT __stdcall get_SmoothScroll (
        /*[out,retval]*/ long * psmoothScroll ) = 0;
      virtual HRESULT __stdcall put_AcceleratorPassthrough (
        /*[in]*/ long pacceleratorPassthrough ) = 0;
      virtual HRESULT __stdcall get_AcceleratorPassthrough (
        /*[out,retval]*/ long * pacceleratorPassthrough ) = 0;
      virtual HRESULT __stdcall put_ShadowBitmap (
        /*[in]*/ long pshadowBitmap ) = 0;
      virtual HRESULT __stdcall get_ShadowBitmap (
        /*[out,retval]*/ long * pshadowBitmap ) = 0;
      virtual HRESULT __stdcall put_TransportType (
        /*[in]*/ long ptransportType ) = 0;
      virtual HRESULT __stdcall get_TransportType (
        /*[out,retval]*/ long * ptransportType ) = 0;
      virtual HRESULT __stdcall put_SasSequence (
        /*[in]*/ long psasSequence ) = 0;
      virtual HRESULT __stdcall get_SasSequence (
        /*[out,retval]*/ long * psasSequence ) = 0;
      virtual HRESULT __stdcall put_EncryptionEnabled (
        /*[in]*/ long pencryptionEnabled ) = 0;
      virtual HRESULT __stdcall get_EncryptionEnabled (
        /*[out,retval]*/ long * pencryptionEnabled ) = 0;
      virtual HRESULT __stdcall put_DedicatedTerminal (
        /*[in]*/ long pdedicatedTerminal ) = 0;
      virtual HRESULT __stdcall get_DedicatedTerminal (
        /*[out,retval]*/ long * pdedicatedTerminal ) = 0;
      virtual HRESULT __stdcall put_RDPPort (
        /*[in]*/ long prdpPort ) = 0;
      virtual HRESULT __stdcall get_RDPPort (
        /*[out,retval]*/ long * prdpPort ) = 0;
      virtual HRESULT __stdcall put_EnableMouse (
        /*[in]*/ long penableMouse ) = 0;
      virtual HRESULT __stdcall get_EnableMouse (
        /*[out,retval]*/ long * penableMouse ) = 0;
      virtual HRESULT __stdcall put_DisableCtrlAltDel (
        /*[in]*/ long pdisableCtrlAltDel ) = 0;
      virtual HRESULT __stdcall get_DisableCtrlAltDel (
        /*[out,retval]*/ long * pdisableCtrlAltDel ) = 0;
      virtual HRESULT __stdcall put_EnableWindowsKey (
        /*[in]*/ long penableWindowsKey ) = 0;
      virtual HRESULT __stdcall get_EnableWindowsKey (
        /*[out,retval]*/ long * penableWindowsKey ) = 0;
      virtual HRESULT __stdcall put_DoubleClickDetect (
        /*[in]*/ long pdoubleClickDetect ) = 0;
      virtual HRESULT __stdcall get_DoubleClickDetect (
        /*[out,retval]*/ long * pdoubleClickDetect ) = 0;
      virtual HRESULT __stdcall put_MaximizeShell (
        /*[in]*/ long pmaximizeShell ) = 0;
      virtual HRESULT __stdcall get_MaximizeShell (
        /*[out,retval]*/ long * pmaximizeShell ) = 0;
      virtual HRESULT __stdcall put_HotKeyFullScreen (
        /*[in]*/ long photKeyFullScreen ) = 0;
      virtual HRESULT __stdcall get_HotKeyFullScreen (
        /*[out,retval]*/ long * photKeyFullScreen ) = 0;
      virtual HRESULT __stdcall put_HotKeyCtrlEsc (
        /*[in]*/ long photKeyCtrlEsc ) = 0;
      virtual HRESULT __stdcall get_HotKeyCtrlEsc (
        /*[out,retval]*/ long * photKeyCtrlEsc ) = 0;
      virtual HRESULT __stdcall put_HotKeyAltEsc (
        /*[in]*/ long photKeyAltEsc ) = 0;
      virtual HRESULT __stdcall get_HotKeyAltEsc (
        /*[out,retval]*/ long * photKeyAltEsc ) = 0;
      virtual HRESULT __stdcall put_HotKeyAltTab (
        /*[in]*/ long photKeyAltTab ) = 0;
      virtual HRESULT __stdcall get_HotKeyAltTab (
        /*[out,retval]*/ long * photKeyAltTab ) = 0;
      virtual HRESULT __stdcall put_HotKeyAltShiftTab (
        /*[in]*/ long photKeyAltShiftTab ) = 0;
      virtual HRESULT __stdcall get_HotKeyAltShiftTab (
        /*[out,retval]*/ long * photKeyAltShiftTab ) = 0;
      virtual HRESULT __stdcall put_HotKeyAltSpace (
        /*[in]*/ long photKeyAltSpace ) = 0;
      virtual HRESULT __stdcall get_HotKeyAltSpace (
        /*[out,retval]*/ long * photKeyAltSpace ) = 0;
      virtual HRESULT __stdcall put_HotKeyCtrlAltDel (
        /*[in]*/ long photKeyCtrlAltDel ) = 0;
      virtual HRESULT __stdcall get_HotKeyCtrlAltDel (
        /*[out,retval]*/ long * photKeyCtrlAltDel ) = 0;
      virtual HRESULT __stdcall put_orderDrawThreshold (
        /*[in]*/ long porderDrawThreshold ) = 0;
      virtual HRESULT __stdcall get_orderDrawThreshold (
        /*[out,retval]*/ long * porderDrawThreshold ) = 0;
      virtual HRESULT __stdcall put_BitmapCacheSize (
        /*[in]*/ long pbitmapCacheSize ) = 0;
      virtual HRESULT __stdcall get_BitmapCacheSize (
        /*[out,retval]*/ long * pbitmapCacheSize ) = 0;
      virtual HRESULT __stdcall put_BitmapVirtualCacheSize (
        /*[in]*/ long pbitmapVirtualCacheSize ) = 0;
      virtual HRESULT __stdcall get_BitmapVirtualCacheSize (
        /*[out,retval]*/ long * pbitmapVirtualCacheSize ) = 0;
      virtual HRESULT __stdcall put_ScaleBitmapCachesByBPP (
        /*[in]*/ long pbScale ) = 0;
      virtual HRESULT __stdcall get_ScaleBitmapCachesByBPP (
        /*[out,retval]*/ long * pbScale ) = 0;
      virtual HRESULT __stdcall put_NumBitmapCaches (
        /*[in]*/ long pnumBitmapCaches ) = 0;
      virtual HRESULT __stdcall get_NumBitmapCaches (
        /*[out,retval]*/ long * pnumBitmapCaches ) = 0;
      virtual HRESULT __stdcall put_CachePersistenceActive (
        /*[in]*/ long pcachePersistenceActive ) = 0;
      virtual HRESULT __stdcall get_CachePersistenceActive (
        /*[out,retval]*/ long * pcachePersistenceActive ) = 0;
      virtual HRESULT __stdcall put_PersistCacheDirectory (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall put_brushSupportLevel (
        /*[in]*/ long pbrushSupportLevel ) = 0;
      virtual HRESULT __stdcall get_brushSupportLevel (
        /*[out,retval]*/ long * pbrushSupportLevel ) = 0;
      virtual HRESULT __stdcall put_minInputSendInterval (
        /*[in]*/ long pminInputSendInterval ) = 0;
      virtual HRESULT __stdcall get_minInputSendInterval (
        /*[out,retval]*/ long * pminInputSendInterval ) = 0;
      virtual HRESULT __stdcall put_InputEventsAtOnce (
        /*[in]*/ long pinputEventsAtOnce ) = 0;
      virtual HRESULT __stdcall get_InputEventsAtOnce (
        /*[out,retval]*/ long * pinputEventsAtOnce ) = 0;
      virtual HRESULT __stdcall put_maxEventCount (
        /*[in]*/ long pmaxEventCount ) = 0;
      virtual HRESULT __stdcall get_maxEventCount (
        /*[out,retval]*/ long * pmaxEventCount ) = 0;
      virtual HRESULT __stdcall put_keepAliveInterval (
        /*[in]*/ long pkeepAliveInterval ) = 0;
      virtual HRESULT __stdcall get_keepAliveInterval (
        /*[out,retval]*/ long * pkeepAliveInterval ) = 0;
      virtual HRESULT __stdcall put_shutdownTimeout (
        /*[in]*/ long pshutdownTimeout ) = 0;
      virtual HRESULT __stdcall get_shutdownTimeout (
        /*[out,retval]*/ long * pshutdownTimeout ) = 0;
      virtual HRESULT __stdcall put_overallConnectionTimeout (
        /*[in]*/ long poverallConnectionTimeout ) = 0;
      virtual HRESULT __stdcall get_overallConnectionTimeout (
        /*[out,retval]*/ long * poverallConnectionTimeout ) = 0;
      virtual HRESULT __stdcall put_singleConnectionTimeout (
        /*[in]*/ long psingleConnectionTimeout ) = 0;
      virtual HRESULT __stdcall get_singleConnectionTimeout (
        /*[out,retval]*/ long * psingleConnectionTimeout ) = 0;
      virtual HRESULT __stdcall put_KeyboardType (
        /*[in]*/ long pkeyboardType ) = 0;
      virtual HRESULT __stdcall get_KeyboardType (
        /*[out,retval]*/ long * pkeyboardType ) = 0;
      virtual HRESULT __stdcall put_KeyboardSubType (
        /*[in]*/ long pkeyboardSubType ) = 0;
      virtual HRESULT __stdcall get_KeyboardSubType (
        /*[out,retval]*/ long * pkeyboardSubType ) = 0;
      virtual HRESULT __stdcall put_KeyboardFunctionKey (
        /*[in]*/ long pkeyboardFunctionKey ) = 0;
      virtual HRESULT __stdcall get_KeyboardFunctionKey (
        /*[out,retval]*/ long * pkeyboardFunctionKey ) = 0;
      virtual HRESULT __stdcall put_WinceFixedPalette (
        /*[in]*/ long pwinceFixedPalette ) = 0;
      virtual HRESULT __stdcall get_WinceFixedPalette (
        /*[out,retval]*/ long * pwinceFixedPalette ) = 0;
      virtual HRESULT __stdcall put_ConnectToServerConsole (
        /*[in]*/ VARIANT_BOOL pConnectToConsole ) = 0;
      virtual HRESULT __stdcall get_ConnectToServerConsole (
        /*[out,retval]*/ VARIANT_BOOL * pConnectToConsole ) = 0;
      virtual HRESULT __stdcall put_BitmapPersistence (
        /*[in]*/ long pbitmapPersistence ) = 0;
      virtual HRESULT __stdcall get_BitmapPersistence (
        /*[out,retval]*/ long * pbitmapPersistence ) = 0;
      virtual HRESULT __stdcall put_MinutesToIdleTimeout (
        /*[in]*/ long pminutesToIdleTimeout ) = 0;
      virtual HRESULT __stdcall get_MinutesToIdleTimeout (
        /*[out,retval]*/ long * pminutesToIdleTimeout ) = 0;
      virtual HRESULT __stdcall put_SmartSizing (
        /*[in]*/ VARIANT_BOOL pfSmartSizing ) = 0;
      virtual HRESULT __stdcall get_SmartSizing (
        /*[out,retval]*/ VARIANT_BOOL * pfSmartSizing ) = 0;
      virtual HRESULT __stdcall put_RdpdrLocalPrintingDocName (
        /*[in]*/ BSTR pLocalPrintingDocName ) = 0;
      virtual HRESULT __stdcall get_RdpdrLocalPrintingDocName (
        /*[out,retval]*/ BSTR * pLocalPrintingDocName ) = 0;
      virtual HRESULT __stdcall put_RdpdrClipCleanTempDirString (
        /*[in]*/ BSTR clipCleanTempDirString ) = 0;
      virtual HRESULT __stdcall get_RdpdrClipCleanTempDirString (
        /*[out,retval]*/ BSTR * clipCleanTempDirString ) = 0;
      virtual HRESULT __stdcall put_RdpdrClipPasteInfoString (
        /*[in]*/ BSTR clipPasteInfoString ) = 0;
      virtual HRESULT __stdcall get_RdpdrClipPasteInfoString (
        /*[out,retval]*/ BSTR * clipPasteInfoString ) = 0;
      virtual HRESULT __stdcall put_ClearTextPassword (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall put_DisplayConnectionBar (
        /*[in]*/ VARIANT_BOOL pDisplayConnectionBar ) = 0;
      virtual HRESULT __stdcall get_DisplayConnectionBar (
        /*[out,retval]*/ VARIANT_BOOL * pDisplayConnectionBar ) = 0;
      virtual HRESULT __stdcall put_PinConnectionBar (
        /*[in]*/ VARIANT_BOOL pPinConnectionBar ) = 0;
      virtual HRESULT __stdcall get_PinConnectionBar (
        /*[out,retval]*/ VARIANT_BOOL * pPinConnectionBar ) = 0;
      virtual HRESULT __stdcall put_GrabFocusOnConnect (
        /*[in]*/ VARIANT_BOOL pfGrabFocusOnConnect ) = 0;
      virtual HRESULT __stdcall get_GrabFocusOnConnect (
        /*[out,retval]*/ VARIANT_BOOL * pfGrabFocusOnConnect ) = 0;
      virtual HRESULT __stdcall put_LoadBalanceInfo (
        /*[in]*/ BSTR pLBInfo ) = 0;
      virtual HRESULT __stdcall get_LoadBalanceInfo (
        /*[out,retval]*/ BSTR * pLBInfo ) = 0;
      virtual HRESULT __stdcall put_RedirectDrives (
        /*[in]*/ VARIANT_BOOL pRedirectDrives ) = 0;
      virtual HRESULT __stdcall get_RedirectDrives (
        /*[out,retval]*/ VARIANT_BOOL * pRedirectDrives ) = 0;
      virtual HRESULT __stdcall put_RedirectPrinters (
        /*[in]*/ VARIANT_BOOL pRedirectPrinters ) = 0;
      virtual HRESULT __stdcall get_RedirectPrinters (
        /*[out,retval]*/ VARIANT_BOOL * pRedirectPrinters ) = 0;
      virtual HRESULT __stdcall put_RedirectPorts (
        /*[in]*/ VARIANT_BOOL pRedirectPorts ) = 0;
      virtual HRESULT __stdcall get_RedirectPorts (
        /*[out,retval]*/ VARIANT_BOOL * pRedirectPorts ) = 0;
      virtual HRESULT __stdcall put_RedirectSmartCards (
        /*[in]*/ VARIANT_BOOL pRedirectSmartCards ) = 0;
      virtual HRESULT __stdcall get_RedirectSmartCards (
        /*[out,retval]*/ VARIANT_BOOL * pRedirectSmartCards ) = 0;
      virtual HRESULT __stdcall put_BitmapVirtualCache16BppSize (
        /*[in]*/ long pBitmapVirtualCache16BppSize ) = 0;
      virtual HRESULT __stdcall get_BitmapVirtualCache16BppSize (
        /*[out,retval]*/ long * pBitmapVirtualCache16BppSize ) = 0;
      virtual HRESULT __stdcall put_BitmapVirtualCache24BppSize (
        /*[in]*/ long pBitmapVirtualCache24BppSize ) = 0;
      virtual HRESULT __stdcall get_BitmapVirtualCache24BppSize (
        /*[out,retval]*/ long * pBitmapVirtualCache24BppSize ) = 0;
      virtual HRESULT __stdcall put_PerformanceFlags (
        /*[in]*/ long pDisableList ) = 0;
      virtual HRESULT __stdcall get_PerformanceFlags (
        /*[out,retval]*/ long * pDisableList ) = 0;
      virtual HRESULT __stdcall put_ConnectWithEndpoint (
        /*[in]*/ VARIANT * _arg1 ) = 0;
      virtual HRESULT __stdcall put_NotifyTSPublicKey (
        /*[in]*/ VARIANT_BOOL pfNotify ) = 0;
      virtual HRESULT __stdcall get_NotifyTSPublicKey (
        /*[out,retval]*/ VARIANT_BOOL * pfNotify ) = 0;
};

struct __declspec(uuid("605befcf-39c1-45cc-a811-068fb7be346d"))
IMsRdpClientSecuredSettings : IMsTscSecuredSettings
{
    //
    // Property data
    //

    __declspec(property(get=GetKeyboardHookMode,put=PutKeyboardHookMode))
    long KeyboardHookMode;
    __declspec(property(get=GetAudioRedirectionMode,put=PutAudioRedirectionMode))
    long AudioRedirectionMode;

    //
    // Wrapper methods for error-handling
    //

    void PutKeyboardHookMode (
        long pkeyboardHookMode );
    long GetKeyboardHookMode ( );
    void PutAudioRedirectionMode (
        long pAudioRedirectionMode );
    long GetAudioRedirectionMode ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_KeyboardHookMode (
        /*[in]*/ long pkeyboardHookMode ) = 0;
      virtual HRESULT __stdcall get_KeyboardHookMode (
        /*[out,retval]*/ long * pkeyboardHookMode ) = 0;
      virtual HRESULT __stdcall put_AudioRedirectionMode (
        /*[in]*/ long pAudioRedirectionMode ) = 0;
      virtual HRESULT __stdcall get_AudioRedirectionMode (
        /*[out,retval]*/ long * pAudioRedirectionMode ) = 0;
};

enum __MIDL___MIDL_itf_mstsax_0000_0000_0001
{
    exDiscReasonNoInfo = 0,
    exDiscReasonAPIInitiatedDisconnect = 1,
    exDiscReasonAPIInitiatedLogoff = 2,
    exDiscReasonServerIdleTimeout = 3,
    exDiscReasonServerLogonTimeout = 4,
    exDiscReasonReplacedByOtherConnection = 5,
    exDiscReasonOutOfMemory = 6,
    exDiscReasonServerDeniedConnection = 7,
    exDiscReasonServerDeniedConnectionFips = 8,
    exDiscReasonServerInsufficientPrivileges = 9,
    exDiscReasonServerFreshCredsRequired = 10,
    exDiscReasonRpcInitiatedDisconnectByUser = 11,
    exDiscReasonLogoffByUser = 12,
    exDiscReasonShutdown = 25,
    exDiscReasonReboot = 26,
    exDiscReasonLicenseInternal = 256,
    exDiscReasonLicenseNoLicenseServer = 257,
    exDiscReasonLicenseNoLicense = 258,
    exDiscReasonLicenseErrClientMsg = 259,
    exDiscReasonLicenseHwidDoesntMatchLicense = 260,
    exDiscReasonLicenseErrClientLicense = 261,
    exDiscReasonLicenseCantFinishProtocol = 262,
    exDiscReasonLicenseClientEndedProtocol = 263,
    exDiscReasonLicenseErrClientEncryption = 264,
    exDiscReasonLicenseCantUpgradeLicense = 265,
    exDiscReasonLicenseNoRemoteConnections = 266,
    exDiscReasonLicenseCreatingLicStoreAccDenied = 267,
    exDiscReasonRdpEncInvalidCredentials = 768,
    exDiscReasonProtocolRangeStart = 4096,
    exDiscReasonProtocolRangeEnd = 32767
};

struct __declspec(uuid("92b4a539-7115-4b7c-a5a9-e5d9efc2780a"))
IMsRdpClient : IMsTscAx
{
    //
    // Property data
    //

    __declspec(property(get=GetColorDepth,put=PutColorDepth))
    long ColorDepth;
    __declspec(property(get=GetAdvancedSettings2))
    IMsRdpClientAdvancedSettingsPtr AdvancedSettings2;
    __declspec(property(get=GetSecuredSettings2))
    IMsRdpClientSecuredSettingsPtr SecuredSettings2;
    __declspec(property(get=GetExtendedDisconnectReason))
    ExtendedDisconnectReasonCode ExtendedDisconnectReason;
    __declspec(property(get=GetFullScreen,put=PutFullScreen))
    VARIANT_BOOL FullScreen;

    //
    // Wrapper methods for error-handling
    //

    void PutColorDepth (
        long pcolorDepth );
    long GetColorDepth ( );
    IMsRdpClientAdvancedSettingsPtr GetAdvancedSettings2 ( );
    IMsRdpClientSecuredSettingsPtr GetSecuredSettings2 ( );
    ExtendedDisconnectReasonCode GetExtendedDisconnectReason ( );
    void PutFullScreen (
        VARIANT_BOOL pfFullScreen );
    VARIANT_BOOL GetFullScreen ( );
    HRESULT SetVirtualChannelOptions (
        _bstr_t chanName,
        long chanOptions );
    long GetVirtualChannelOptions (
        _bstr_t chanName );
    ControlCloseStatus RequestClose ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_ColorDepth (
        /*[in]*/ long pcolorDepth ) = 0;
      virtual HRESULT __stdcall get_ColorDepth (
        /*[out,retval]*/ long * pcolorDepth ) = 0;
      virtual HRESULT __stdcall get_AdvancedSettings2 (
        /*[out,retval]*/ struct IMsRdpClientAdvancedSettings * * ppAdvSettings ) = 0;
      virtual HRESULT __stdcall get_SecuredSettings2 (
        /*[out,retval]*/ struct IMsRdpClientSecuredSettings * * ppSecuredSettings ) = 0;
      virtual HRESULT __stdcall get_ExtendedDisconnectReason (
        /*[out,retval]*/ ExtendedDisconnectReasonCode * pExtendedDisconnectReason ) = 0;
      virtual HRESULT __stdcall put_FullScreen (
        /*[in]*/ VARIANT_BOOL pfFullScreen ) = 0;
      virtual HRESULT __stdcall get_FullScreen (
        /*[out,retval]*/ VARIANT_BOOL * pfFullScreen ) = 0;
      virtual HRESULT __stdcall raw_SetVirtualChannelOptions (
        /*[in]*/ BSTR chanName,
        /*[in]*/ long chanOptions ) = 0;
      virtual HRESULT __stdcall raw_GetVirtualChannelOptions (
        /*[in]*/ BSTR chanName,
        /*[out,retval]*/ long * pChanOptions ) = 0;
      virtual HRESULT __stdcall raw_RequestClose (
        /*[out,retval]*/ ControlCloseStatus * pCloseStatus ) = 0;
};

enum __MIDL_IMsRdpClient_0001
{
    controlCloseCanProceed = 0,
    controlCloseWaitForEvents = 1
};

struct __declspec(uuid("c1e6743a-41c1-4a74-832a-0dd06c1c7a0e"))
IMsTscNonScriptable : IUnknown
{
    //
    // Property data
    //

    __declspec(property(put=PutClearTextPassword))
    _bstr_t ClearTextPassword;
    __declspec(property(get=GetPortablePassword,put=PutPortablePassword))
    _bstr_t PortablePassword;
    __declspec(property(get=GetPortableSalt,put=PutPortableSalt))
    _bstr_t PortableSalt;
    __declspec(property(get=GetBinaryPassword,put=PutBinaryPassword))
    _bstr_t BinaryPassword;
    __declspec(property(get=GetBinarySalt,put=PutBinarySalt))
    _bstr_t BinarySalt;

    //
    // Wrapper methods for error-handling
    //

    void PutClearTextPassword (
        _bstr_t _arg1 );
    void PutPortablePassword (
        _bstr_t pPortablePass );
    _bstr_t GetPortablePassword ( );
    void PutPortableSalt (
        _bstr_t pPortableSalt );
    _bstr_t GetPortableSalt ( );
    void PutBinaryPassword (
        _bstr_t pBinaryPassword );
    _bstr_t GetBinaryPassword ( );
    void PutBinarySalt (
        _bstr_t pSalt );
    _bstr_t GetBinarySalt ( );
    HRESULT ResetPassword ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_ClearTextPassword (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall put_PortablePassword (
        /*[in]*/ BSTR pPortablePass ) = 0;
      virtual HRESULT __stdcall get_PortablePassword (
        /*[out,retval]*/ BSTR * pPortablePass ) = 0;
      virtual HRESULT __stdcall put_PortableSalt (
        /*[in]*/ BSTR pPortableSalt ) = 0;
      virtual HRESULT __stdcall get_PortableSalt (
        /*[out,retval]*/ BSTR * pPortableSalt ) = 0;
      virtual HRESULT __stdcall put_BinaryPassword (
        /*[in]*/ BSTR pBinaryPassword ) = 0;
      virtual HRESULT __stdcall get_BinaryPassword (
        /*[out,retval]*/ BSTR * pBinaryPassword ) = 0;
      virtual HRESULT __stdcall put_BinarySalt (
        /*[in]*/ BSTR pSalt ) = 0;
      virtual HRESULT __stdcall get_BinarySalt (
        /*[out,retval]*/ BSTR * pSalt ) = 0;
      virtual HRESULT __stdcall raw_ResetPassword ( ) = 0;
};

struct __declspec(uuid("2f079c4c-87b2-4afd-97ab-20cdb43038ae"))
IMsRdpClientNonScriptable : IMsTscNonScriptable
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT NotifyRedirectDeviceChange (
        UINT_PTR wParam,
        LONG_PTR lParam );
    HRESULT SendKeys (
        long numKeys,
        VARIANT_BOOL * pbArrayKeyUp,
        long * plKeyData );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_NotifyRedirectDeviceChange (
        /*[in]*/ UINT_PTR wParam,
        /*[in]*/ LONG_PTR lParam ) = 0;
      virtual HRESULT __stdcall raw_SendKeys (
        /*[in]*/ long numKeys,
        /*[in]*/ VARIANT_BOOL * pbArrayKeyUp,
        /*[in]*/ long * plKeyData ) = 0;
};

struct __declspec(uuid("1fb464c8-09bb-4017-a2f5-eb742f04392f"))
MsTscAx;
    // interface IMsRdpClient
    // [ default ] interface IMsTscAx
    // interface IMsTscAx_Redist
    // [ default, source ] dispinterface IMsTscAxEvents
    // interface IMsTscNonScriptable
    // interface IMsRdpClientNonScriptable

struct __declspec(uuid("7cacbd7b-0d99-468f-ac33-22e495c0afe5"))
MsRdpClientNotSafeForScripting;
    // [ default ] interface IMsRdpClient
    // interface IMsTscAx
    // interface IMsTscAx_Redist
    // [ default, source ] dispinterface IMsTscAxEvents
    // interface IMsTscNonScriptable
    // interface IMsRdpClientNonScriptable

struct __declspec(uuid("791fa017-2de3-492e-acc5-53c67a2b94d0"))
MsRdpClient;
    // [ default ] interface IMsRdpClient
    // interface IMsTscAx
    // interface IMsTscAx_Redist
    // [ default, source ] dispinterface IMsTscAxEvents
    // interface IMsTscNonScriptable
    // interface IMsRdpClientNonScriptable

struct __declspec(uuid("3523c2fb-4031-44e4-9a3b-f1e94986ee7f"))
MsRdpClient2NotSafeForScripting;
    // [ default ] interface IMsRdpClient2
    // interface IMsRdpClient
    // interface IMsTscAx
    // interface IMsTscAx_Redist
    // [ default, source ] dispinterface IMsTscAxEvents
    // interface IMsTscNonScriptable
    // interface IMsRdpClientNonScriptable

struct __declspec(uuid("9ac42117-2b76-4320-aa44-0e616ab8437b"))
IMsRdpClientAdvancedSettings2 : IMsRdpClientAdvancedSettings
{
    //
    // Property data
    //

    __declspec(property(get=GetCanAutoReconnect))
    VARIANT_BOOL CanAutoReconnect;
    __declspec(property(get=GetEnableAutoReconnect,put=PutEnableAutoReconnect))
    VARIANT_BOOL EnableAutoReconnect;
    __declspec(property(get=GetMaxReconnectAttempts,put=PutMaxReconnectAttempts))
    long MaxReconnectAttempts;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetCanAutoReconnect ( );
    void PutEnableAutoReconnect (
        VARIANT_BOOL pfEnableAutoReconnect );
    VARIANT_BOOL GetEnableAutoReconnect ( );
    void PutMaxReconnectAttempts (
        long pMaxReconnectAttempts );
    long GetMaxReconnectAttempts ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CanAutoReconnect (
        /*[out,retval]*/ VARIANT_BOOL * pfCanAutoReconnect ) = 0;
      virtual HRESULT __stdcall put_EnableAutoReconnect (
        /*[in]*/ VARIANT_BOOL pfEnableAutoReconnect ) = 0;
      virtual HRESULT __stdcall get_EnableAutoReconnect (
        /*[out,retval]*/ VARIANT_BOOL * pfEnableAutoReconnect ) = 0;
      virtual HRESULT __stdcall put_MaxReconnectAttempts (
        /*[in]*/ long pMaxReconnectAttempts ) = 0;
      virtual HRESULT __stdcall get_MaxReconnectAttempts (
        /*[out,retval]*/ long * pMaxReconnectAttempts ) = 0;
};

struct __declspec(uuid("e7e17dc4-3b71-4ba7-a8e6-281ffadca28f"))
IMsRdpClient2 : IMsRdpClient
{
    //
    // Property data
    //

    __declspec(property(get=GetAdvancedSettings3))
    IMsRdpClientAdvancedSettings2Ptr AdvancedSettings3;
    __declspec(property(get=GetConnectedStatusText,put=PutConnectedStatusText))
    _bstr_t ConnectedStatusText;

    //
    // Wrapper methods for error-handling
    //

    IMsRdpClientAdvancedSettings2Ptr GetAdvancedSettings3 ( );
    void PutConnectedStatusText (
        _bstr_t pConnectedStatusText );
    _bstr_t GetConnectedStatusText ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AdvancedSettings3 (
        /*[out,retval]*/ struct IMsRdpClientAdvancedSettings2 * * ppAdvSettings ) = 0;
      virtual HRESULT __stdcall put_ConnectedStatusText (
        /*[in]*/ BSTR pConnectedStatusText ) = 0;
      virtual HRESULT __stdcall get_ConnectedStatusText (
        /*[out,retval]*/ BSTR * pConnectedStatusText ) = 0;
};

struct __declspec(uuid("9059f30f-4eb1-4bd2-9fdc-36f43a218f4a"))
MsRdpClient2;
    // [ default ] interface IMsRdpClient2
    // interface IMsRdpClient
    // interface IMsTscAx
    // interface IMsTscAx_Redist
    // [ default, source ] dispinterface IMsTscAxEvents
    // interface IMsTscNonScriptable
    // interface IMsRdpClientNonScriptable

struct __declspec(uuid("971127bb-259f-48c2-bd75-5f97a3331551"))
MsRdpClient2a;
    // [ default ] interface IMsRdpClient2
    // interface IMsRdpClient
    // interface IMsTscAx
    // interface IMsTscAx_Redist
    // [ default, source ] dispinterface IMsTscAxEvents
    // interface IMsTscNonScriptable
    // interface IMsRdpClientNonScriptable

struct __declspec(uuid("ace575fd-1fcf-4074-9401-ebab990fa9de"))
MsRdpClient3NotSafeForScripting;
    // [ default ] interface IMsRdpClient3
    // interface IMsRdpClient2
    // interface IMsRdpClient
    // interface IMsTscAx
    // interface IMsTscAx_Redist
    // [ default, source ] dispinterface IMsTscAxEvents
    // interface IMsTscNonScriptable
    // interface IMsRdpClientNonScriptable

struct __declspec(uuid("19cd856b-c542-4c53-acee-f127e3be1a59"))
IMsRdpClientAdvancedSettings3 : IMsRdpClientAdvancedSettings2
{
    //
    // Property data
    //

    __declspec(property(get=GetConnectionBarShowMinimizeButton,put=PutConnectionBarShowMinimizeButton))
    VARIANT_BOOL ConnectionBarShowMinimizeButton;
    __declspec(property(get=GetConnectionBarShowRestoreButton,put=PutConnectionBarShowRestoreButton))
    VARIANT_BOOL ConnectionBarShowRestoreButton;

    //
    // Wrapper methods for error-handling
    //

    void PutConnectionBarShowMinimizeButton (
        VARIANT_BOOL pfShowMinimize );
    VARIANT_BOOL GetConnectionBarShowMinimizeButton ( );
    void PutConnectionBarShowRestoreButton (
        VARIANT_BOOL pfShowRestore );
    VARIANT_BOOL GetConnectionBarShowRestoreButton ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_ConnectionBarShowMinimizeButton (
        /*[in]*/ VARIANT_BOOL pfShowMinimize ) = 0;
      virtual HRESULT __stdcall get_ConnectionBarShowMinimizeButton (
        /*[out,retval]*/ VARIANT_BOOL * pfShowMinimize ) = 0;
      virtual HRESULT __stdcall put_ConnectionBarShowRestoreButton (
        /*[in]*/ VARIANT_BOOL pfShowRestore ) = 0;
      virtual HRESULT __stdcall get_ConnectionBarShowRestoreButton (
        /*[out,retval]*/ VARIANT_BOOL * pfShowRestore ) = 0;
};

struct __declspec(uuid("91b7cbc5-a72e-4fa0-9300-d647d7e897ff"))
IMsRdpClient3 : IMsRdpClient2
{
    //
    // Property data
    //

    __declspec(property(get=GetAdvancedSettings4))
    IMsRdpClientAdvancedSettings3Ptr AdvancedSettings4;

    //
    // Wrapper methods for error-handling
    //

    IMsRdpClientAdvancedSettings3Ptr GetAdvancedSettings4 ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AdvancedSettings4 (
        /*[out,retval]*/ struct IMsRdpClientAdvancedSettings3 * * ppAdvSettings ) = 0;
};

struct __declspec(uuid("7584c670-2274-4efb-b00b-d6aaba6d3850"))
MsRdpClient3;
    // [ default ] interface IMsRdpClient3
    // interface IMsRdpClient2
    // interface IMsRdpClient
    // interface IMsTscAx
    // interface IMsTscAx_Redist
    // [ default, source ] dispinterface IMsTscAxEvents
    // interface IMsTscNonScriptable
    // interface IMsRdpClientNonScriptable

struct __declspec(uuid("6a6f4b83-45c5-4ca9-bdd9-0d81c12295e4"))
MsRdpClient3a;
    // [ default ] interface IMsRdpClient3
    // interface IMsRdpClient2
    // interface IMsRdpClient
    // interface IMsTscAx
    // interface IMsTscAx_Redist
    // [ default, source ] dispinterface IMsTscAxEvents
    // interface IMsTscNonScriptable
    // interface IMsRdpClientNonScriptable

struct __declspec(uuid("6ae29350-321b-42be-bbe5-12fb5270c0de"))
MsRdpClient4NotSafeForScripting;
    // [ default ] interface IMsRdpClient4
    // interface IMsRdpClient3
    // interface IMsRdpClient2
    // interface IMsRdpClient
    // interface IMsTscAx
    // interface IMsTscAx_Redist
    // [ default, source ] dispinterface IMsTscAxEvents
    // interface IMsTscNonScriptable
    // interface IMsRdpClientNonScriptable
    // interface IMsRdpClientNonScriptable2

struct __declspec(uuid("fba7f64e-7345-4405-ae50-fa4a763dc0de"))
IMsRdpClientAdvancedSettings4 : IMsRdpClientAdvancedSettings3
{
    //
    // Property data
    //

    __declspec(property(get=GetAuthenticationLevel,put=PutAuthenticationLevel))
    unsigned int AuthenticationLevel;

    //
    // Wrapper methods for error-handling
    //

    void PutAuthenticationLevel (
        unsigned int puiAuthLevel );
    unsigned int GetAuthenticationLevel ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_AuthenticationLevel (
        /*[in]*/ unsigned int puiAuthLevel ) = 0;
      virtual HRESULT __stdcall get_AuthenticationLevel (
        /*[out,retval]*/ unsigned int * puiAuthLevel ) = 0;
};

struct __declspec(uuid("095e0738-d97d-488b-b9f6-dd0e8d66c0de"))
IMsRdpClient4 : IMsRdpClient3
{
    //
    // Property data
    //

    __declspec(property(get=GetAdvancedSettings5))
    IMsRdpClientAdvancedSettings4Ptr AdvancedSettings5;

    //
    // Wrapper methods for error-handling
    //

    IMsRdpClientAdvancedSettings4Ptr GetAdvancedSettings5 ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AdvancedSettings5 (
        /*[out,retval]*/ struct IMsRdpClientAdvancedSettings4 * * ppAdvSettings ) = 0;
};

struct __declspec(uuid("17a5e535-4072-4fa4-af32-c8d0d47345e9"))
IMsRdpClientNonScriptable2 : IMsRdpClientNonScriptable
{
    //
    // Property data
    //

    __declspec(property(get=GetUIParentWindowHandle,put=PutUIParentWindowHandle))
    wireHWND UIParentWindowHandle;

    //
    // Wrapper methods for error-handling
    //

    void PutUIParentWindowHandle (
        wireHWND phwndUIParentWindowHandle );
    wireHWND GetUIParentWindowHandle ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_UIParentWindowHandle (
        /*[in]*/ wireHWND phwndUIParentWindowHandle ) = 0;
      virtual HRESULT __stdcall get_UIParentWindowHandle (
        /*[out,retval]*/ wireHWND * phwndUIParentWindowHandle ) = 0;
};

struct __declspec(uuid("4edcb26c-d24c-4e72-af07-b576699ac0de"))
MsRdpClient4;
    // [ default ] interface IMsRdpClient4
    // interface IMsRdpClient3
    // interface IMsRdpClient2
    // interface IMsRdpClient
    // interface IMsTscAx
    // interface IMsTscAx_Redist
    // [ default, source ] dispinterface IMsTscAxEvents
    // interface IMsTscNonScriptable
    // interface IMsRdpClientNonScriptable
    // interface IMsRdpClientNonScriptable2

struct __declspec(uuid("54ce37e0-9834-41ae-9896-4dab69dc022b"))
MsRdpClient4a;
    // [ default ] interface IMsRdpClient4
    // interface IMsRdpClient3
    // interface IMsRdpClient2
    // interface IMsRdpClient
    // interface IMsTscAx
    // interface IMsTscAx_Redist
    // [ default, source ] dispinterface IMsTscAxEvents
    // interface IMsTscNonScriptable
    // interface IMsRdpClientNonScriptable
    // interface IMsRdpClientNonScriptable2

struct __declspec(uuid("4eb2f086-c818-447e-b32c-c51ce2b30d31"))
MsRdpClient5NotSafeForScripting;
    // [ default ] interface IMsRdpClient5
    // interface IMsRdpClient4
    // interface IMsRdpClient3
    // interface IMsRdpClient2
    // interface IMsRdpClient
    // interface IMsTscAx
    // interface IMsTscAx_Redist
    // [ default, source ] dispinterface IMsTscAxEvents
    // interface IMsTscNonScriptable
    // interface IMsRdpClientNonScriptable
    // interface IMsRdpClientNonScriptable2
    // interface IMsRdpClientNonScriptable3

struct __declspec(uuid("720298c0-a099-46f5-9f82-96921bae4701"))
IMsRdpClientTransportSettings : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetGatewayHostname,put=PutGatewayHostname))
    _bstr_t GatewayHostname;
    __declspec(property(get=GetGatewayUsageMethod,put=PutGatewayUsageMethod))
    unsigned long GatewayUsageMethod;
    __declspec(property(get=GetGatewayProfileUsageMethod,put=PutGatewayProfileUsageMethod))
    unsigned long GatewayProfileUsageMethod;
    __declspec(property(get=GetGatewayCredsSource,put=PutGatewayCredsSource))
    unsigned long GatewayCredsSource;
    __declspec(property(get=GetGatewayIsSupported))
    long GatewayIsSupported;
    __declspec(property(get=GetGatewayDefaultUsageMethod))
    unsigned long GatewayDefaultUsageMethod;
    __declspec(property(get=GetGatewayUserSelectedCredsSource,put=PutGatewayUserSelectedCredsSource))
    unsigned long GatewayUserSelectedCredsSource;

    //
    // Wrapper methods for error-handling
    //

    void PutGatewayHostname (
        _bstr_t pProxyHostname );
    _bstr_t GetGatewayHostname ( );
    void PutGatewayUsageMethod (
        unsigned long pulProxyUsageMethod );
    unsigned long GetGatewayUsageMethod ( );
    void PutGatewayProfileUsageMethod (
        unsigned long pulProxyProfileUsageMethod );
    unsigned long GetGatewayProfileUsageMethod ( );
    void PutGatewayCredsSource (
        unsigned long pulProxyCredsSource );
    unsigned long GetGatewayCredsSource ( );
    void PutGatewayUserSelectedCredsSource (
        unsigned long pulProxyCredsSource );
    unsigned long GetGatewayUserSelectedCredsSource ( );
    long GetGatewayIsSupported ( );
    unsigned long GetGatewayDefaultUsageMethod ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_GatewayHostname (
        /*[in]*/ BSTR pProxyHostname ) = 0;
      virtual HRESULT __stdcall get_GatewayHostname (
        /*[out,retval]*/ BSTR * pProxyHostname ) = 0;
      virtual HRESULT __stdcall put_GatewayUsageMethod (
        /*[in]*/ unsigned long pulProxyUsageMethod ) = 0;
      virtual HRESULT __stdcall get_GatewayUsageMethod (
        /*[out,retval]*/ unsigned long * pulProxyUsageMethod ) = 0;
      virtual HRESULT __stdcall put_GatewayProfileUsageMethod (
        /*[in]*/ unsigned long pulProxyProfileUsageMethod ) = 0;
      virtual HRESULT __stdcall get_GatewayProfileUsageMethod (
        /*[out,retval]*/ unsigned long * pulProxyProfileUsageMethod ) = 0;
      virtual HRESULT __stdcall put_GatewayCredsSource (
        /*[in]*/ unsigned long pulProxyCredsSource ) = 0;
      virtual HRESULT __stdcall get_GatewayCredsSource (
        /*[out,retval]*/ unsigned long * pulProxyCredsSource ) = 0;
      virtual HRESULT __stdcall put_GatewayUserSelectedCredsSource (
        /*[in]*/ unsigned long pulProxyCredsSource ) = 0;
      virtual HRESULT __stdcall get_GatewayUserSelectedCredsSource (
        /*[out,retval]*/ unsigned long * pulProxyCredsSource ) = 0;
      virtual HRESULT __stdcall get_GatewayIsSupported (
        /*[out,retval]*/ long * pfProxyIsSupported ) = 0;
      virtual HRESULT __stdcall get_GatewayDefaultUsageMethod (
        /*[out,retval]*/ unsigned long * pulProxyDefaultUsageMethod ) = 0;
};

struct __declspec(uuid("fba7f64e-6783-4405-da45-fa4a763dabd0"))
IMsRdpClientAdvancedSettings5 : IMsRdpClientAdvancedSettings4
{
    //
    // Property data
    //

    __declspec(property(get=GetRedirectClipboard,put=PutRedirectClipboard))
    VARIANT_BOOL RedirectClipboard;
    __declspec(property(get=GetAudioRedirectionMode,put=PutAudioRedirectionMode))
    unsigned int AudioRedirectionMode;
    __declspec(property(get=GetConnectionBarShowPinButton,put=PutConnectionBarShowPinButton))
    VARIANT_BOOL ConnectionBarShowPinButton;
    __declspec(property(get=GetPublicMode,put=PutPublicMode))
    VARIANT_BOOL PublicMode;
    __declspec(property(get=GetRedirectDevices,put=PutRedirectDevices))
    VARIANT_BOOL RedirectDevices;
    __declspec(property(get=GetRedirectPOSDevices,put=PutRedirectPOSDevices))
    VARIANT_BOOL RedirectPOSDevices;
    __declspec(property(get=GetBitmapVirtualCache32BppSize,put=PutBitmapVirtualCache32BppSize))
    long BitmapVirtualCache32BppSize;

    //
    // Wrapper methods for error-handling
    //

    void PutRedirectClipboard (
        VARIANT_BOOL pfRedirectClipboard );
    VARIANT_BOOL GetRedirectClipboard ( );
    void PutAudioRedirectionMode (
        unsigned int puiAudioRedirectionMode );
    unsigned int GetAudioRedirectionMode ( );
    void PutConnectionBarShowPinButton (
        VARIANT_BOOL pfShowPin );
    VARIANT_BOOL GetConnectionBarShowPinButton ( );
    void PutPublicMode (
        VARIANT_BOOL pfPublicMode );
    VARIANT_BOOL GetPublicMode ( );
    void PutRedirectDevices (
        VARIANT_BOOL pfRedirectPnPDevices );
    VARIANT_BOOL GetRedirectDevices ( );
    void PutRedirectPOSDevices (
        VARIANT_BOOL pfRedirectPOSDevices );
    VARIANT_BOOL GetRedirectPOSDevices ( );
    void PutBitmapVirtualCache32BppSize (
        long pBitmapVirtualCache32BppSize );
    long GetBitmapVirtualCache32BppSize ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_RedirectClipboard (
        /*[in]*/ VARIANT_BOOL pfRedirectClipboard ) = 0;
      virtual HRESULT __stdcall get_RedirectClipboard (
        /*[out,retval]*/ VARIANT_BOOL * pfRedirectClipboard ) = 0;
      virtual HRESULT __stdcall put_AudioRedirectionMode (
        /*[in]*/ unsigned int puiAudioRedirectionMode ) = 0;
      virtual HRESULT __stdcall get_AudioRedirectionMode (
        /*[out,retval]*/ unsigned int * puiAudioRedirectionMode ) = 0;
      virtual HRESULT __stdcall put_ConnectionBarShowPinButton (
        /*[in]*/ VARIANT_BOOL pfShowPin ) = 0;
      virtual HRESULT __stdcall get_ConnectionBarShowPinButton (
        /*[out,retval]*/ VARIANT_BOOL * pfShowPin ) = 0;
      virtual HRESULT __stdcall put_PublicMode (
        /*[in]*/ VARIANT_BOOL pfPublicMode ) = 0;
      virtual HRESULT __stdcall get_PublicMode (
        /*[out,retval]*/ VARIANT_BOOL * pfPublicMode ) = 0;
      virtual HRESULT __stdcall put_RedirectDevices (
        /*[in]*/ VARIANT_BOOL pfRedirectPnPDevices ) = 0;
      virtual HRESULT __stdcall get_RedirectDevices (
        /*[out,retval]*/ VARIANT_BOOL * pfRedirectPnPDevices ) = 0;
      virtual HRESULT __stdcall put_RedirectPOSDevices (
        /*[in]*/ VARIANT_BOOL pfRedirectPOSDevices ) = 0;
      virtual HRESULT __stdcall get_RedirectPOSDevices (
        /*[out,retval]*/ VARIANT_BOOL * pfRedirectPOSDevices ) = 0;
      virtual HRESULT __stdcall put_BitmapVirtualCache32BppSize (
        /*[in]*/ long pBitmapVirtualCache32BppSize ) = 0;
      virtual HRESULT __stdcall get_BitmapVirtualCache32BppSize (
        /*[out,retval]*/ long * pBitmapVirtualCache32BppSize ) = 0;
};

struct __declspec(uuid("fdd029f9-467a-4c49-8529-64b521dbd1b4"))
ITSRemoteProgram : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetRemoteProgramMode,put=PutRemoteProgramMode))
    VARIANT_BOOL RemoteProgramMode;

    //
    // Wrapper methods for error-handling
    //

    void PutRemoteProgramMode (
        VARIANT_BOOL pvboolRemoteProgramMode );
    VARIANT_BOOL GetRemoteProgramMode ( );
    HRESULT ServerStartProgram (
        _bstr_t bstrExecutablePath,
        _bstr_t bstrFilePath,
        _bstr_t bstrWorkingDirectory,
        VARIANT_BOOL vbExpandEnvVarInWorkingDirectoryOnServer,
        _bstr_t bstrArguments,
        VARIANT_BOOL vbExpandEnvVarInArgumentsOnServer );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_RemoteProgramMode (
        /*[in]*/ VARIANT_BOOL pvboolRemoteProgramMode ) = 0;
      virtual HRESULT __stdcall get_RemoteProgramMode (
        /*[out,retval]*/ VARIANT_BOOL * pvboolRemoteProgramMode ) = 0;
      virtual HRESULT __stdcall raw_ServerStartProgram (
        /*[in]*/ BSTR bstrExecutablePath,
        /*[in]*/ BSTR bstrFilePath,
        /*[in]*/ BSTR bstrWorkingDirectory,
        /*[in]*/ VARIANT_BOOL vbExpandEnvVarInWorkingDirectoryOnServer,
        /*[in]*/ BSTR bstrArguments,
        /*[in]*/ VARIANT_BOOL vbExpandEnvVarInArgumentsOnServer ) = 0;
};

struct __declspec(uuid("d012ae6d-c19a-4bfe-b367-201f8911f134"))
IMsRdpClientShell : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetRdpFileContents,put=PutRdpFileContents))
    _bstr_t RdpFileContents;
    __declspec(property(get=GetIsRemoteProgramClientInstalled))
    VARIANT_BOOL IsRemoteProgramClientInstalled;
    __declspec(property(get=GetPublicMode,put=PutPublicMode))
    VARIANT_BOOL PublicMode;

    //
    // Wrapper methods for error-handling
    //

    HRESULT Launch ( );
    void PutRdpFileContents (
        _bstr_t pszRdpFile );
    _bstr_t GetRdpFileContents ( );
    HRESULT SetRdpProperty (
        _bstr_t szProperty,
        const _variant_t & Value );
    _variant_t GetRdpProperty (
        _bstr_t szProperty );
    VARIANT_BOOL GetIsRemoteProgramClientInstalled ( );
    void PutPublicMode (
        VARIANT_BOOL pfPublicMode );
    VARIANT_BOOL GetPublicMode ( );
    HRESULT ShowTrustedSitesManagementDialog ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Launch ( ) = 0;
      virtual HRESULT __stdcall put_RdpFileContents (
        /*[in]*/ BSTR pszRdpFile ) = 0;
      virtual HRESULT __stdcall get_RdpFileContents (
        /*[out,retval]*/ BSTR * pszRdpFile ) = 0;
      virtual HRESULT __stdcall raw_SetRdpProperty (
        /*[in]*/ BSTR szProperty,
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall raw_GetRdpProperty (
        /*[in]*/ BSTR szProperty,
        /*[out,retval]*/ VARIANT * pValue ) = 0;
      virtual HRESULT __stdcall get_IsRemoteProgramClientInstalled (
        /*[out,retval]*/ VARIANT_BOOL * pbClientInstalled ) = 0;
      virtual HRESULT __stdcall put_PublicMode (
        /*[in]*/ VARIANT_BOOL pfPublicMode ) = 0;
      virtual HRESULT __stdcall get_PublicMode (
        /*[out,retval]*/ VARIANT_BOOL * pfPublicMode ) = 0;
      virtual HRESULT __stdcall raw_ShowTrustedSitesManagementDialog ( ) = 0;
};

struct __declspec(uuid("4eb5335b-6429-477d-b922-e06a28ecd8bf"))
IMsRdpClient5 : IMsRdpClient4
{
    //
    // Property data
    //

    __declspec(property(get=GetTransportSettings))
    IMsRdpClientTransportSettingsPtr TransportSettings;
    __declspec(property(get=GetAdvancedSettings6))
    IMsRdpClientAdvancedSettings5Ptr AdvancedSettings6;
    __declspec(property(get=GetRemoteProgram))
    ITSRemoteProgramPtr RemoteProgram;
    __declspec(property(get=GetMsRdpClientShell))
    IMsRdpClientShellPtr MsRdpClientShell;

    //
    // Wrapper methods for error-handling
    //

    IMsRdpClientTransportSettingsPtr GetTransportSettings ( );
    IMsRdpClientAdvancedSettings5Ptr GetAdvancedSettings6 ( );
    _bstr_t GetErrorDescription (
        unsigned int disconnectReason,
        unsigned int ExtendedDisconnectReason );
    ITSRemoteProgramPtr GetRemoteProgram ( );
    IMsRdpClientShellPtr GetMsRdpClientShell ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TransportSettings (
        /*[out,retval]*/ struct IMsRdpClientTransportSettings * * ppXportSet ) = 0;
      virtual HRESULT __stdcall get_AdvancedSettings6 (
        /*[out,retval]*/ struct IMsRdpClientAdvancedSettings5 * * ppAdvSettings ) = 0;
      virtual HRESULT __stdcall raw_GetErrorDescription (
        /*[in]*/ unsigned int disconnectReason,
        /*[in]*/ unsigned int ExtendedDisconnectReason,
        /*[out,retval]*/ BSTR * pBstrErrorMsg ) = 0;
      virtual HRESULT __stdcall get_RemoteProgram (
        /*[out,retval]*/ struct ITSRemoteProgram * * ppRemoteProgram ) = 0;
      virtual HRESULT __stdcall get_MsRdpClientShell (
        /*[out,retval]*/ struct IMsRdpClientShell * * ppLauncher ) = 0;
};

struct __declspec(uuid("60c3b9c8-9e92-4f5e-a3e7-604a912093ea"))
IMsRdpDevice : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetFriendlyName))
    _bstr_t FriendlyName;
    __declspec(property(get=GetDeviceDescription))
    _bstr_t DeviceDescription;
    __declspec(property(get=GetDeviceInstanceId))
    _bstr_t DeviceInstanceId;
    __declspec(property(get=GetRedirectionState,put=PutRedirectionState))
    VARIANT_BOOL RedirectionState;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetDeviceInstanceId ( );
    _bstr_t GetFriendlyName ( );
    _bstr_t GetDeviceDescription ( );
    void PutRedirectionState (
        VARIANT_BOOL pvboolRedirState );
    VARIANT_BOOL GetRedirectionState ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DeviceInstanceId (
        /*[out,retval]*/ BSTR * pDevInstanceId ) = 0;
      virtual HRESULT __stdcall get_FriendlyName (
        /*[out,retval]*/ BSTR * pFriendlyName ) = 0;
      virtual HRESULT __stdcall get_DeviceDescription (
        /*[out,retval]*/ BSTR * pDeviceDescription ) = 0;
      virtual HRESULT __stdcall put_RedirectionState (
        /*[in]*/ VARIANT_BOOL pvboolRedirState ) = 0;
      virtual HRESULT __stdcall get_RedirectionState (
        /*[out,retval]*/ VARIANT_BOOL * pvboolRedirState ) = 0;
};

struct __declspec(uuid("56540617-d281-488c-8738-6a8fdf64a118"))
IMsRdpDeviceCollection : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetDeviceCount))
    unsigned long DeviceCount;
    __declspec(property(get=GetDeviceById))
    IMsRdpDevicePtr DeviceById[];
    __declspec(property(get=GetDeviceByIndex))
    IMsRdpDevicePtr DeviceByIndex[];

    //
    // Wrapper methods for error-handling
    //

    HRESULT RescanDevices (
        VARIANT_BOOL vboolDynRedir );
    IMsRdpDevicePtr GetDeviceByIndex (
        unsigned long index );
    IMsRdpDevicePtr GetDeviceById (
        _bstr_t devInstanceId );
    unsigned long GetDeviceCount ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_RescanDevices (
        /*[in]*/ VARIANT_BOOL vboolDynRedir ) = 0;
      virtual HRESULT __stdcall get_DeviceByIndex (
        /*[in]*/ unsigned long index,
        /*[out,retval]*/ struct IMsRdpDevice * * ppDevice ) = 0;
      virtual HRESULT __stdcall get_DeviceById (
        /*[in]*/ BSTR devInstanceId,
        /*[out,retval]*/ struct IMsRdpDevice * * ppDevice ) = 0;
      virtual HRESULT __stdcall get_DeviceCount (
        /*[out,retval]*/ unsigned long * pDeviceCount ) = 0;
};

struct __declspec(uuid("d28b5458-f694-47a8-8e61-40356a767e46"))
IMsRdpDrive : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetRedirectionState,put=PutRedirectionState))
    VARIANT_BOOL RedirectionState;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetName ( );
    void PutRedirectionState (
        VARIANT_BOOL pvboolRedirState );
    VARIANT_BOOL GetRedirectionState ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * pName ) = 0;
      virtual HRESULT __stdcall put_RedirectionState (
        /*[in]*/ VARIANT_BOOL pvboolRedirState ) = 0;
      virtual HRESULT __stdcall get_RedirectionState (
        /*[out,retval]*/ VARIANT_BOOL * pvboolRedirState ) = 0;
};

struct __declspec(uuid("7ff17599-da2c-4677-ad35-f60c04fe1585"))
IMsRdpDriveCollection : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetDriveByIndex))
    IMsRdpDrivePtr DriveByIndex[];
    __declspec(property(get=GetDriveCount))
    unsigned long DriveCount;

    //
    // Wrapper methods for error-handling
    //

    HRESULT RescanDrives (
        VARIANT_BOOL vboolDynRedir );
    IMsRdpDrivePtr GetDriveByIndex (
        unsigned long index );
    unsigned long GetDriveCount ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_RescanDrives (
        VARIANT_BOOL vboolDynRedir ) = 0;
      virtual HRESULT __stdcall get_DriveByIndex (
        /*[in]*/ unsigned long index,
        /*[out,retval]*/ struct IMsRdpDrive * * ppDevice ) = 0;
      virtual HRESULT __stdcall get_DriveCount (
        /*[out,retval]*/ unsigned long * pDriveCount ) = 0;
};

struct __declspec(uuid("b3378d90-0728-45c7-8ed7-b6159fb92219"))
IMsRdpClientNonScriptable3 : IMsRdpClientNonScriptable2
{
    //
    // Property data
    //

    __declspec(property(get=GetShowRedirectionWarningDialog,put=PutShowRedirectionWarningDialog))
    VARIANT_BOOL ShowRedirectionWarningDialog;
    __declspec(property(get=GetPromptForCredentials,put=PutPromptForCredentials))
    VARIANT_BOOL PromptForCredentials;
    __declspec(property(get=GetNegotiateSecurityLayer,put=PutNegotiateSecurityLayer))
    VARIANT_BOOL NegotiateSecurityLayer;
    __declspec(property(get=GetEnableCredSspSupport,put=PutEnableCredSspSupport))
    VARIANT_BOOL EnableCredSspSupport;
    __declspec(property(get=GetDeviceCollection))
    IMsRdpDeviceCollectionPtr DeviceCollection;
    __declspec(property(get=GetDriveCollection))
    IMsRdpDriveCollectionPtr DriveCollection;
    __declspec(property(get=GetRedirectDynamicDevices,put=PutRedirectDynamicDevices))
    VARIANT_BOOL RedirectDynamicDevices;
    __declspec(property(get=GetRedirectDynamicDrives,put=PutRedirectDynamicDrives))
    VARIANT_BOOL RedirectDynamicDrives;
    __declspec(property(get=GetWarnAboutClipboardRedirection,put=PutWarnAboutClipboardRedirection))
    VARIANT_BOOL WarnAboutClipboardRedirection;
    __declspec(property(get=GetWarnAboutSendingCredentials,put=PutWarnAboutSendingCredentials))
    VARIANT_BOOL WarnAboutSendingCredentials;
    __declspec(property(get=GetConnectionBarText,put=PutConnectionBarText))
    _bstr_t ConnectionBarText;

    //
    // Wrapper methods for error-handling
    //

    void PutShowRedirectionWarningDialog (
        VARIANT_BOOL pfShowRdrDlg );
    VARIANT_BOOL GetShowRedirectionWarningDialog ( );
    void PutPromptForCredentials (
        VARIANT_BOOL pfPrompt );
    VARIANT_BOOL GetPromptForCredentials ( );
    void PutNegotiateSecurityLayer (
        VARIANT_BOOL pfNegotiate );
    VARIANT_BOOL GetNegotiateSecurityLayer ( );
    void PutEnableCredSspSupport (
        VARIANT_BOOL pfEnableSupport );
    VARIANT_BOOL GetEnableCredSspSupport ( );
    void PutRedirectDynamicDrives (
        VARIANT_BOOL pfRedirectDynamicDrives );
    VARIANT_BOOL GetRedirectDynamicDrives ( );
    void PutRedirectDynamicDevices (
        VARIANT_BOOL pfRedirectDynamicDevices );
    VARIANT_BOOL GetRedirectDynamicDevices ( );
    IMsRdpDeviceCollectionPtr GetDeviceCollection ( );
    IMsRdpDriveCollectionPtr GetDriveCollection ( );
    void PutWarnAboutSendingCredentials (
        VARIANT_BOOL pfWarn );
    VARIANT_BOOL GetWarnAboutSendingCredentials ( );
    void PutWarnAboutClipboardRedirection (
        VARIANT_BOOL pfWarn );
    VARIANT_BOOL GetWarnAboutClipboardRedirection ( );
    void PutConnectionBarText (
        _bstr_t pConnectionBarText );
    _bstr_t GetConnectionBarText ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_ShowRedirectionWarningDialog (
        /*[in]*/ VARIANT_BOOL pfShowRdrDlg ) = 0;
      virtual HRESULT __stdcall get_ShowRedirectionWarningDialog (
        /*[out,retval]*/ VARIANT_BOOL * pfShowRdrDlg ) = 0;
      virtual HRESULT __stdcall put_PromptForCredentials (
        /*[in]*/ VARIANT_BOOL pfPrompt ) = 0;
      virtual HRESULT __stdcall get_PromptForCredentials (
        /*[out,retval]*/ VARIANT_BOOL * pfPrompt ) = 0;
      virtual HRESULT __stdcall put_NegotiateSecurityLayer (
        /*[in]*/ VARIANT_BOOL pfNegotiate ) = 0;
      virtual HRESULT __stdcall get_NegotiateSecurityLayer (
        /*[out,retval]*/ VARIANT_BOOL * pfNegotiate ) = 0;
      virtual HRESULT __stdcall put_EnableCredSspSupport (
        /*[in]*/ VARIANT_BOOL pfEnableSupport ) = 0;
      virtual HRESULT __stdcall get_EnableCredSspSupport (
        /*[out,retval]*/ VARIANT_BOOL * pfEnableSupport ) = 0;
      virtual HRESULT __stdcall put_RedirectDynamicDrives (
        /*[in]*/ VARIANT_BOOL pfRedirectDynamicDrives ) = 0;
      virtual HRESULT __stdcall get_RedirectDynamicDrives (
        /*[out,retval]*/ VARIANT_BOOL * pfRedirectDynamicDrives ) = 0;
      virtual HRESULT __stdcall put_RedirectDynamicDevices (
        /*[in]*/ VARIANT_BOOL pfRedirectDynamicDevices ) = 0;
      virtual HRESULT __stdcall get_RedirectDynamicDevices (
        /*[out,retval]*/ VARIANT_BOOL * pfRedirectDynamicDevices ) = 0;
      virtual HRESULT __stdcall get_DeviceCollection (
        /*[out,retval]*/ struct IMsRdpDeviceCollection * * ppDeviceCollection ) = 0;
      virtual HRESULT __stdcall get_DriveCollection (
        /*[out,retval]*/ struct IMsRdpDriveCollection * * ppDeviceCollection ) = 0;
      virtual HRESULT __stdcall put_WarnAboutSendingCredentials (
        /*[in]*/ VARIANT_BOOL pfWarn ) = 0;
      virtual HRESULT __stdcall get_WarnAboutSendingCredentials (
        /*[out,retval]*/ VARIANT_BOOL * pfWarn ) = 0;
      virtual HRESULT __stdcall put_WarnAboutClipboardRedirection (
        /*[in]*/ VARIANT_BOOL pfWarn ) = 0;
      virtual HRESULT __stdcall get_WarnAboutClipboardRedirection (
        /*[out,retval]*/ VARIANT_BOOL * pfWarn ) = 0;
      virtual HRESULT __stdcall put_ConnectionBarText (
        /*[in]*/ BSTR pConnectionBarText ) = 0;
      virtual HRESULT __stdcall get_ConnectionBarText (
        /*[out,retval]*/ BSTR * pConnectionBarText ) = 0;
};

struct __declspec(uuid("4eb89ff4-7f78-4a0f-8b8d-2bf02e94e4b2"))
MsRdpClient5;
    // [ default ] interface IMsRdpClient5
    // interface IMsRdpClient4
    // interface IMsRdpClient3
    // interface IMsRdpClient2
    // interface IMsRdpClient
    // interface IMsTscAx
    // interface IMsTscAx_Redist
    // [ default, source ] dispinterface IMsTscAxEvents
    // interface IMsTscNonScriptable
    // interface IMsRdpClientNonScriptable
    // interface IMsRdpClientNonScriptable2
    // interface IMsRdpClientNonScriptable3

struct __declspec(uuid("d2ea46a7-c2bf-426b-af24-e19c44456399"))
MsRdpClient6NotSafeForScripting;
    // [ default ] interface IMsRdpClient6
    // interface IMsRdpClient5
    // interface IMsRdpClient4
    // interface IMsRdpClient3
    // interface IMsRdpClient2
    // interface IMsRdpClient
    // interface IMsTscAx
    // interface IMsTscAx_Redist
    // [ default, source ] dispinterface IMsTscAxEvents
    // interface IMsTscNonScriptable
    // interface IMsRdpClientNonScriptable
    // interface IMsRdpClientNonScriptable2
    // interface IMsRdpClientNonScriptable3
    // interface IMsRdpClientNonScriptable4

struct __declspec(uuid("222c4b5d-45d9-4df0-a7c6-60cf9089d285"))
IMsRdpClientAdvancedSettings6 : IMsRdpClientAdvancedSettings5
{
    //
    // Property data
    //

    __declspec(property(get=GetHotKeyFocusReleaseLeft,put=PutHotKeyFocusReleaseLeft))
    long HotKeyFocusReleaseLeft;
    __declspec(property(get=GetHotKeyFocusReleaseRight,put=PutHotKeyFocusReleaseRight))
    long HotKeyFocusReleaseRight;
    __declspec(property(get=GetAuthenticationType))
    unsigned int AuthenticationType;
    __declspec(property(get=GetConnectToAdministerServer,put=PutConnectToAdministerServer))
    VARIANT_BOOL ConnectToAdministerServer;
    __declspec(property(get=GetEnableCredSspSupport,put=PutEnableCredSspSupport))
    VARIANT_BOOL EnableCredSspSupport;
    __declspec(property(get=GetRelativeMouseMode,put=PutRelativeMouseMode))
    VARIANT_BOOL RelativeMouseMode;
    __declspec(property(get=GetAuthenticationServiceClass,put=PutAuthenticationServiceClass))
    _bstr_t AuthenticationServiceClass;
    __declspec(property(get=GetPCB,put=PutPCB))
    _bstr_t PCB;

    //
    // Wrapper methods for error-handling
    //

    void PutRelativeMouseMode (
        VARIANT_BOOL pfRelativeMouseMode );
    VARIANT_BOOL GetRelativeMouseMode ( );
    _bstr_t GetAuthenticationServiceClass ( );
    void PutAuthenticationServiceClass (
        _bstr_t pbstrAuthServiceClass );
    _bstr_t GetPCB ( );
    void PutPCB (
        _bstr_t bstrPCB );
    void PutHotKeyFocusReleaseLeft (
        long HotKeyFocusReleaseLeft );
    long GetHotKeyFocusReleaseLeft ( );
    void PutHotKeyFocusReleaseRight (
        long HotKeyFocusReleaseRight );
    long GetHotKeyFocusReleaseRight ( );
    void PutEnableCredSspSupport (
        VARIANT_BOOL pfEnableSupport );
    VARIANT_BOOL GetEnableCredSspSupport ( );
    unsigned int GetAuthenticationType ( );
    void PutConnectToAdministerServer (
        VARIANT_BOOL pConnectToAdministerServer );
    VARIANT_BOOL GetConnectToAdministerServer ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_RelativeMouseMode (
        /*[in]*/ VARIANT_BOOL pfRelativeMouseMode ) = 0;
      virtual HRESULT __stdcall get_RelativeMouseMode (
        /*[out,retval]*/ VARIANT_BOOL * pfRelativeMouseMode ) = 0;
      virtual HRESULT __stdcall get_AuthenticationServiceClass (
        /*[out,retval]*/ BSTR * pbstrAuthServiceClass ) = 0;
      virtual HRESULT __stdcall put_AuthenticationServiceClass (
        /*[in]*/ BSTR pbstrAuthServiceClass ) = 0;
      virtual HRESULT __stdcall get_PCB (
        /*[out,retval]*/ BSTR * bstrPCB ) = 0;
      virtual HRESULT __stdcall put_PCB (
        /*[in]*/ BSTR bstrPCB ) = 0;
      virtual HRESULT __stdcall put_HotKeyFocusReleaseLeft (
        /*[in]*/ long HotKeyFocusReleaseLeft ) = 0;
      virtual HRESULT __stdcall get_HotKeyFocusReleaseLeft (
        /*[out,retval]*/ long * HotKeyFocusReleaseLeft ) = 0;
      virtual HRESULT __stdcall put_HotKeyFocusReleaseRight (
        /*[in]*/ long HotKeyFocusReleaseRight ) = 0;
      virtual HRESULT __stdcall get_HotKeyFocusReleaseRight (
        /*[out,retval]*/ long * HotKeyFocusReleaseRight ) = 0;
      virtual HRESULT __stdcall put_EnableCredSspSupport (
        /*[in]*/ VARIANT_BOOL pfEnableSupport ) = 0;
      virtual HRESULT __stdcall get_EnableCredSspSupport (
        /*[out,retval]*/ VARIANT_BOOL * pfEnableSupport ) = 0;
      virtual HRESULT __stdcall get_AuthenticationType (
        /*[out,retval]*/ unsigned int * puiAuthType ) = 0;
      virtual HRESULT __stdcall put_ConnectToAdministerServer (
        /*[in]*/ VARIANT_BOOL pConnectToAdministerServer ) = 0;
      virtual HRESULT __stdcall get_ConnectToAdministerServer (
        /*[out,retval]*/ VARIANT_BOOL * pConnectToAdministerServer ) = 0;
};

struct __declspec(uuid("67341688-d606-4c73-a5d2-2e0489009319"))
IMsRdpClientTransportSettings2 : IMsRdpClientTransportSettings
{
    //
    // Property data
    //

    __declspec(property(get=GetGatewayDomain,put=PutGatewayDomain))
    _bstr_t GatewayDomain;
    __declspec(property(put=PutGatewayPassword))
    _bstr_t GatewayPassword;
    __declspec(property(get=GetGatewayPreAuthRequirement,put=PutGatewayPreAuthRequirement))
    unsigned long GatewayPreAuthRequirement;
    __declspec(property(get=GetGatewayPreAuthServerAddr,put=PutGatewayPreAuthServerAddr))
    _bstr_t GatewayPreAuthServerAddr;
    __declspec(property(get=GetGatewaySupportUrl,put=PutGatewaySupportUrl))
    _bstr_t GatewaySupportUrl;
    __declspec(property(get=GetGatewayEncryptedOtpCookie,put=PutGatewayEncryptedOtpCookie))
    _bstr_t GatewayEncryptedOtpCookie;
    __declspec(property(get=GetGatewayEncryptedOtpCookieSize,put=PutGatewayEncryptedOtpCookieSize))
    unsigned long GatewayEncryptedOtpCookieSize;
    __declspec(property(get=GetGatewayCredSharing,put=PutGatewayCredSharing))
    unsigned long GatewayCredSharing;
    __declspec(property(get=GetGatewayUsername,put=PutGatewayUsername))
    _bstr_t GatewayUsername;

    //
    // Wrapper methods for error-handling
    //

    void PutGatewayCredSharing (
        unsigned long pulProxyCredSharing );
    unsigned long GetGatewayCredSharing ( );
    void PutGatewayPreAuthRequirement (
        unsigned long pulProxyPreAuthRequirement );
    unsigned long GetGatewayPreAuthRequirement ( );
    void PutGatewayPreAuthServerAddr (
        _bstr_t pbstrProxyPreAuthServerAddr );
    _bstr_t GetGatewayPreAuthServerAddr ( );
    void PutGatewaySupportUrl (
        _bstr_t pbstrProxySupportUrl );
    _bstr_t GetGatewaySupportUrl ( );
    void PutGatewayEncryptedOtpCookie (
        _bstr_t pbstrEncryptedOtpCookie );
    _bstr_t GetGatewayEncryptedOtpCookie ( );
    void PutGatewayEncryptedOtpCookieSize (
        unsigned long pulEncryptedOtpCookieSize );
    unsigned long GetGatewayEncryptedOtpCookieSize ( );
    void PutGatewayUsername (
        _bstr_t pProxyUsername );
    _bstr_t GetGatewayUsername ( );
    void PutGatewayDomain (
        _bstr_t pProxyDomain );
    _bstr_t GetGatewayDomain ( );
    void PutGatewayPassword (
        _bstr_t _arg1 );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_GatewayCredSharing (
        /*[in]*/ unsigned long pulProxyCredSharing ) = 0;
      virtual HRESULT __stdcall get_GatewayCredSharing (
        /*[out,retval]*/ unsigned long * pulProxyCredSharing ) = 0;
      virtual HRESULT __stdcall put_GatewayPreAuthRequirement (
        /*[in]*/ unsigned long pulProxyPreAuthRequirement ) = 0;
      virtual HRESULT __stdcall get_GatewayPreAuthRequirement (
        /*[out,retval]*/ unsigned long * pulProxyPreAuthRequirement ) = 0;
      virtual HRESULT __stdcall put_GatewayPreAuthServerAddr (
        /*[in]*/ BSTR pbstrProxyPreAuthServerAddr ) = 0;
      virtual HRESULT __stdcall get_GatewayPreAuthServerAddr (
        /*[out,retval]*/ BSTR * pbstrProxyPreAuthServerAddr ) = 0;
      virtual HRESULT __stdcall put_GatewaySupportUrl (
        /*[in]*/ BSTR pbstrProxySupportUrl ) = 0;
      virtual HRESULT __stdcall get_GatewaySupportUrl (
        /*[out,retval]*/ BSTR * pbstrProxySupportUrl ) = 0;
      virtual HRESULT __stdcall put_GatewayEncryptedOtpCookie (
        /*[in]*/ BSTR pbstrEncryptedOtpCookie ) = 0;
      virtual HRESULT __stdcall get_GatewayEncryptedOtpCookie (
        /*[out,retval]*/ BSTR * pbstrEncryptedOtpCookie ) = 0;
      virtual HRESULT __stdcall put_GatewayEncryptedOtpCookieSize (
        /*[in]*/ unsigned long pulEncryptedOtpCookieSize ) = 0;
      virtual HRESULT __stdcall get_GatewayEncryptedOtpCookieSize (
        /*[out,retval]*/ unsigned long * pulEncryptedOtpCookieSize ) = 0;
      virtual HRESULT __stdcall put_GatewayUsername (
        /*[in]*/ BSTR pProxyUsername ) = 0;
      virtual HRESULT __stdcall get_GatewayUsername (
        /*[out,retval]*/ BSTR * pProxyUsername ) = 0;
      virtual HRESULT __stdcall put_GatewayDomain (
        /*[in]*/ BSTR pProxyDomain ) = 0;
      virtual HRESULT __stdcall get_GatewayDomain (
        /*[out,retval]*/ BSTR * pProxyDomain ) = 0;
      virtual HRESULT __stdcall put_GatewayPassword (
        /*[in]*/ BSTR _arg1 ) = 0;
};

struct __declspec(uuid("d43b7d80-8517-4b6d-9eac-96ad6800d7f2"))
IMsRdpClient6 : IMsRdpClient5
{
    //
    // Property data
    //

    __declspec(property(get=GetTransportSettings2))
    IMsRdpClientTransportSettings2Ptr TransportSettings2;
    __declspec(property(get=GetAdvancedSettings7))
    IMsRdpClientAdvancedSettings6Ptr AdvancedSettings7;

    //
    // Wrapper methods for error-handling
    //

    IMsRdpClientAdvancedSettings6Ptr GetAdvancedSettings7 ( );
    IMsRdpClientTransportSettings2Ptr GetTransportSettings2 ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AdvancedSettings7 (
        /*[out,retval]*/ struct IMsRdpClientAdvancedSettings6 * * ppAdvSettings ) = 0;
      virtual HRESULT __stdcall get_TransportSettings2 (
        /*[out,retval]*/ struct IMsRdpClientTransportSettings2 * * ppXportSet2 ) = 0;
};

struct __declspec(uuid("f50fa8aa-1c7d-4f59-b15c-a90cacae1fcb"))
IMsRdpClientNonScriptable4 : IMsRdpClientNonScriptable3
{
    //
    // Property data
    //

    __declspec(property(get=GetTrustedZoneSite,put=PutTrustedZoneSite))
    VARIANT_BOOL TrustedZoneSite;
    __declspec(property(get=GetRedirectionWarningType,put=PutRedirectionWarningType))
    RedirectionWarningType _RedirectionWarningType;
    __declspec(property(get=GetWarnAboutPrinterRedirection,put=PutWarnAboutPrinterRedirection))
    VARIANT_BOOL WarnAboutPrinterRedirection;
    __declspec(property(get=GetMarkRdpSettingsSecure,put=PutMarkRdpSettingsSecure))
    VARIANT_BOOL MarkRdpSettingsSecure;
    __declspec(property(get=GetAllowCredentialSaving,put=PutAllowCredentialSaving))
    VARIANT_BOOL AllowCredentialSaving;
    __declspec(property(get=GetPromptForCredsOnClient,put=PutPromptForCredsOnClient))
    VARIANT_BOOL PromptForCredsOnClient;
    __declspec(property(get=GetLaunchedViaClientShellInterface,put=PutLaunchedViaClientShellInterface))
    VARIANT_BOOL LaunchedViaClientShellInterface;

    //
    // Wrapper methods for error-handling
    //

    void PutRedirectionWarningType (
        RedirectionWarningType pWrnType );
    RedirectionWarningType GetRedirectionWarningType ( );
    void PutMarkRdpSettingsSecure (
        VARIANT_BOOL pfRdpSecure );
    VARIANT_BOOL GetMarkRdpSettingsSecure ( );
    void PutPublisherCertificateChain (
        VARIANT * pVarCert );
    _variant_t GetPublisherCertificateChain ( );
    void PutWarnAboutPrinterRedirection (
        VARIANT_BOOL pfWarn );
    VARIANT_BOOL GetWarnAboutPrinterRedirection ( );
    void PutAllowCredentialSaving (
        VARIANT_BOOL pfAllowSave );
    VARIANT_BOOL GetAllowCredentialSaving ( );
    void PutPromptForCredsOnClient (
        VARIANT_BOOL pfPromptForCredsOnClient );
    VARIANT_BOOL GetPromptForCredsOnClient ( );
    void PutLaunchedViaClientShellInterface (
        VARIANT_BOOL pfLaunchedViaClientShellInterface );
    VARIANT_BOOL GetLaunchedViaClientShellInterface ( );
    void PutTrustedZoneSite (
        VARIANT_BOOL pfIsTrustedZone );
    VARIANT_BOOL GetTrustedZoneSite ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_RedirectionWarningType (
        /*[in]*/ RedirectionWarningType pWrnType ) = 0;
      virtual HRESULT __stdcall get_RedirectionWarningType (
        /*[out,retval]*/ RedirectionWarningType * pWrnType ) = 0;
      virtual HRESULT __stdcall put_MarkRdpSettingsSecure (
        /*[in]*/ VARIANT_BOOL pfRdpSecure ) = 0;
      virtual HRESULT __stdcall get_MarkRdpSettingsSecure (
        /*[out,retval]*/ VARIANT_BOOL * pfRdpSecure ) = 0;
      virtual HRESULT __stdcall put_PublisherCertificateChain (
        /*[in]*/ VARIANT * pVarCert ) = 0;
      virtual HRESULT __stdcall get_PublisherCertificateChain (
        /*[out,retval]*/ VARIANT * pVarCert ) = 0;
      virtual HRESULT __stdcall put_WarnAboutPrinterRedirection (
        /*[in]*/ VARIANT_BOOL pfWarn ) = 0;
      virtual HRESULT __stdcall get_WarnAboutPrinterRedirection (
        /*[out,retval]*/ VARIANT_BOOL * pfWarn ) = 0;
      virtual HRESULT __stdcall put_AllowCredentialSaving (
        /*[in]*/ VARIANT_BOOL pfAllowSave ) = 0;
      virtual HRESULT __stdcall get_AllowCredentialSaving (
        /*[out,retval]*/ VARIANT_BOOL * pfAllowSave ) = 0;
      virtual HRESULT __stdcall put_PromptForCredsOnClient (
        /*[in]*/ VARIANT_BOOL pfPromptForCredsOnClient ) = 0;
      virtual HRESULT __stdcall get_PromptForCredsOnClient (
        /*[out,retval]*/ VARIANT_BOOL * pfPromptForCredsOnClient ) = 0;
      virtual HRESULT __stdcall put_LaunchedViaClientShellInterface (
        /*[in]*/ VARIANT_BOOL pfLaunchedViaClientShellInterface ) = 0;
      virtual HRESULT __stdcall get_LaunchedViaClientShellInterface (
        /*[out,retval]*/ VARIANT_BOOL * pfLaunchedViaClientShellInterface ) = 0;
      virtual HRESULT __stdcall put_TrustedZoneSite (
        /*[in]*/ VARIANT_BOOL pfIsTrustedZone ) = 0;
      virtual HRESULT __stdcall get_TrustedZoneSite (
        /*[out,retval]*/ VARIANT_BOOL * pfIsTrustedZone ) = 0;
};

enum __MIDL_IMsRdpClientNonScriptable4_0001
{
    RedirectionWarningTypeDefault = 0,
    RedirectionWarningTypeUnsigned = 1,
    RedirectionWarningTypeUnknown = 2,
    RedirectionWarningTypeUser = 3,
    RedirectionWarningTypeThirdPartySigned = 4,
    RedirectionWarningTypeTrusted = 5,
    RedirectionWarningTypeMax = 5
};

struct __declspec(uuid("7390f3d8-0439-4c05-91e3-cf5cb290c3d0"))
MsRdpClient6;
    // [ default ] interface IMsRdpClient6
    // interface IMsRdpClient5
    // interface IMsRdpClient4
    // interface IMsRdpClient3
    // interface IMsRdpClient2
    // interface IMsRdpClient
    // interface IMsTscAx
    // interface IMsTscAx_Redist
    // [ default, source ] dispinterface IMsTscAxEvents
    // interface IMsTscNonScriptable
    // interface IMsRdpClientNonScriptable
    // interface IMsRdpClientNonScriptable2
    // interface IMsRdpClientNonScriptable3
    // interface IMsRdpClientNonScriptable4

struct __declspec(uuid("54d38bf7-b1ef-4479-9674-1bd6ea465258"))
MsRdpClient7NotSafeForScripting;
    // [ default ] interface IMsRdpClient7
    // interface IMsRdpClient6
    // interface IMsRdpClient5
    // interface IMsRdpClient4
    // interface IMsRdpClient3
    // interface IMsRdpClient2
    // interface IMsRdpClient
    // interface IMsTscAx
    // interface IMsTscAx_Redist
    // [ default, source ] dispinterface IMsTscAxEvents
    // interface IMsTscNonScriptable
    // interface IMsRdpClientNonScriptable
    // interface IMsRdpClientNonScriptable2
    // interface IMsRdpClientNonScriptable3
    // interface IMsRdpClientNonScriptable4
    // interface IMsRdpClientNonScriptable5
    // interface IMsRdpPreferredRedirectionInfo
    // interface IMsRdpExtendedSettings

struct __declspec(uuid("26036036-4010-4578-8091-0db9a1edf9c3"))
IMsRdpClientAdvancedSettings7 : IMsRdpClientAdvancedSettings6
{
    //
    // Property data
    //

    __declspec(property(get=GetAudioCaptureRedirectionMode,put=PutAudioCaptureRedirectionMode))
    VARIANT_BOOL AudioCaptureRedirectionMode;
    __declspec(property(get=GetVideoPlaybackMode,put=PutVideoPlaybackMode))
    unsigned int VideoPlaybackMode;
    __declspec(property(get=GetEnableSuperPan,put=PutEnableSuperPan))
    VARIANT_BOOL EnableSuperPan;
    __declspec(property(get=GetSuperPanAccelerationFactor,put=PutSuperPanAccelerationFactor))
    unsigned long SuperPanAccelerationFactor;
    __declspec(property(get=GetNegotiateSecurityLayer,put=PutNegotiateSecurityLayer))
    VARIANT_BOOL NegotiateSecurityLayer;
    __declspec(property(get=GetAudioQualityMode,put=PutAudioQualityMode))
    unsigned int AudioQualityMode;
    __declspec(property(get=GetRedirectDirectX,put=PutRedirectDirectX))
    VARIANT_BOOL RedirectDirectX;
    __declspec(property(get=GetNetworkConnectionType,put=PutNetworkConnectionType))
    unsigned int NetworkConnectionType;

    //
    // Wrapper methods for error-handling
    //

    void PutAudioCaptureRedirectionMode (
        VARIANT_BOOL pfRedir );
    VARIANT_BOOL GetAudioCaptureRedirectionMode ( );
    void PutVideoPlaybackMode (
        unsigned int pVideoPlaybackMode );
    unsigned int GetVideoPlaybackMode ( );
    void PutEnableSuperPan (
        VARIANT_BOOL pfEnableSuperPan );
    VARIANT_BOOL GetEnableSuperPan ( );
    void PutSuperPanAccelerationFactor (
        unsigned long puAccelFactor );
    unsigned long GetSuperPanAccelerationFactor ( );
    void PutNegotiateSecurityLayer (
        VARIANT_BOOL pfNegotiate );
    VARIANT_BOOL GetNegotiateSecurityLayer ( );
    void PutAudioQualityMode (
        unsigned int pAudioQualityMode );
    unsigned int GetAudioQualityMode ( );
    void PutRedirectDirectX (
        VARIANT_BOOL pfRedirectDirectX );
    VARIANT_BOOL GetRedirectDirectX ( );
    void PutNetworkConnectionType (
        unsigned int pConnectionType );
    unsigned int GetNetworkConnectionType ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_AudioCaptureRedirectionMode (
        /*[in]*/ VARIANT_BOOL pfRedir ) = 0;
      virtual HRESULT __stdcall get_AudioCaptureRedirectionMode (
        /*[out,retval]*/ VARIANT_BOOL * pfRedir ) = 0;
      virtual HRESULT __stdcall put_VideoPlaybackMode (
        /*[in]*/ unsigned int pVideoPlaybackMode ) = 0;
      virtual HRESULT __stdcall get_VideoPlaybackMode (
        /*[out,retval]*/ unsigned int * pVideoPlaybackMode ) = 0;
      virtual HRESULT __stdcall put_EnableSuperPan (
        /*[in]*/ VARIANT_BOOL pfEnableSuperPan ) = 0;
      virtual HRESULT __stdcall get_EnableSuperPan (
        /*[out,retval]*/ VARIANT_BOOL * pfEnableSuperPan ) = 0;
      virtual HRESULT __stdcall put_SuperPanAccelerationFactor (
        /*[in]*/ unsigned long puAccelFactor ) = 0;
      virtual HRESULT __stdcall get_SuperPanAccelerationFactor (
        /*[out,retval]*/ unsigned long * puAccelFactor ) = 0;
      virtual HRESULT __stdcall put_NegotiateSecurityLayer (
        /*[in]*/ VARIANT_BOOL pfNegotiate ) = 0;
      virtual HRESULT __stdcall get_NegotiateSecurityLayer (
        /*[out,retval]*/ VARIANT_BOOL * pfNegotiate ) = 0;
      virtual HRESULT __stdcall put_AudioQualityMode (
        /*[in]*/ unsigned int pAudioQualityMode ) = 0;
      virtual HRESULT __stdcall get_AudioQualityMode (
        /*[out,retval]*/ unsigned int * pAudioQualityMode ) = 0;
      virtual HRESULT __stdcall put_RedirectDirectX (
        /*[in]*/ VARIANT_BOOL pfRedirectDirectX ) = 0;
      virtual HRESULT __stdcall get_RedirectDirectX (
        /*[out,retval]*/ VARIANT_BOOL * pfRedirectDirectX ) = 0;
      virtual HRESULT __stdcall put_NetworkConnectionType (
        /*[in]*/ unsigned int pConnectionType ) = 0;
      virtual HRESULT __stdcall get_NetworkConnectionType (
        /*[out,retval]*/ unsigned int * pConnectionType ) = 0;
};

struct __declspec(uuid("3d5b21ac-748d-41de-8f30-e15169586bd4"))
IMsRdpClientTransportSettings3 : IMsRdpClientTransportSettings2
{
    //
    // Property data
    //

    __declspec(property(get=GetGatewayCredSourceCookie,put=PutGatewayCredSourceCookie))
    unsigned long GatewayCredSourceCookie;
    __declspec(property(get=GetGatewayAuthCookieServerAddr,put=PutGatewayAuthCookieServerAddr))
    _bstr_t GatewayAuthCookieServerAddr;
    __declspec(property(get=GetGatewayEncryptedAuthCookie,put=PutGatewayEncryptedAuthCookie))
    _bstr_t GatewayEncryptedAuthCookie;
    __declspec(property(get=GetGatewayEncryptedAuthCookieSize,put=PutGatewayEncryptedAuthCookieSize))
    unsigned long GatewayEncryptedAuthCookieSize;
    __declspec(property(get=GetGatewayAuthLoginPage,put=PutGatewayAuthLoginPage))
    _bstr_t GatewayAuthLoginPage;

    //
    // Wrapper methods for error-handling
    //

    void PutGatewayCredSourceCookie (
        unsigned long pulProxyCredSourceCookie );
    unsigned long GetGatewayCredSourceCookie ( );
    void PutGatewayAuthCookieServerAddr (
        _bstr_t pbstrProxyAuthCookieServerAddr );
    _bstr_t GetGatewayAuthCookieServerAddr ( );
    void PutGatewayEncryptedAuthCookie (
        _bstr_t pbstrEncryptedAuthCookie );
    _bstr_t GetGatewayEncryptedAuthCookie ( );
    void PutGatewayEncryptedAuthCookieSize (
        unsigned long pulEncryptedAuthCookieSize );
    unsigned long GetGatewayEncryptedAuthCookieSize ( );
    void PutGatewayAuthLoginPage (
        _bstr_t pbstrProxyAuthLoginPage );
    _bstr_t GetGatewayAuthLoginPage ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_GatewayCredSourceCookie (
        /*[in]*/ unsigned long pulProxyCredSourceCookie ) = 0;
      virtual HRESULT __stdcall get_GatewayCredSourceCookie (
        /*[out,retval]*/ unsigned long * pulProxyCredSourceCookie ) = 0;
      virtual HRESULT __stdcall put_GatewayAuthCookieServerAddr (
        /*[in]*/ BSTR pbstrProxyAuthCookieServerAddr ) = 0;
      virtual HRESULT __stdcall get_GatewayAuthCookieServerAddr (
        /*[out,retval]*/ BSTR * pbstrProxyAuthCookieServerAddr ) = 0;
      virtual HRESULT __stdcall put_GatewayEncryptedAuthCookie (
        /*[in]*/ BSTR pbstrEncryptedAuthCookie ) = 0;
      virtual HRESULT __stdcall get_GatewayEncryptedAuthCookie (
        /*[out,retval]*/ BSTR * pbstrEncryptedAuthCookie ) = 0;
      virtual HRESULT __stdcall put_GatewayEncryptedAuthCookieSize (
        /*[in]*/ unsigned long pulEncryptedAuthCookieSize ) = 0;
      virtual HRESULT __stdcall get_GatewayEncryptedAuthCookieSize (
        /*[out,retval]*/ unsigned long * pulEncryptedAuthCookieSize ) = 0;
      virtual HRESULT __stdcall put_GatewayAuthLoginPage (
        /*[in]*/ BSTR pbstrProxyAuthLoginPage ) = 0;
      virtual HRESULT __stdcall get_GatewayAuthLoginPage (
        /*[out,retval]*/ BSTR * pbstrProxyAuthLoginPage ) = 0;
};

struct __declspec(uuid("25f2ce20-8b1d-4971-a7cd-549dae201fc0"))
IMsRdpClientSecuredSettings2 : IMsRdpClientSecuredSettings
{
    //
    // Property data
    //

    __declspec(property(get=GetPCB,put=PutPCB))
    _bstr_t PCB;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetPCB ( );
    void PutPCB (
        _bstr_t bstrPCB );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_PCB (
        /*[out,retval]*/ BSTR * bstrPCB ) = 0;
      virtual HRESULT __stdcall put_PCB (
        /*[in]*/ BSTR bstrPCB ) = 0;
};

struct __declspec(uuid("92c38a7d-241a-418c-9936-099872c9af20"))
ITSRemoteProgram2 : ITSRemoteProgram
{
    //
    // Property data
    //

    __declspec(property(put=PutRemoteApplicationName))
    _bstr_t RemoteApplicationName;
    __declspec(property(put=PutRemoteApplicationProgram))
    _bstr_t RemoteApplicationProgram;
    __declspec(property(put=PutRemoteApplicationArgs))
    _bstr_t RemoteApplicationArgs;

    //
    // Wrapper methods for error-handling
    //

    void PutRemoteApplicationName (
        _bstr_t _arg1 );
    void PutRemoteApplicationProgram (
        _bstr_t _arg1 );
    void PutRemoteApplicationArgs (
        _bstr_t _arg1 );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_RemoteApplicationName (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall put_RemoteApplicationProgram (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall put_RemoteApplicationArgs (
        /*[in]*/ BSTR _arg1 ) = 0;
};

struct __declspec(uuid("b2a5b5ce-3461-444a-91d4-add26d070638"))
IMsRdpClient7 : IMsRdpClient6
{
    //
    // Property data
    //

    __declspec(property(get=GetAdvancedSettings8))
    IMsRdpClientAdvancedSettings7Ptr AdvancedSettings8;
    __declspec(property(get=GetTransportSettings3))
    IMsRdpClientTransportSettings3Ptr TransportSettings3;
    __declspec(property(get=GetSecuredSettings3))
    IMsRdpClientSecuredSettings2Ptr SecuredSettings3;
    __declspec(property(get=GetRemoteProgram2))
    ITSRemoteProgram2Ptr RemoteProgram2;

    //
    // Wrapper methods for error-handling
    //

    IMsRdpClientAdvancedSettings7Ptr GetAdvancedSettings8 ( );
    IMsRdpClientTransportSettings3Ptr GetTransportSettings3 ( );
    _bstr_t GetStatusText (
        unsigned int statusCode );
    IMsRdpClientSecuredSettings2Ptr GetSecuredSettings3 ( );
    ITSRemoteProgram2Ptr GetRemoteProgram2 ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AdvancedSettings8 (
        /*[out,retval]*/ struct IMsRdpClientAdvancedSettings7 * * ppAdvSettings ) = 0;
      virtual HRESULT __stdcall get_TransportSettings3 (
        /*[out,retval]*/ struct IMsRdpClientTransportSettings3 * * ppXportSet3 ) = 0;
      virtual HRESULT __stdcall raw_GetStatusText (
        /*[in]*/ unsigned int statusCode,
        /*[out,retval]*/ BSTR * pBstrStatusText ) = 0;
      virtual HRESULT __stdcall get_SecuredSettings3 (
        /*[out,retval]*/ struct IMsRdpClientSecuredSettings2 * * ppSecuredSettings ) = 0;
      virtual HRESULT __stdcall get_RemoteProgram2 (
        /*[out,retval]*/ struct ITSRemoteProgram2 * * ppRemoteProgram ) = 0;
};

struct __declspec(uuid("4f6996d5-d7b1-412c-b0ff-063718566907"))
IMsRdpClientNonScriptable5 : IMsRdpClientNonScriptable4
{
    //
    // Property data
    //

    __declspec(property(get=GetUseMultimon,put=PutUseMultimon))
    VARIANT_BOOL UseMultimon;
    __declspec(property(get=GetRemoteMonitorCount))
    unsigned long RemoteMonitorCount;
    __declspec(property(get=GetRemoteMonitorLayoutMatchesLocal))
    VARIANT_BOOL RemoteMonitorLayoutMatchesLocal;
    __declspec(property(put=PutDisableConnectionBar))
    VARIANT_BOOL DisableConnectionBar;
    __declspec(property(get=GetDisableRemoteAppCapsCheck,put=PutDisableRemoteAppCapsCheck))
    VARIANT_BOOL DisableRemoteAppCapsCheck;
    __declspec(property(get=GetWarnAboutDirectXRedirection,put=PutWarnAboutDirectXRedirection))
    VARIANT_BOOL WarnAboutDirectXRedirection;
    __declspec(property(get=GetAllowPromptingForCredentials,put=PutAllowPromptingForCredentials))
    VARIANT_BOOL AllowPromptingForCredentials;

    //
    // Wrapper methods for error-handling
    //

    void PutUseMultimon (
        VARIANT_BOOL pfUseMultimon );
    VARIANT_BOOL GetUseMultimon ( );
    unsigned long GetRemoteMonitorCount ( );
    HRESULT GetRemoteMonitorsBoundingBox (
        long * pLeft,
        long * pTop,
        long * pRight,
        long * pBottom );
    VARIANT_BOOL GetRemoteMonitorLayoutMatchesLocal ( );
    void PutDisableConnectionBar (
        VARIANT_BOOL _arg1 );
    void PutDisableRemoteAppCapsCheck (
        VARIANT_BOOL pfDisableRemoteAppCapsCheck );
    VARIANT_BOOL GetDisableRemoteAppCapsCheck ( );
    void PutWarnAboutDirectXRedirection (
        VARIANT_BOOL pfWarn );
    VARIANT_BOOL GetWarnAboutDirectXRedirection ( );
    void PutAllowPromptingForCredentials (
        VARIANT_BOOL pfAllow );
    VARIANT_BOOL GetAllowPromptingForCredentials ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_UseMultimon (
        /*[in]*/ VARIANT_BOOL pfUseMultimon ) = 0;
      virtual HRESULT __stdcall get_UseMultimon (
        /*[out,retval]*/ VARIANT_BOOL * pfUseMultimon ) = 0;
      virtual HRESULT __stdcall get_RemoteMonitorCount (
        /*[out,retval]*/ unsigned long * pcRemoteMonitors ) = 0;
      virtual HRESULT __stdcall raw_GetRemoteMonitorsBoundingBox (
        /*[out]*/ long * pLeft,
        /*[out]*/ long * pTop,
        /*[out]*/ long * pRight,
        /*[out]*/ long * pBottom ) = 0;
      virtual HRESULT __stdcall get_RemoteMonitorLayoutMatchesLocal (
        /*[out,retval]*/ VARIANT_BOOL * pfRemoteMatchesLocal ) = 0;
      virtual HRESULT __stdcall put_DisableConnectionBar (
        /*[in]*/ VARIANT_BOOL _arg1 ) = 0;
      virtual HRESULT __stdcall put_DisableRemoteAppCapsCheck (
        /*[in]*/ VARIANT_BOOL pfDisableRemoteAppCapsCheck ) = 0;
      virtual HRESULT __stdcall get_DisableRemoteAppCapsCheck (
        /*[out,retval]*/ VARIANT_BOOL * pfDisableRemoteAppCapsCheck ) = 0;
      virtual HRESULT __stdcall put_WarnAboutDirectXRedirection (
        /*[in]*/ VARIANT_BOOL pfWarn ) = 0;
      virtual HRESULT __stdcall get_WarnAboutDirectXRedirection (
        /*[out,retval]*/ VARIANT_BOOL * pfWarn ) = 0;
      virtual HRESULT __stdcall put_AllowPromptingForCredentials (
        /*[in]*/ VARIANT_BOOL pfAllow ) = 0;
      virtual HRESULT __stdcall get_AllowPromptingForCredentials (
        /*[out,retval]*/ VARIANT_BOOL * pfAllow ) = 0;
};

struct __declspec(uuid("fdd029f9-9574-4def-8529-64b521cccaa4"))
IMsRdpPreferredRedirectionInfo : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetUseRedirectionServerName,put=PutUseRedirectionServerName))
    VARIANT_BOOL UseRedirectionServerName;

    //
    // Wrapper methods for error-handling
    //

    void PutUseRedirectionServerName (
        VARIANT_BOOL pVal );
    VARIANT_BOOL GetUseRedirectionServerName ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_UseRedirectionServerName (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_UseRedirectionServerName (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
};

struct __declspec(uuid("302d8188-0052-4807-806a-362b628f9ac5"))
IMsRdpExtendedSettings : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    void PutProperty (
        _bstr_t bstrPropertyName,
        VARIANT * pValue );
    _variant_t GetProperty (
        _bstr_t bstrPropertyName );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_Property (
        /*[in]*/ BSTR bstrPropertyName,
        /*[in]*/ VARIANT * pValue ) = 0;
      virtual HRESULT __stdcall get_Property (
        /*[in]*/ BSTR bstrPropertyName,
        /*[out,retval]*/ VARIANT * pValue ) = 0;
};

struct __declspec(uuid("a9d7038d-b5ed-472e-9c47-94bea90a5910"))
MsRdpClient7;
    // [ default ] interface IMsRdpClient7
    // interface IMsRdpClient6
    // interface IMsRdpClient5
    // interface IMsRdpClient4
    // interface IMsRdpClient3
    // interface IMsRdpClient2
    // interface IMsRdpClient
    // interface IMsTscAx
    // interface IMsTscAx_Redist
    // [ default, source ] dispinterface IMsTscAxEvents
    // interface IMsTscNonScriptable
    // interface IMsRdpClientNonScriptable
    // interface IMsRdpClientNonScriptable2
    // interface IMsRdpClientNonScriptable3
    // interface IMsRdpClientNonScriptable4
    // interface IMsRdpClientNonScriptable5
    // interface IMsRdpPreferredRedirectionInfo

struct __declspec(uuid("a3bc03a0-041d-42e3-ad22-882b7865c9c5"))
MsRdpClient8NotSafeForScripting;
    // [ default ] interface IMsRdpClient8
    // interface IMsRdpClient7
    // interface IMsRdpClient6
    // interface IMsRdpClient5
    // interface IMsRdpClient4
    // interface IMsRdpClient3
    // interface IMsRdpClient2
    // interface IMsRdpClient
    // interface IMsTscAx
    // interface IMsTscAx_Redist
    // [ default, source ] dispinterface IMsTscAxEvents
    // interface IMsTscNonScriptable
    // interface IMsRdpClientNonScriptable
    // interface IMsRdpClientNonScriptable2
    // interface IMsRdpClientNonScriptable3
    // interface IMsRdpClientNonScriptable4
    // interface IMsRdpClientNonScriptable5
    // interface IMsRdpPreferredRedirectionInfo
    // interface IMsRdpExtendedSettings

enum __MIDL___MIDL_itf_mstsax_0000_0000_0004
{
    RemoteSessionActionCharms = 0,
    RemoteSessionActionAppbar = 1,
    RemoteSessionActionSnap = 2,
    RemoteSessionActionStartScreen = 3,
    RemoteSessionActionAppSwitch = 4,
    RemoteSessionActionActionCenter = 5
};

struct __declspec(uuid("89acb528-2557-4d16-8625-226a30e97e9a"))
IMsRdpClientAdvancedSettings8 : IMsRdpClientAdvancedSettings7
{
    //
    // Property data
    //

    __declspec(property(get=GetBandwidthDetection,put=PutBandwidthDetection))
    VARIANT_BOOL BandwidthDetection;
    __declspec(property(get=GetClientProtocolSpec,put=PutClientProtocolSpec))
    ClientSpec ClientProtocolSpec;

    //
    // Wrapper methods for error-handling
    //

    void PutBandwidthDetection (
        VARIANT_BOOL pfAutodetect );
    VARIANT_BOOL GetBandwidthDetection ( );
    void PutClientProtocolSpec (
        ClientSpec pClientMode );
    ClientSpec GetClientProtocolSpec ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_BandwidthDetection (
        /*[in]*/ VARIANT_BOOL pfAutodetect ) = 0;
      virtual HRESULT __stdcall get_BandwidthDetection (
        /*[out,retval]*/ VARIANT_BOOL * pfAutodetect ) = 0;
      virtual HRESULT __stdcall put_ClientProtocolSpec (
        /*[in]*/ ClientSpec pClientMode ) = 0;
      virtual HRESULT __stdcall get_ClientProtocolSpec (
        /*[out,retval]*/ ClientSpec * pClientMode ) = 0;
};

enum __MIDL___MIDL_itf_mstsax_0000_0000_0003
{
    FullMode = 0,
    ThinClientMode = 1,
    SmallCacheMode = 2
};

struct __declspec(uuid("4247e044-9271-43a9-bc49-e2ad9e855d62"))
IMsRdpClient8 : IMsRdpClient7
{
    //
    // Property data
    //

    __declspec(property(get=GetAdvancedSettings9))
    IMsRdpClientAdvancedSettings8Ptr AdvancedSettings9;

    //
    // Wrapper methods for error-handling
    //

    HRESULT SendRemoteAction (
        RemoteSessionActionType actionType );
    IMsRdpClientAdvancedSettings8Ptr GetAdvancedSettings9 ( );
    ControlReconnectStatus Reconnect (
        unsigned long ulWidth,
        unsigned long ulHeight );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_SendRemoteAction (
        /*[in]*/ RemoteSessionActionType actionType ) = 0;
      virtual HRESULT __stdcall get_AdvancedSettings9 (
        /*[out,retval]*/ struct IMsRdpClientAdvancedSettings8 * * ppAdvSettings ) = 0;
      virtual HRESULT __stdcall raw_Reconnect (
        /*[in]*/ unsigned long ulWidth,
        /*[in]*/ unsigned long ulHeight,
        /*[out,retval]*/ ControlReconnectStatus * pReconnectStatus ) = 0;
};

enum __MIDL_IMsRdpClient8_0001
{
    controlReconnectStarted = 0,
    controlReconnectBlocked = 1
};

struct __declspec(uuid("5f681803-2900-4c43-a1cc-cf405404a676"))
MsRdpClient8;
    // [ default ] interface IMsRdpClient8
    // interface IMsRdpClient7
    // interface IMsRdpClient6
    // interface IMsRdpClient5
    // interface IMsRdpClient4
    // interface IMsRdpClient3
    // interface IMsRdpClient2
    // interface IMsRdpClient
    // interface IMsTscAx
    // interface IMsTscAx_Redist
    // [ default, source ] dispinterface IMsTscAxEvents
    // interface IMsTscNonScriptable
    // interface IMsRdpClientNonScriptable
    // interface IMsRdpClientNonScriptable2
    // interface IMsRdpClientNonScriptable3
    // interface IMsRdpClientNonScriptable4
    // interface IMsRdpClientNonScriptable5
    // interface IMsRdpPreferredRedirectionInfo

struct __declspec(uuid("8b918b82-7985-4c24-89df-c33ad2bbfbcd"))
MsRdpClient9NotSafeForScripting;
    // [ default ] interface IMsRdpClient9
    // interface IMsRdpClient8
    // interface IMsRdpClient7
    // interface IMsRdpClient6
    // interface IMsRdpClient5
    // interface IMsRdpClient4
    // interface IMsRdpClient3
    // interface IMsRdpClient2
    // interface IMsRdpClient
    // interface IMsTscAx
    // interface IMsTscAx_Redist
    // [ default, source ] dispinterface IMsTscAxEvents
    // interface IMsTscNonScriptable
    // interface IMsRdpClientNonScriptable
    // interface IMsRdpClientNonScriptable2
    // interface IMsRdpClientNonScriptable3
    // interface IMsRdpClientNonScriptable4
    // interface IMsRdpClientNonScriptable5
    // interface IMsRdpPreferredRedirectionInfo
    // interface IMsRdpExtendedSettings

struct __declspec(uuid("011c3236-4d81-4515-9143-067ab630d299"))
IMsRdpClientTransportSettings4 : IMsRdpClientTransportSettings3
{
    //
    // Property data
    //

    __declspec(property(put=PutGatewayBrokeringType))
    unsigned long GatewayBrokeringType;

    //
    // Wrapper methods for error-handling
    //

    void PutGatewayBrokeringType (
        unsigned long _arg1 );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_GatewayBrokeringType (
        /*[in]*/ unsigned long _arg1 ) = 0;
};

struct __declspec(uuid("28904001-04b6-436c-a55b-0af1a0883dc9"))
IMsRdpClient9 : IMsRdpClient8
{
    //
    // Property data
    //

    __declspec(property(get=GetTransportSettings4))
    IMsRdpClientTransportSettings4Ptr TransportSettings4;

    //
    // Wrapper methods for error-handling
    //

    IMsRdpClientTransportSettings4Ptr GetTransportSettings4 ( );
    HRESULT SyncSessionDisplaySettings ( );
    HRESULT UpdateSessionDisplaySettings (
        unsigned long ulDesktopWidth,
        unsigned long ulDesktopHeight,
        unsigned long ulPhysicalWidth,
        unsigned long ulPhysicalHeight,
        unsigned long ulOrientation,
        unsigned long ulDesktopScaleFactor,
        unsigned long ulDeviceScaleFactor );
    HRESULT attachEvent (
        _bstr_t eventName,
        IDispatch * callback );
    HRESULT detachEvent (
        _bstr_t eventName,
        IDispatch * callback );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TransportSettings4 (
        /*[out,retval]*/ struct IMsRdpClientTransportSettings4 * * ppXportSet4 ) = 0;
      virtual HRESULT __stdcall raw_SyncSessionDisplaySettings ( ) = 0;
      virtual HRESULT __stdcall raw_UpdateSessionDisplaySettings (
        /*[in]*/ unsigned long ulDesktopWidth,
        /*[in]*/ unsigned long ulDesktopHeight,
        /*[in]*/ unsigned long ulPhysicalWidth,
        /*[in]*/ unsigned long ulPhysicalHeight,
        /*[in]*/ unsigned long ulOrientation,
        /*[in]*/ unsigned long ulDesktopScaleFactor,
        /*[in]*/ unsigned long ulDeviceScaleFactor ) = 0;
      virtual HRESULT __stdcall raw_attachEvent (
        /*[in]*/ BSTR eventName,
        /*[in]*/ IDispatch * callback ) = 0;
      virtual HRESULT __stdcall raw_detachEvent (
        /*[in]*/ BSTR eventName,
        /*[in]*/ IDispatch * callback ) = 0;
};

struct __declspec(uuid("301b94ba-5d25-4a12-bffe-3b6e7a616585"))
MsRdpClient9;
    // [ default ] interface IMsRdpClient9
    // interface IMsRdpClient8
    // interface IMsRdpClient7
    // interface IMsRdpClient6
    // interface IMsRdpClient5
    // interface IMsRdpClient4
    // interface IMsRdpClient3
    // interface IMsRdpClient2
    // interface IMsRdpClient
    // interface IMsTscAx
    // interface IMsTscAx_Redist
    // [ default, source ] dispinterface IMsTscAxEvents
    // interface IMsTscNonScriptable
    // interface IMsRdpClientNonScriptable
    // interface IMsRdpClientNonScriptable2
    // interface IMsRdpClientNonScriptable3
    // interface IMsRdpClientNonScriptable4
    // interface IMsRdpClientNonScriptable5
    // interface IMsRdpPreferredRedirectionInfo

struct __declspec(uuid("a0c63c30-f08d-4ab4-907c-34905d770c7d"))
MsRdpClient10NotSafeForScripting;
    // [ default ] interface IMsRdpClient10
    // interface IMsRdpClient9
    // interface IMsRdpClient8
    // interface IMsRdpClient7
    // interface IMsRdpClient6
    // interface IMsRdpClient5
    // interface IMsRdpClient4
    // interface IMsRdpClient3
    // interface IMsRdpClient2
    // interface IMsRdpClient
    // interface IMsTscAx
    // interface IMsTscAx_Redist
    // [ default, source ] dispinterface IMsTscAxEvents
    // interface IMsTscNonScriptable
    // interface IMsRdpClientNonScriptable
    // interface IMsRdpClientNonScriptable2
    // interface IMsRdpClientNonScriptable3
    // interface IMsRdpClientNonScriptable4
    // interface IMsRdpClientNonScriptable5
    // interface IMsRdpPreferredRedirectionInfo
    // interface IMsRdpExtendedSettings

struct __declspec(uuid("4b84ea77-acea-418c-881a-4a8c28ab1510"))
ITSRemoteProgram3 : ITSRemoteProgram2
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT ServerStartApp (
        _bstr_t bstrAppUserModelId,
        _bstr_t bstrArguments,
        VARIANT_BOOL vbExpandEnvVarInArgumentsOnServer );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_ServerStartApp (
        /*[in]*/ BSTR bstrAppUserModelId,
        /*[in]*/ BSTR bstrArguments,
        /*[in]*/ VARIANT_BOOL vbExpandEnvVarInArgumentsOnServer ) = 0;
};

struct __declspec(uuid("7ed92c39-eb38-4927-a70a-708ac5a59321"))
IMsRdpClient10 : IMsRdpClient9
{
    //
    // Property data
    //

    __declspec(property(get=GetRemoteProgram3))
    ITSRemoteProgram3Ptr RemoteProgram3;

    //
    // Wrapper methods for error-handling
    //

    ITSRemoteProgram3Ptr GetRemoteProgram3 ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_RemoteProgram3 (
        /*[out,retval]*/ struct ITSRemoteProgram3 * * ppRemoteProgram ) = 0;
};

struct __declspec(uuid("c0efa91a-eeb7-41c7-97fa-f0ed645efb24"))
MsRdpClient10;
    // [ default ] interface IMsRdpClient10
    // interface IMsRdpClient9
    // interface IMsRdpClient8
    // interface IMsRdpClient7
    // interface IMsRdpClient6
    // interface IMsRdpClient5
    // interface IMsRdpClient4
    // interface IMsRdpClient3
    // interface IMsRdpClient2
    // interface IMsRdpClient
    // interface IMsTscAx
    // interface IMsTscAx_Redist
    // [ default, source ] dispinterface IMsTscAxEvents
    // interface IMsTscNonScriptable
    // interface IMsRdpClientNonScriptable
    // interface IMsRdpClientNonScriptable2
    // interface IMsRdpClientNonScriptable3
    // interface IMsRdpClientNonScriptable4
    // interface IMsRdpClientNonScriptable5
    // interface IMsRdpPreferredRedirectionInfo

struct __declspec(uuid("1df7c823-b2d4-4b54-975a-f2ac5d7cf8b8"))
MsRdpClient11NotSafeForScripting;
    // [ default ] interface IMsRdpClient10
    // interface IMsRdpClient9
    // interface IMsRdpClient8
    // interface IMsRdpClient7
    // interface IMsRdpClient6
    // interface IMsRdpClient5
    // interface IMsRdpClient4
    // interface IMsRdpClient3
    // interface IMsRdpClient2
    // interface IMsRdpClient
    // interface IMsTscAx
    // interface IMsTscAx_Redist
    // [ default, source ] dispinterface IMsTscAxEvents
    // interface IMsTscNonScriptable
    // interface IMsRdpClientNonScriptable
    // interface IMsRdpClientNonScriptable2
    // interface IMsRdpClientNonScriptable3
    // interface IMsRdpClientNonScriptable4
    // interface IMsRdpClientNonScriptable5
    // interface IMsRdpClientNonScriptable6
    // interface IMsRdpClientNonScriptable7
    // interface IMsRdpPreferredRedirectionInfo
    // interface IMsRdpExtendedSettings

struct __declspec(uuid("05293249-b28b-4bd8-be64-1b2f496b910e"))
IMsRdpClientNonScriptable6 : IMsRdpClientNonScriptable5
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT SendLocation2D (
        double latitude,
        double longitude );
    HRESULT SendLocation3D (
        double latitude,
        double longitude,
        int altitude );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_SendLocation2D (
        /*[in]*/ double latitude,
        /*[in]*/ double longitude ) = 0;
      virtual HRESULT __stdcall raw_SendLocation3D (
        /*[in]*/ double latitude,
        /*[in]*/ double longitude,
        /*[in]*/ int altitude ) = 0;
};

struct __declspec(uuid("09750604-d625-47c1-9fcd-f09f735705d7"))
IMsRdpCameraRedirConfig : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetFriendlyName))
    _bstr_t FriendlyName;
    __declspec(property(get=GetSymbolicLink))
    _bstr_t SymbolicLink;
    __declspec(property(get=GetInstanceId))
    _bstr_t InstanceId;
    __declspec(property(get=GetParentInstanceId))
    _bstr_t ParentInstanceId;
    __declspec(property(get=GetRedirected,put=PutRedirected))
    VARIANT_BOOL Redirected;
    __declspec(property(get=GetDeviceExists))
    VARIANT_BOOL DeviceExists;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetFriendlyName ( );
    _bstr_t GetSymbolicLink ( );
    _bstr_t GetInstanceId ( );
    _bstr_t GetParentInstanceId ( );
    void PutRedirected (
        VARIANT_BOOL pfRedirected );
    VARIANT_BOOL GetRedirected ( );
    VARIANT_BOOL GetDeviceExists ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_FriendlyName (
        /*[out,retval]*/ BSTR * pFriendlyName ) = 0;
      virtual HRESULT __stdcall get_SymbolicLink (
        /*[out,retval]*/ BSTR * pSymbolicLink ) = 0;
      virtual HRESULT __stdcall get_InstanceId (
        /*[out,retval]*/ BSTR * pInstanceId ) = 0;
      virtual HRESULT __stdcall get_ParentInstanceId (
        /*[out,retval]*/ BSTR * pParentInstanceId ) = 0;
      virtual HRESULT __stdcall put_Redirected (
        /*[in]*/ VARIANT_BOOL pfRedirected ) = 0;
      virtual HRESULT __stdcall get_Redirected (
        /*[out,retval]*/ VARIANT_BOOL * pfRedirected ) = 0;
      virtual HRESULT __stdcall get_DeviceExists (
        /*[out,retval]*/ VARIANT_BOOL * pfExists ) = 0;
};

struct __declspec(uuid("ae45252b-aaab-4504-b681-649d6073a37a"))
IMsRdpCameraRedirConfigCollection : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    unsigned long Count;
    __declspec(property(get=GetByIndex))
    IMsRdpCameraRedirConfigPtr ByIndex[];
    __declspec(property(get=GetBySymbolicLink))
    IMsRdpCameraRedirConfigPtr BySymbolicLink[];
    __declspec(property(get=GetByInstanceId))
    IMsRdpCameraRedirConfigPtr ByInstanceId[];
    __declspec(property(get=GetRedirectByDefault,put=PutRedirectByDefault))
    VARIANT_BOOL RedirectByDefault;
    __declspec(property(get=GetEncodeVideo,put=PutEncodeVideo))
    VARIANT_BOOL EncodeVideo;
    __declspec(property(get=GetEncodingQuality,put=PutEncodingQuality))
    CameraRedirEncodingQuality EncodingQuality;

    //
    // Wrapper methods for error-handling
    //

    HRESULT Rescan ( );
    unsigned long GetCount ( );
    IMsRdpCameraRedirConfigPtr GetByIndex (
        unsigned long index );
    IMsRdpCameraRedirConfigPtr GetBySymbolicLink (
        _bstr_t SymbolicLink );
    IMsRdpCameraRedirConfigPtr GetByInstanceId (
        _bstr_t InstanceId );
    HRESULT AddConfig (
        _bstr_t SymbolicLink,
        VARIANT_BOOL fRedirected );
    void PutRedirectByDefault (
        VARIANT_BOOL pfRedirect );
    VARIANT_BOOL GetRedirectByDefault ( );
    void PutEncodeVideo (
        VARIANT_BOOL pfEncode );
    VARIANT_BOOL GetEncodeVideo ( );
    void PutEncodingQuality (
        CameraRedirEncodingQuality pEncodingQuality );
    CameraRedirEncodingQuality GetEncodingQuality ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Rescan ( ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ unsigned long * pCount ) = 0;
      virtual HRESULT __stdcall get_ByIndex (
        /*[in]*/ unsigned long index,
        /*[out,retval]*/ struct IMsRdpCameraRedirConfig * * ppConfig ) = 0;
      virtual HRESULT __stdcall get_BySymbolicLink (
        /*[in]*/ BSTR SymbolicLink,
        /*[out,retval]*/ struct IMsRdpCameraRedirConfig * * ppConfig ) = 0;
      virtual HRESULT __stdcall get_ByInstanceId (
        /*[in]*/ BSTR InstanceId,
        /*[out,retval]*/ struct IMsRdpCameraRedirConfig * * ppConfig ) = 0;
      virtual HRESULT __stdcall raw_AddConfig (
        /*[in]*/ BSTR SymbolicLink,
        /*[in]*/ VARIANT_BOOL fRedirected ) = 0;
      virtual HRESULT __stdcall put_RedirectByDefault (
        /*[in]*/ VARIANT_BOOL pfRedirect ) = 0;
      virtual HRESULT __stdcall get_RedirectByDefault (
        /*[out,retval]*/ VARIANT_BOOL * pfRedirect ) = 0;
      virtual HRESULT __stdcall put_EncodeVideo (
        /*[in]*/ VARIANT_BOOL pfEncode ) = 0;
      virtual HRESULT __stdcall get_EncodeVideo (
        /*[out,retval]*/ VARIANT_BOOL * pfEncode ) = 0;
      virtual HRESULT __stdcall put_EncodingQuality (
        /*[in]*/ CameraRedirEncodingQuality pEncodingQuality ) = 0;
      virtual HRESULT __stdcall get_EncodingQuality (
        /*[out,retval]*/ CameraRedirEncodingQuality * pEncodingQuality ) = 0;
};

enum __MIDL___MIDL_itf_mstsax_0000_0008_0001
{
    encodingQualityLow = 0,
    encodingQualityMedium = 1,
    encodingQualityHigh = 2
};

struct __declspec(uuid("2e769ee8-00c7-43dc-afd9-235d75b72a40"))
IMsRdpClipboard : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL CanSyncLocalClipboardToRemoteSession ( );
    HRESULT SyncLocalClipboardToRemoteSession ( );
    VARIANT_BOOL CanSyncRemoteClipboardToLocalSession ( );
    HRESULT SyncRemoteClipboardToLocalSession ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_CanSyncLocalClipboardToRemoteSession (
        /*[out,retval]*/ VARIANT_BOOL * pfSync ) = 0;
      virtual HRESULT __stdcall raw_SyncLocalClipboardToRemoteSession ( ) = 0;
      virtual HRESULT __stdcall raw_CanSyncRemoteClipboardToLocalSession (
        /*[out,retval]*/ VARIANT_BOOL * pfSync ) = 0;
      virtual HRESULT __stdcall raw_SyncRemoteClipboardToLocalSession ( ) = 0;
};

struct __declspec(uuid("71b4a60a-fe21-46d8-a39b-8e32ba0c5ecc"))
IMsRdpClientNonScriptable7 : IMsRdpClientNonScriptable6
{
    //
    // Property data
    //

    __declspec(property(get=GetCameraRedirConfigCollection))
    IMsRdpCameraRedirConfigCollectionPtr CameraRedirConfigCollection;
    __declspec(property(get=GetClipboard))
    IMsRdpClipboardPtr Clipboard;

    //
    // Wrapper methods for error-handling
    //

    IMsRdpCameraRedirConfigCollectionPtr GetCameraRedirConfigCollection ( );
    HRESULT DisableDpiCursorScalingForProcess ( );
    IMsRdpClipboardPtr GetClipboard ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CameraRedirConfigCollection (
        /*[out,retval]*/ struct IMsRdpCameraRedirConfigCollection * * ppCameraCollection ) = 0;
      virtual HRESULT __stdcall raw_DisableDpiCursorScalingForProcess ( ) = 0;
      virtual HRESULT __stdcall get_Clipboard (
        /*[out,retval]*/ struct IMsRdpClipboard * * ppClipboard ) = 0;
};

struct __declspec(uuid("22a7e88c-5bf5-4de6-b687-60f7331df190"))
MsRdpClient11;
    // [ default ] interface IMsRdpClient10
    // interface IMsRdpClient9
    // interface IMsRdpClient8
    // interface IMsRdpClient7
    // interface IMsRdpClient6
    // interface IMsRdpClient5
    // interface IMsRdpClient4
    // interface IMsRdpClient3
    // interface IMsRdpClient2
    // interface IMsRdpClient
    // interface IMsTscAx
    // interface IMsTscAx_Redist
    // [ default, source ] dispinterface IMsTscAxEvents
    // interface IMsTscNonScriptable
    // interface IMsRdpClientNonScriptable
    // interface IMsRdpClientNonScriptable2
    // interface IMsRdpClientNonScriptable3
    // interface IMsRdpClientNonScriptable4
    // interface IMsRdpClientNonScriptable5
    // interface IMsRdpClientNonScriptable6
    // interface IMsRdpClientNonScriptable7
    // interface IMsRdpPreferredRedirectionInfo

struct __declspec(uuid("079863b7-6d47-4105-8bfe-0cdcb360e67d"))
IRemoteDesktopClientEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT OnConnecting ( );
    HRESULT OnConnected ( );
    HRESULT OnLoginCompleted ( );
    HRESULT OnDisconnected (
        long disconnectReason,
        long ExtendedDisconnectReason,
        _bstr_t disconnectErrorMessage );
    HRESULT OnStatusChanged (
        long statusCode,
        _bstr_t statusMessage );
    HRESULT OnAutoReconnecting (
        long disconnectReason,
        long ExtendedDisconnectReason,
        _bstr_t disconnectErrorMessage,
        VARIANT_BOOL networkAvailable,
        long attemptCount,
        long maxAttemptCount );
    HRESULT OnAutoReconnected ( );
    HRESULT OnDialogDisplaying ( );
    HRESULT OnDialogDismissed ( );
    HRESULT OnNetworkStatusChanged (
        unsigned long qualityLevel,
        long bandwidth,
        long rtt );
    HRESULT OnAdminMessageReceived (
        _bstr_t adminMessage );
    HRESULT OnKeyCombinationPressed (
        long keyCombination );
    HRESULT OnRemoteDesktopSizeChanged (
        long width,
        long height );
    HRESULT OnTouchPointerCursorMoved (
        long x,
        long y );
};

struct __declspec(uuid("eab16c5d-eed1-4e95-868b-0fba1b42c092"))
RemoteDesktopClient;
    // [ default ] interface IRemoteDesktopClient
    // [ default, source ] dispinterface IRemoteDesktopClientEvents

struct __declspec(uuid("48a0f2a7-2713-431f-bbac-6f4558e7d64d"))
IRemoteDesktopClientSettings : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT ApplySettings (
        _bstr_t RdpFileContents );
    _bstr_t RetrieveSettings ( );
    _variant_t GetRdpProperty (
        _bstr_t propertyName );
    HRESULT SetRdpProperty (
        _bstr_t propertyName,
        const _variant_t & Value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_ApplySettings (
        /*[in]*/ BSTR RdpFileContents ) = 0;
      virtual HRESULT __stdcall raw_RetrieveSettings (
        /*[out,retval]*/ BSTR * RdpFileContents ) = 0;
      virtual HRESULT __stdcall raw_GetRdpProperty (
        /*[in]*/ BSTR propertyName,
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall raw_SetRdpProperty (
        /*[in]*/ BSTR propertyName,
        /*[in]*/ VARIANT Value ) = 0;
};

enum __MIDL_IRemoteDesktopClientActions_0001
{
    RemoteActionCharms = 0,
    RemoteActionAppbar = 1,
    RemoteActionSnap = 2,
    RemoteActionStartScreen = 3,
    RemoteActionAppSwitch = 4
};

enum __MIDL_IRemoteDesktopClientActions_0002
{
    SnapshotEncodingDataUri = 0
};

struct __declspec(uuid("7d54bc4e-1028-45d4-8b0a-b9b6bffba176"))
IRemoteDesktopClientActions : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT SuspendScreenUpdates ( );
    HRESULT ResumeScreenUpdates ( );
    HRESULT ExecuteRemoteAction (
        RemoteActionType remoteAction );
    _bstr_t GetSnapshot (
        SnapshotEncodingType snapshotEncoding,
        SnapshotFormatType snapshotFormat,
        unsigned long snapshotWidth,
        unsigned long snapshotHeight );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_SuspendScreenUpdates ( ) = 0;
      virtual HRESULT __stdcall raw_ResumeScreenUpdates ( ) = 0;
      virtual HRESULT __stdcall raw_ExecuteRemoteAction (
        /*[in]*/ RemoteActionType remoteAction ) = 0;
      virtual HRESULT __stdcall raw_GetSnapshot (
        /*[in]*/ SnapshotEncodingType snapshotEncoding,
        /*[in]*/ SnapshotFormatType snapshotFormat,
        /*[in]*/ unsigned long snapshotWidth,
        /*[in]*/ unsigned long snapshotHeight,
        /*[out,retval]*/ BSTR * snapshotData ) = 0;
};

enum __MIDL_IRemoteDesktopClientActions_0003
{
    SnapshotFormatPng = 0,
    SnapshotFormatJpeg = 1,
    SnapshotFormatBmp = 2
};

struct __declspec(uuid("260ec22d-8cbc-44b5-9e88-2a37f6c93ae9"))
IRemoteDesktopClientTouchPointer : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetEventsEnabled,put=PutEventsEnabled))
    VARIANT_BOOL EventsEnabled;
    __declspec(property(get=GetPointerSpeed,put=PutPointerSpeed))
    unsigned long PointerSpeed;

    //
    // Wrapper methods for error-handling
    //

    void PutEnabled (
        VARIANT_BOOL Enabled );
    VARIANT_BOOL GetEnabled ( );
    void PutEventsEnabled (
        VARIANT_BOOL EventsEnabled );
    VARIANT_BOOL GetEventsEnabled ( );
    void PutPointerSpeed (
        unsigned long PointerSpeed );
    unsigned long GetPointerSpeed ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_EventsEnabled (
        /*[in]*/ VARIANT_BOOL EventsEnabled ) = 0;
      virtual HRESULT __stdcall get_EventsEnabled (
        /*[out,retval]*/ VARIANT_BOOL * EventsEnabled ) = 0;
      virtual HRESULT __stdcall put_PointerSpeed (
        /*[in]*/ unsigned long PointerSpeed ) = 0;
      virtual HRESULT __stdcall get_PointerSpeed (
        /*[out,retval]*/ unsigned long * PointerSpeed ) = 0;
};

struct __declspec(uuid("57d25668-625a-4905-be4e-304caa13f89c"))
IRemoteDesktopClient : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSettings))
    IRemoteDesktopClientSettingsPtr Settings;
    __declspec(property(get=GetActions))
    IRemoteDesktopClientActionsPtr Actions;
    __declspec(property(get=GetTouchPointer))
    IRemoteDesktopClientTouchPointerPtr TouchPointer;

    //
    // Wrapper methods for error-handling
    //

    HRESULT Connect ( );
    HRESULT Disconnect ( );
    HRESULT Reconnect (
        unsigned long width,
        unsigned long height );
    IRemoteDesktopClientSettingsPtr GetSettings ( );
    IRemoteDesktopClientActionsPtr GetActions ( );
    IRemoteDesktopClientTouchPointerPtr GetTouchPointer ( );
    HRESULT DeleteSavedCredentials (
        _bstr_t serverName );
    HRESULT UpdateSessionDisplaySettings (
        unsigned long width,
        unsigned long height );
    HRESULT attachEvent (
        _bstr_t eventName,
        IDispatch * callback );
    HRESULT detachEvent (
        _bstr_t eventName,
        IDispatch * callback );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Connect ( ) = 0;
      virtual HRESULT __stdcall raw_Disconnect ( ) = 0;
      virtual HRESULT __stdcall raw_Reconnect (
        /*[in]*/ unsigned long width,
        /*[in]*/ unsigned long height ) = 0;
      virtual HRESULT __stdcall get_Settings (
        /*[out,retval]*/ struct IRemoteDesktopClientSettings * * Settings ) = 0;
      virtual HRESULT __stdcall get_Actions (
        /*[out,retval]*/ struct IRemoteDesktopClientActions * * Actions ) = 0;
      virtual HRESULT __stdcall get_TouchPointer (
        /*[out,retval]*/ struct IRemoteDesktopClientTouchPointer * * TouchPointer ) = 0;
      virtual HRESULT __stdcall raw_DeleteSavedCredentials (
        /*[in]*/ BSTR serverName ) = 0;
      virtual HRESULT __stdcall raw_UpdateSessionDisplaySettings (
        /*[in]*/ unsigned long width,
        /*[in]*/ unsigned long height ) = 0;
      virtual HRESULT __stdcall raw_attachEvent (
        /*[in]*/ BSTR eventName,
        /*[in]*/ IDispatch * callback ) = 0;
      virtual HRESULT __stdcall raw_detachEvent (
        /*[in]*/ BSTR eventName,
        /*[in]*/ IDispatch * callback ) = 0;
};

//
// Named GUID constants initializations
//

extern "C" const GUID __declspec(selectany) LIBID_MSTSCLib =
    {0x8c11efa1,0x92c3,0x11d1,{0xbc,0x1e,0x00,0xc0,0x4f,0xa3,0x14,0x89}};
extern "C" const GUID __declspec(selectany) DIID_IMsTscAxEvents =
    {0x336d5562,0xefa8,0x482e,{0x8c,0xb3,0xc5,0xc0,0xfc,0x7a,0x7d,0xb6}};
extern "C" const GUID __declspec(selectany) CLSID_MsTscAxNotSafeForScripting =
    {0xa41a4187,0x5a86,0x4e26,{0xb4,0x0a,0x85,0x6f,0x90,0x35,0xd9,0xcb}};
extern "C" const GUID __declspec(selectany) IID_IMsTscAx_Redist =
    {0x327bb5cd,0x834e,0x4400,{0xae,0xf2,0xb3,0x0e,0x15,0xe5,0xd6,0x82}};
extern "C" const GUID __declspec(selectany) IID_IMsTscSecuredSettings =
    {0xc9d65442,0xa0f9,0x45b2,{0x8f,0x73,0xd6,0x1d,0x2d,0xb8,0xcb,0xb6}};
extern "C" const GUID __declspec(selectany) IID_IMsTscAdvancedSettings =
    {0x809945cc,0x4b3b,0x4a92,{0xa6,0xb0,0xdb,0xf9,0xb5,0xf2,0xef,0x2d}};
extern "C" const GUID __declspec(selectany) IID_IMsTscDebug =
    {0x209d0eb9,0x6254,0x47b1,{0x90,0x33,0xa9,0x8d,0xae,0x55,0xbb,0x27}};
extern "C" const GUID __declspec(selectany) IID_IMsTscAx =
    {0x8c11efae,0x92c3,0x11d1,{0xbc,0x1e,0x00,0xc0,0x4f,0xa3,0x14,0x89}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpClientAdvancedSettings =
    {0x3c65b4ab,0x12b3,0x465b,{0xac,0xd4,0xb8,0xda,0xd3,0xbf,0xf9,0xe2}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpClientSecuredSettings =
    {0x605befcf,0x39c1,0x45cc,{0xa8,0x11,0x06,0x8f,0xb7,0xbe,0x34,0x6d}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpClient =
    {0x92b4a539,0x7115,0x4b7c,{0xa5,0xa9,0xe5,0xd9,0xef,0xc2,0x78,0x0a}};
extern "C" const GUID __declspec(selectany) IID_IMsTscNonScriptable =
    {0xc1e6743a,0x41c1,0x4a74,{0x83,0x2a,0x0d,0xd0,0x6c,0x1c,0x7a,0x0e}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpClientNonScriptable =
    {0x2f079c4c,0x87b2,0x4afd,{0x97,0xab,0x20,0xcd,0xb4,0x30,0x38,0xae}};
extern "C" const GUID __declspec(selectany) CLSID_MsTscAx =
    {0x1fb464c8,0x09bb,0x4017,{0xa2,0xf5,0xeb,0x74,0x2f,0x04,0x39,0x2f}};
extern "C" const GUID __declspec(selectany) CLSID_MsRdpClientNotSafeForScripting =
    {0x7cacbd7b,0x0d99,0x468f,{0xac,0x33,0x22,0xe4,0x95,0xc0,0xaf,0xe5}};
extern "C" const GUID __declspec(selectany) CLSID_MsRdpClient =
    {0x791fa017,0x2de3,0x492e,{0xac,0xc5,0x53,0xc6,0x7a,0x2b,0x94,0xd0}};
extern "C" const GUID __declspec(selectany) CLSID_MsRdpClient2NotSafeForScripting =
    {0x3523c2fb,0x4031,0x44e4,{0x9a,0x3b,0xf1,0xe9,0x49,0x86,0xee,0x7f}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpClientAdvancedSettings2 =
    {0x9ac42117,0x2b76,0x4320,{0xaa,0x44,0x0e,0x61,0x6a,0xb8,0x43,0x7b}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpClient2 =
    {0xe7e17dc4,0x3b71,0x4ba7,{0xa8,0xe6,0x28,0x1f,0xfa,0xdc,0xa2,0x8f}};
extern "C" const GUID __declspec(selectany) CLSID_MsRdpClient2 =
    {0x9059f30f,0x4eb1,0x4bd2,{0x9f,0xdc,0x36,0xf4,0x3a,0x21,0x8f,0x4a}};
extern "C" const GUID __declspec(selectany) CLSID_MsRdpClient2a =
    {0x971127bb,0x259f,0x48c2,{0xbd,0x75,0x5f,0x97,0xa3,0x33,0x15,0x51}};
extern "C" const GUID __declspec(selectany) CLSID_MsRdpClient3NotSafeForScripting =
    {0xace575fd,0x1fcf,0x4074,{0x94,0x01,0xeb,0xab,0x99,0x0f,0xa9,0xde}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpClientAdvancedSettings3 =
    {0x19cd856b,0xc542,0x4c53,{0xac,0xee,0xf1,0x27,0xe3,0xbe,0x1a,0x59}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpClient3 =
    {0x91b7cbc5,0xa72e,0x4fa0,{0x93,0x00,0xd6,0x47,0xd7,0xe8,0x97,0xff}};
extern "C" const GUID __declspec(selectany) CLSID_MsRdpClient3 =
    {0x7584c670,0x2274,0x4efb,{0xb0,0x0b,0xd6,0xaa,0xba,0x6d,0x38,0x50}};
extern "C" const GUID __declspec(selectany) CLSID_MsRdpClient3a =
    {0x6a6f4b83,0x45c5,0x4ca9,{0xbd,0xd9,0x0d,0x81,0xc1,0x22,0x95,0xe4}};
extern "C" const GUID __declspec(selectany) CLSID_MsRdpClient4NotSafeForScripting =
    {0x6ae29350,0x321b,0x42be,{0xbb,0xe5,0x12,0xfb,0x52,0x70,0xc0,0xde}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpClientAdvancedSettings4 =
    {0xfba7f64e,0x7345,0x4405,{0xae,0x50,0xfa,0x4a,0x76,0x3d,0xc0,0xde}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpClient4 =
    {0x095e0738,0xd97d,0x488b,{0xb9,0xf6,0xdd,0x0e,0x8d,0x66,0xc0,0xde}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpClientNonScriptable2 =
    {0x17a5e535,0x4072,0x4fa4,{0xaf,0x32,0xc8,0xd0,0xd4,0x73,0x45,0xe9}};
extern "C" const GUID __declspec(selectany) CLSID_MsRdpClient4 =
    {0x4edcb26c,0xd24c,0x4e72,{0xaf,0x07,0xb5,0x76,0x69,0x9a,0xc0,0xde}};
extern "C" const GUID __declspec(selectany) CLSID_MsRdpClient4a =
    {0x54ce37e0,0x9834,0x41ae,{0x98,0x96,0x4d,0xab,0x69,0xdc,0x02,0x2b}};
extern "C" const GUID __declspec(selectany) CLSID_MsRdpClient5NotSafeForScripting =
    {0x4eb2f086,0xc818,0x447e,{0xb3,0x2c,0xc5,0x1c,0xe2,0xb3,0x0d,0x31}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpClientTransportSettings =
    {0x720298c0,0xa099,0x46f5,{0x9f,0x82,0x96,0x92,0x1b,0xae,0x47,0x01}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpClientAdvancedSettings5 =
    {0xfba7f64e,0x6783,0x4405,{0xda,0x45,0xfa,0x4a,0x76,0x3d,0xab,0xd0}};
extern "C" const GUID __declspec(selectany) IID_ITSRemoteProgram =
    {0xfdd029f9,0x467a,0x4c49,{0x85,0x29,0x64,0xb5,0x21,0xdb,0xd1,0xb4}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpClientShell =
    {0xd012ae6d,0xc19a,0x4bfe,{0xb3,0x67,0x20,0x1f,0x89,0x11,0xf1,0x34}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpClient5 =
    {0x4eb5335b,0x6429,0x477d,{0xb9,0x22,0xe0,0x6a,0x28,0xec,0xd8,0xbf}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpDevice =
    {0x60c3b9c8,0x9e92,0x4f5e,{0xa3,0xe7,0x60,0x4a,0x91,0x20,0x93,0xea}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpDeviceCollection =
    {0x56540617,0xd281,0x488c,{0x87,0x38,0x6a,0x8f,0xdf,0x64,0xa1,0x18}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpDrive =
    {0xd28b5458,0xf694,0x47a8,{0x8e,0x61,0x40,0x35,0x6a,0x76,0x7e,0x46}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpDriveCollection =
    {0x7ff17599,0xda2c,0x4677,{0xad,0x35,0xf6,0x0c,0x04,0xfe,0x15,0x85}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpClientNonScriptable3 =
    {0xb3378d90,0x0728,0x45c7,{0x8e,0xd7,0xb6,0x15,0x9f,0xb9,0x22,0x19}};
extern "C" const GUID __declspec(selectany) CLSID_MsRdpClient5 =
    {0x4eb89ff4,0x7f78,0x4a0f,{0x8b,0x8d,0x2b,0xf0,0x2e,0x94,0xe4,0xb2}};
extern "C" const GUID __declspec(selectany) CLSID_MsRdpClient6NotSafeForScripting =
    {0xd2ea46a7,0xc2bf,0x426b,{0xaf,0x24,0xe1,0x9c,0x44,0x45,0x63,0x99}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpClientAdvancedSettings6 =
    {0x222c4b5d,0x45d9,0x4df0,{0xa7,0xc6,0x60,0xcf,0x90,0x89,0xd2,0x85}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpClientTransportSettings2 =
    {0x67341688,0xd606,0x4c73,{0xa5,0xd2,0x2e,0x04,0x89,0x00,0x93,0x19}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpClient6 =
    {0xd43b7d80,0x8517,0x4b6d,{0x9e,0xac,0x96,0xad,0x68,0x00,0xd7,0xf2}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpClientNonScriptable4 =
    {0xf50fa8aa,0x1c7d,0x4f59,{0xb1,0x5c,0xa9,0x0c,0xac,0xae,0x1f,0xcb}};
extern "C" const GUID __declspec(selectany) CLSID_MsRdpClient6 =
    {0x7390f3d8,0x0439,0x4c05,{0x91,0xe3,0xcf,0x5c,0xb2,0x90,0xc3,0xd0}};
extern "C" const GUID __declspec(selectany) CLSID_MsRdpClient7NotSafeForScripting =
    {0x54d38bf7,0xb1ef,0x4479,{0x96,0x74,0x1b,0xd6,0xea,0x46,0x52,0x58}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpClientAdvancedSettings7 =
    {0x26036036,0x4010,0x4578,{0x80,0x91,0x0d,0xb9,0xa1,0xed,0xf9,0xc3}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpClientTransportSettings3 =
    {0x3d5b21ac,0x748d,0x41de,{0x8f,0x30,0xe1,0x51,0x69,0x58,0x6b,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpClientSecuredSettings2 =
    {0x25f2ce20,0x8b1d,0x4971,{0xa7,0xcd,0x54,0x9d,0xae,0x20,0x1f,0xc0}};
extern "C" const GUID __declspec(selectany) IID_ITSRemoteProgram2 =
    {0x92c38a7d,0x241a,0x418c,{0x99,0x36,0x09,0x98,0x72,0xc9,0xaf,0x20}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpClient7 =
    {0xb2a5b5ce,0x3461,0x444a,{0x91,0xd4,0xad,0xd2,0x6d,0x07,0x06,0x38}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpClientNonScriptable5 =
    {0x4f6996d5,0xd7b1,0x412c,{0xb0,0xff,0x06,0x37,0x18,0x56,0x69,0x07}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpPreferredRedirectionInfo =
    {0xfdd029f9,0x9574,0x4def,{0x85,0x29,0x64,0xb5,0x21,0xcc,0xca,0xa4}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpExtendedSettings =
    {0x302d8188,0x0052,0x4807,{0x80,0x6a,0x36,0x2b,0x62,0x8f,0x9a,0xc5}};
extern "C" const GUID __declspec(selectany) CLSID_MsRdpClient7 =
    {0xa9d7038d,0xb5ed,0x472e,{0x9c,0x47,0x94,0xbe,0xa9,0x0a,0x59,0x10}};
extern "C" const GUID __declspec(selectany) CLSID_MsRdpClient8NotSafeForScripting =
    {0xa3bc03a0,0x041d,0x42e3,{0xad,0x22,0x88,0x2b,0x78,0x65,0xc9,0xc5}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpClientAdvancedSettings8 =
    {0x89acb528,0x2557,0x4d16,{0x86,0x25,0x22,0x6a,0x30,0xe9,0x7e,0x9a}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpClient8 =
    {0x4247e044,0x9271,0x43a9,{0xbc,0x49,0xe2,0xad,0x9e,0x85,0x5d,0x62}};
extern "C" const GUID __declspec(selectany) CLSID_MsRdpClient8 =
    {0x5f681803,0x2900,0x4c43,{0xa1,0xcc,0xcf,0x40,0x54,0x04,0xa6,0x76}};
extern "C" const GUID __declspec(selectany) CLSID_MsRdpClient9NotSafeForScripting =
    {0x8b918b82,0x7985,0x4c24,{0x89,0xdf,0xc3,0x3a,0xd2,0xbb,0xfb,0xcd}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpClientTransportSettings4 =
    {0x011c3236,0x4d81,0x4515,{0x91,0x43,0x06,0x7a,0xb6,0x30,0xd2,0x99}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpClient9 =
    {0x28904001,0x04b6,0x436c,{0xa5,0x5b,0x0a,0xf1,0xa0,0x88,0x3d,0xc9}};
extern "C" const GUID __declspec(selectany) CLSID_MsRdpClient9 =
    {0x301b94ba,0x5d25,0x4a12,{0xbf,0xfe,0x3b,0x6e,0x7a,0x61,0x65,0x85}};
extern "C" const GUID __declspec(selectany) CLSID_MsRdpClient10NotSafeForScripting =
    {0xa0c63c30,0xf08d,0x4ab4,{0x90,0x7c,0x34,0x90,0x5d,0x77,0x0c,0x7d}};
extern "C" const GUID __declspec(selectany) IID_ITSRemoteProgram3 =
    {0x4b84ea77,0xacea,0x418c,{0x88,0x1a,0x4a,0x8c,0x28,0xab,0x15,0x10}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpClient10 =
    {0x7ed92c39,0xeb38,0x4927,{0xa7,0x0a,0x70,0x8a,0xc5,0xa5,0x93,0x21}};
extern "C" const GUID __declspec(selectany) CLSID_MsRdpClient10 =
    {0xc0efa91a,0xeeb7,0x41c7,{0x97,0xfa,0xf0,0xed,0x64,0x5e,0xfb,0x24}};
extern "C" const GUID __declspec(selectany) CLSID_MsRdpClient11NotSafeForScripting =
    {0x1df7c823,0xb2d4,0x4b54,{0x97,0x5a,0xf2,0xac,0x5d,0x7c,0xf8,0xb8}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpClientNonScriptable6 =
    {0x05293249,0xb28b,0x4bd8,{0xbe,0x64,0x1b,0x2f,0x49,0x6b,0x91,0x0e}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpCameraRedirConfig =
    {0x09750604,0xd625,0x47c1,{0x9f,0xcd,0xf0,0x9f,0x73,0x57,0x05,0xd7}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpCameraRedirConfigCollection =
    {0xae45252b,0xaaab,0x4504,{0xb6,0x81,0x64,0x9d,0x60,0x73,0xa3,0x7a}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpClipboard =
    {0x2e769ee8,0x00c7,0x43dc,{0xaf,0xd9,0x23,0x5d,0x75,0xb7,0x2a,0x40}};
extern "C" const GUID __declspec(selectany) IID_IMsRdpClientNonScriptable7 =
    {0x71b4a60a,0xfe21,0x46d8,{0xa3,0x9b,0x8e,0x32,0xba,0x0c,0x5e,0xcc}};
extern "C" const GUID __declspec(selectany) CLSID_MsRdpClient11 =
    {0x22a7e88c,0x5bf5,0x4de6,{0xb6,0x87,0x60,0xf7,0x33,0x1d,0xf1,0x90}};
extern "C" const GUID __declspec(selectany) DIID_IRemoteDesktopClientEvents =
    {0x079863b7,0x6d47,0x4105,{0x8b,0xfe,0x0c,0xdc,0xb3,0x60,0xe6,0x7d}};
extern "C" const GUID __declspec(selectany) CLSID_RemoteDesktopClient =
    {0xeab16c5d,0xeed1,0x4e95,{0x86,0x8b,0x0f,0xba,0x1b,0x42,0xc0,0x92}};
extern "C" const GUID __declspec(selectany) IID_IRemoteDesktopClientSettings =
    {0x48a0f2a7,0x2713,0x431f,{0xbb,0xac,0x6f,0x45,0x58,0xe7,0xd6,0x4d}};
extern "C" const GUID __declspec(selectany) IID_IRemoteDesktopClientActions =
    {0x7d54bc4e,0x1028,0x45d4,{0x8b,0x0a,0xb9,0xb6,0xbf,0xfb,0xa1,0x76}};
extern "C" const GUID __declspec(selectany) IID_IRemoteDesktopClientTouchPointer =
    {0x260ec22d,0x8cbc,0x44b5,{0x9e,0x88,0x2a,0x37,0xf6,0xc9,0x3a,0xe9}};
extern "C" const GUID __declspec(selectany) IID_IRemoteDesktopClient =
    {0x57d25668,0x625a,0x4905,{0xbe,0x4e,0x30,0x4c,0xaa,0x13,0xf8,0x9c}};

//
// Wrapper method implementations
//

#include "mstscax.tli"

} // namespace MSTSCLib

#pragma pack(pop)
